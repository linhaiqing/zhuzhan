<?phpnamespace app;use Move\db;class user extends home{	protected $userid = "";	public function __construct()	{		parent::__construct();		$this->userid = $this->userid();		if (!$this->userid) {			ajax('请登录', -99);		}	}	public function userinfo()	{		$ret = [];		$ret['baseinfo'] = db::table('user')->where(['id' => $this->userid])->field("id,username,moble,tpwdsetting,alipay,email,invit,truename,idcard,idcardtype,idcard_rz")->find();		if ($ret['baseinfo']['moble']) {			$ret['baseinfo']['moble'] = str_replace("+86|", "", $ret['baseinfo']['moble']);		}		if ($ret['baseinfo']['idcard']) {			$ret['baseinfo']['idcard'] = substr_replace($ret['baseinfo']['idcard'], '********', 4, 10);		}		$ret['baseinfo']['invit'] = 'http://' . $_SERVER['HTTP_HOST'] . "/wap/user/reg_h?move_invit=" . $ret['baseinfo']['invit'];		$user_coin = db::table("user_coin")->where(['userid' => $this->userid])->find();		$mymc_coin = new \mymc\coin();		$coin_select = $mymc_coin->all_rmb(1);		$ret['baseinfo']['finan']['name'] = array_keys($coin_select)[0];		foreach ($coin_select as $k => $v) {			$ret['baseinfo']['finan'][$v['name']] = $user_coin[$v['name']];		}		$ret['baseinfo']['finan']['zzc'] = num(parent::check_zzc());		ajax($ret, 1);	}	public function finan()	{		$user_coin = db::table("user_coin")->where(['userid' => $this->userid])->find();		$mymc_coin = new \mymc\coin();		$all_xnb = $mymc_coin->select(1);		$paiming = md('user')->paiming($this->userid);		$market_list = $this->getMarketInfo();		$res = [];		foreach ($all_xnb as $k => $v) {			$v['price'] = isset($market_list[$v['name'] . '_cny']['new_price']) ? $market_list[$v['name'] . '_cny']['new_price'] : 1;			$all_xnb[$k]['dongjie'] = $user_coin[$v['name'] . 'd'];			$all_xnb[$k]['zongji'] = $user_coin[$v['name']] + $user_coin[$v['name'] . 'd'];			$all_xnb[$k]['zhehe'] = $all_xnb[$k]['zongji'] * $v['price'];			$coin = $all_xnb[$k];			$zhehe = $v['name'] == 'usd' ? '---' : num($coin['zhehe']);			$res[$coin['name']] = ['cname' => $coin['title'], 'title' => strtoupper($coin['name']), 'ename' => $coin['name'], 'type' => $coin['type'], 'wallet' => $coin['wallet'], 'img' => 'http://' . $_SERVER["HTTP_HOST"] . "/upload/" . $coin['img'], 'keyong' => num($user_coin[$v['name']]), 'dongjie' => num($coin['dongjie']), 'zongji' => num($coin['zongji']), 'zhehe' => $zhehe, 'status' => $coin['status'],];		}		ajax(["paiming" => $paiming, "finan" => $res], 1);	}	public function password()	{		$oldpassword = iv('post.oldpassword', 'password', '旧登录密码格式错误');		$newpassword = iv('post.newpassword', 'password', '新登录密码格式错误');		show(md('user')->set_password($this->userid, $oldpassword, $newpassword));	}	public function paypassword()	{		$oldpaypassword = iv('post.oldpaypassword', 'password', '旧交易密码格式错误');		$newpaypassword = iv('post.newpaypassword', 'password' . '新交易密码格式错误');		show(md('user')->set_paypassword($this->userid, $oldpaypassword, $newpaypassword));	}	public function moble()	{		$ret['moble'] = parent::getUserInfo("moble");		ajax($ret, 1);	}	public function change_old_moble()	{		parent::doMoble("change_old_moble", "send", parent::getUserInfo("moble"));	}	public function old_moble_up()	{		$user = db::table("user")->where(["id" => $this->userid])->find();		$pre = parent::doMoble("change_old_moble", "check", $user['moble'], 1);		mc($pre, null);		$auth_code = parent::getRandCode(16);		mc("ChangeMoble_Uid_" . $this->userid . "_Code", $auth_code);		ajax(["auth_code" => $auth_code], 1);	}	public function change_new_moble()	{		$mobles = "+86";		$moble = iv('moble', 'moble', '新手机号码格式错误');		$moble = $mobles . '|' . $moble;		if (db::table("user")->where(["moble" => $moble])->find()) {			ajax("该手机号已绑定其他账户,请更换");		}		parent::doMoble("change_new_moble", "send", $moble);	}	public function new_moble_up()	{		$mobles = "+86";		$moble = iv('moble', 'moble', '手机号码格式错误');		$auth_code = iv("auth_code", 'dw', '授权码格式错误' . implode("|", $_GET));		$moble = $mobles . '|' . $moble;		$user = db::table("user")->where(["id" => $this->userid])->find();		$pre = parent::doMoble("change_new_moble", "check", $moble, 1);		$mc_key = "ChangeMoble_Uid_" . $this->userid . "_Code";		$_auth_code = mc($mc_key);		if (!$_auth_code) {			ajax("授权码已经失效");		}		if ($_auth_code != $auth_code) {			ajax("授权码不正确");		}		$res = md('user')->set_moble($this->userid, $moble);		if (isset($res[1]) && $res[1]) {			mc($pre, null);			mc($mc_key, null);			ajax('操作成功', 1);		} else {			ajax($res[0]);		}	}	public function goods()	{		if (!$this->userid) {			ajax("请先登录");		}		$where["userid"] = $this->userid;		$res = parent::pullpage("user_goods", $where, "id desc");		if ($res ['list']) {			foreach ($res ['list'] as $k => $v) {				$res['list'][$k]['moble'] = substr_replace(str_replace("|", " ", $v['moble']), '****', 3, 4);				$res['list'][$k]['addtime'] = addtime($v['addtime']);			}		}		ajax($res, 1);	}	public function goods_up()	{		$name = iv('post.name', 'a', '备注名称格式错误');		$truename = iv('post.truename', 'truename', '联系姓名格式错误');		$moble = iv('post.moble', 'moble', '联系电话格式错误');		$prov = iv('post.prov', 'a', '省份错误');		$city = iv('post.city', 'a', '城市错误');		$addr = iv('post.addr', 'a', '联系地址格式错误');		$paypassword = iv('post.paypassword', 'password', '交易密码格式错误');		$res = md('user')->add_goods($this->userid, $name, $truename, $moble, $prov, $city, $addr, $paypassword);		if (isset($res[1]) && $res[1]) {			ajax('操作成功', 1);		} else {			ajax($res[0]);		}	}	public function goods_del()	{		$id = iv('post.id', 'd', '删除编号格式错误');		$paypassword = iv('post.paypassword', 'password', '交易密码格式错误');		$res = md('user')->del_goods($this->userid, $id, $paypassword);		if (isset($res[1]) && $res[1]) {			ajax('操作成功', 1);		} else {			ajax($res[0]);		}	}	public function log()	{		$where['userid'] = $this->userid;		$res = parent::pullpage("user_log", $where, "id desc");		foreach ($res['list'] as $k => $v) {			$res['list'][$k]['addtime'] = addtime($v['addtime'], "m-d H:i");		}		ajax($res, 1);	}	public function help_info()	{		$news = db::table("help_news")->where(["userid" => $this->userid, "status" => 2])->count();		ajax($news, 1);	}	public function help_type()	{		$help_type = db::table("help_type")->where(["status" => 1])->select();		$username = db::table("user")->where(["id" => $this->userid])->find('username');		$res = [];		$res['help_type'] = $help_type;		$res['username'] = $username;		ajax($res, 1);	}	public function help_up()	{		$type = iv("post.type", "d", "问题类型格式错误");		$contact = iv("post.contact");		$content = iv("post.content", "a", "问题内容格式错误");		$paypassword = iv("post.paypassword", "dw", "密码格式错误");		$user1 = db::table("user")->where(["id" => $this->userid])->find();		if (!$user1) {			ajax("请先登录");		}		if (mb_strlen($content) > 200) {			ajax("问题过长");		}		if (hashs($paypassword) != $user1["paypassword"]) {			ajax("交易密码错误");		}		$help_type = db::table("help_type")->where(["id" => $type])->find();		if (!$help_type) {			ajax("问题类型错误");		}		$rs = db::table("help")->add(["userid" => $this->userid, "type" => $type, "content" => $content, "contact" => $contact, "addtime" => time(), "status" => 2]);		if ($rs) {			ajax("保存成功,请耐心等待客服回答", 1);		} else {			ajax("操作失败");		}	}	public function helplog()	{		$status = iv("get.status");		$where = [];		if ($status) {			$where['status'] = $status;		}		$where['userid'] = $this->userid;		$res = parent::pullpage("help", $where, "id desc");		$list = $res['list'];		$username = db::table("user")->where(["id" => $this->userid])->find();		$typelist = db::table("help_type")->where(['status' => 1])->select();		foreach ($list as $k => $v) {			foreach ($typelist as $k2 => $v2) {				if ($v["type"] == $v2['id']) {					$list[$k]["typetitle"] = $v2["type"];				}				$list[$k]["username"] = $username["username"];				$list[$k]["addtime"] = addtime($v['addtime']);				$list[$k]["endtime"] = addtime($v['endtime']);			}		}		$res['list'] = $list;		ajax($res, 1);	}	public function news()	{		$status = iv("get.status");		$where = [];		if ($status) {			$where['status'] = $status;		} else {			$where['status#!='] = 0;		}		$where['userid'] = $this->userid;		$res = parent::pullpage("help_news", $where, "id desc");		$list = $res['list'];		foreach ($list as $k => $v) {			$list[$k]["addtime"] = addtime($v['addtime']);		}		$res['list'] = $list;		ajax($res, 1);	}	public function log_del()	{		$id = iv("post.id", "d", "问题ID格式错误");		$paypassword = iv("post.paypassword", "dw", "密码格式错误");		$user1 = db::table("user")->where(["id" => $this->userid])->find();		if (!$user1) {			ajax("请先登录");		}		if (hashs($paypassword) != $user1["paypassword"]) {			ajax("交易密码错误");		}		$help = db::table("help")->where(["id" => $id, "userid" => $this->userid])->find();		if (!$help) {			ajax("问题不存在");		}		$rs = db::table("help")->where(["id" => $id])->delete();		if ($rs) {			ajax("删除成功", 1);		} else {			ajax("删除失败");		}	}	public function news_del()	{		$id = iv("post.id", "d", "问题ID格式错误");		$paypassword = iv("post.paypassword", "dw", "密码格式错误");		$user1 = db::table("user")->where(["id" => $this->userid])->find();		if (!$user1) {			ajax("请先登录");		}		if (hashs($paypassword) != $user1["paypassword"]) {			ajax("交易密码错误");		}		$news = db::table("help_news")->where(["userid" => $this->userid, "id" => $id])->find();		if (!$news) {			ajax("消息不存在");		}		$rs = db::table("help_news")->where(["id" => $id])->delete();		if ($rs) {			ajax("操作成功", 1);		} else {			ajax("操作失败");		}	}	public function news_yes()	{		$id = iv("post.id", "d", "参数错误");		$user1 = db::table("user")->where(["id" => session('userid')])->find();		if (!$user1) {			ajax("请先登录");		}		$news = db::table("help_news")->where(["userid" => $this->userid, "id" => $id])->find();		if (!$news) {			ajax("消息不存在");		}		$status = 0;		if ($news["status"] == 2) {			$status = 1;		} elseif ($news["status"] == 1) {			$status = 2;		} else {			ajax("消息状态错误");		}		$rs = db::table("help_news")->where(["id" => $id])->save(["status" => $status]);		if ($rs) {			ajax("操作成功", 1);		} else {			ajax("操作失败");		}	}}