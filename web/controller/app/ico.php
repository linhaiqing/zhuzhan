<?phpnamespace app;use Move\db;use Move\ext\page;class ico extends home{	public function __construct()	{		parent::__construct();	}	public function index()	{		$type = iv("type", "d", "条件错误", 1);		if ($type == 1) {			$where["status"] = 1;			$where["strtime#>"] = time();		} else if ($type == 2) {			$where["status"] = 1;			$where["strtime#<"] = time();		} else if ($type == 3) {			$where["status#in"] = [2, 3, 4];		} else {			$where["status#!="] = 0;		}		$pages = parent::pullpage("ico", $where, "endtime desc", 3);		$now_ico = $pages['list'];		foreach ($now_ico as $k => $v) {			$now_ico[$k]['img'] = "/upload/" . $v['img'];			$now_ico[$k]["day"] = round(($v["endtime"] - time()) / 86400);			if ($now_ico[$k]["day"] < 0) {				$now_ico[$k]["day"] = 0;			}			if ($v["strtime"] > time()) {				$now_ico[$k]["kaishi"] = 1;			} else if ($v["strtime"] <= time() && $v["endtime"] < time()) {				$now_ico[$k]["kaishi"] = 2;			}			$now_ico[$k]["bili"] = $v["gete"] / $v["mum"] * 100;			if (($v["gete"] / $v["mum"]) > 1) {				$now_ico[$k]["bili"] = 100;			}		}		$pages['list'] = $now_ico;		ajax($pages, 1);	}	public function details()	{		$id = iv("id", "d", "参数错误");		$ico = db::table("ico")->where(["id" => $id])->find();		$ico["day"] = round(($ico["endtime"] - time()) / 86400);		if ($ico["day"] < 0) {			$ico["day"] = 0;		}		$ico["endtime"] = addtime($ico["endtime"]);		$ico['img'] = '/upload/' . $ico['img'];		$pattern = "/upload/";		preg_match($pattern, $ico['content'], $match);		if ($match) {			$ico['content'] = str_replace($_SERVER . "/upload/", "/upload/", $ico['content']);		}		if ($ico["strtime"] > time()) {			$ico["kaishi"] = 1;		} else if ($ico["strtime"] <= time() && $ico["endtime"] > time()) {			$ico["kaishi"] = 2;		} else if ($ico["endtime"] < time()) {			$ico["kaishi"] = 3;		}		$ico["bili"] = $ico["gete"] / $ico["mum"] * 100;		if (($ico["gete"] / $ico["mum"]) > 1) {			$ico["bili"] = 100;		}		if (isset($ico["coin_data"])) {			$coin_data2 = explode(",", rtrim($ico["coin_data"], ","));			foreach ($coin_data2 as $k => $v) {				$mymc_coin = new \mymc\coin();				$coin = $mymc_coin->find(['id' => $v]);				$coin_data[$coin["name"]] = $coin["title"];			}		} else {			$coin_data = '';		}		$ico_bili = db::table("ico_bili")->where(["pid" => $id, "status" => 1])->order("strtime asc")->select();		foreach ($ico_bili as $k => $v) {			$ico_bili[$k]['strtime'] = addtime($v['strtime'], 'y-m-d');			$ico_bili[$k]['endtime'] = addtime($v['endtime'], 'y-m-d');			$ico_bili[$k]['bili'] = num($v['bili'], 0);		}		$ico['data'] = $coin_data;		$ico['huibao'] = $ico_bili;		ajax($ico, 1);	}	public function up()	{		$this->userid = $this->userid();		$id = iv("post.id", "d", "ID格式错误");		$num = iv("post.num", "xnb", "数量格式错误");		$coin = iv("post.coin", "w", "币种格式错误");		$paypassword = iv("post.paypassword", "password", "密码格式格式错误");		if (!$this->userid) {			ajax("请先登录");		}		$user1 = db::table("user")->where(["id" => $this->userid])->find();		if (empty($user1['paypassword'])) {			ajax('交易密码非法');		}		if (hashs($paypassword) != $user1['paypassword']) {			ajax('交易密码错误');		}		$res = md('ico')->up($user1['id'], $id, $coin, $num);		if (isset($res[1]) && $res[1]) {			ajax($res[0], 1);		} else {			ajax($res[0]);		}	}	public function log()	{		$this->userid = $this->userid();		if ($this->userid) {			$where = ['userid' => $this->userid];			$pages = parent::pullpage("ico_log", $where, "id desc", 5);		} else {			$show = [];			$list = [];		}		foreach ($pages['list'] as $k => $v) {			$pages['list'][$k]['addtime'] = addtime($v['addtime']);		}		ajax($pages, 1);	}	public function hangqing()	{		$this->userid = $this->userid(1);		$coin = iv("post.coin", "w", "众筹币种币种错误");		$coinpay = iv("post.coinpay", "w", "支付币种错误");		if ($coin == $coinpay) {			$bili = 1;		} else {			if ($coin != "cny") {				$market = db::table("trade_market")->where(["name" => $coin . "_cny"])->find();			} else {				$market["new_price"] = 1;			}			if (empty($market) || !$market["new_price"]) {				$market["new_price"] = 1;			}			if ($coinpay != "cny") {				$market_pay = db::table("trade_market")->where(["name" => $coinpay . "_cny"])->find();			} else {				$market_pay["new_price"] = 1;			}			if (empty($market_pay) || !$market_pay["new_price"]) {				$market_pay["new_price"] = 1;			}			$bili = $market["new_price"] / $market_pay["new_price"];		}		if ($this->userid) {			$my_coin = db::table("user_coin")->where(['userid' => $this->userid])->find($coinpay);		} else {			$my_coin = 0;		}		$res = [];		$res['coin'] = $my_coin;		$res['bili'] = $bili;		if ($res) {			ajax($res, 1);		} else {			ajax("err", 0);		}	}} 