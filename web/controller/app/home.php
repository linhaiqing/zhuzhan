<?phpnamespace app;use Move\db;class home extends \move\mvc\Controller{	protected $host;	protected $config = [];	public function __construct()	{		parent::__construct();		$this->host = $_SERVER['REQUEST_SCHEME'] . "://" . APP_HOST;		$_GET['ajax'] = 1;		$this->config = md('sys_config')->lists();		$this->addPrefix = true;		$this->imagePrefix = $this->addPrefix ? $this->host . "/upload" : "";	}	public function fixImgPath($imgpath)	{		if (!is_string($imgpath)) return;		return $this->addPrefix ? $this->imagePrefix . $imgpath : $imgpath;	}	protected function userid($type = 0)	{		if ((!isset($_SERVER['HTTP_TOKEN']) || !$_SERVER['HTTP_ID'] || !$_SERVER['HTTP_TOKEN'])) {			if (!isset($_GET['ID'])) {				if ($uid = session('userid')) return $uid;				if (!$type) {					ajax('请先登录', -99);				} else {					return null;				}			}		}		$http_id = intval(trim($_SERVER['HTTP_ID']));		if (!$http_id || !check($http_id, "d")) {			if (!$type) {				ajax("HTTP_ID 不存在或格式错误!", -99);			} else {				return null;			}		}		$http_token = trim($_SERVER['HTTP_TOKEN']);		if (!check($http_token, "wd")) {			if (!$type) {				ajax("HTTP_TOKEN 格式错误!", -99);			} else {				return null;			}		}		if ($res = db::table("user")->where(['id' => $http_id])->find()) {			if ($res['token'] && $res['token'] == $http_token) {				$user_id = $http_id;				if (!$res['paypassword']) {					if (!$type) {						ajax('请完善交易密码', -97);					} else {						session('userid', $user_id);						return $user_id;					}				}				mc(md5('APP_AUTH_ID_' . $user_id), $res['token']);				session('userid', $user_id);				return $user_id;			} else {				if (!$type) {					ajax("HTTP_TOKEN 已失效", -99);				} else {					return null;				}			}		} else {			if (!$type) {				ajax("HTTP_ID 用户不存在", -99);			} else {				return null;			}		}	}	protected function getUserInfo($field = "")	{		$res = db::table("user")->where(["id" => $this->userid()])->find();		if (!$res) {			ajax("getUserInfo 获取失败!");		}		if (!$field) {			return $res;		} else {			return isset($res[$field]) ? $res[$field] : ajax("getUserInfo " . $field . " 不存在");		}	}	protected function check_zzc()	{		$this->userid = $this->userid();		if ($this->userid) {			$mymc_coin = new \mymc\coin();			$all_xnb = $mymc_coin->all_xnb(1);			$all_gjb = $mymc_coin->all_rmb(1);			$gjb = array_keys($all_gjb)[0];			$user_coin = db::table('user_coin')->where(['userid' => $this->userid])->find();			$zjc = $user_coin[$gjb] + $user_coin[$gjb . 'd'];			$mymz_trade = new \mymc\trade();			$market_list = $mymz_trade->market_select();			foreach ($all_xnb as $k => $v) {				if ($v['name'] != $gjb) {					$price = isset($market_list[$v['name'] . '_' . $gjb]['new_price']) ? $market_list[$v['name'] . '_' . $gjb]['new_price'] : 1;					$all_xnb[$k]['dongjie'] = $user_coin[$v['name'] . 'd'];					$all_xnb[$k]['zongji'] = $user_coin[$v['name']] + $user_coin[$v['name'] . 'd'];					$all_xnb[$k]['zhehe'] = $all_xnb[$k]['zongji'] * $price;					$zjc = $zjc + $all_xnb[$k]['zhehe'];				}			}			db::table("user")->where(["id" => $this->userid])->save(["zzc" => $zjc]);			return $zjc;		} else {			echo 0;			return;		}	}	protected function getMarketInfo()	{		return md('trade')->market_list();	}	protected function doMoble($id, $type = "send", $moble = null, $keep = 0, $moban = 'reg')	{		if ($type == "send") {			self::checkVerify();		}		if (!$moble) {			$moble = iv('moble', 'moble', '手机号码格式错误');		} else {			$moble = str_replace("+86|", "", $moble);		}		$map = ["reg" => ["pre" => "Reg", "您正在注册网站..."], "cnyout" => ["pre" => "Cnyout", "您正在操作人民币提现..."], "coinout" => ["pre" => "Coinout", "您正在操作虚拟币提现..."], "push" => ["pre" => "push", "您正在进行push资产操作..."], "change_old_moble" => ["pre" => "change_old_moble", "您正在修改手机号码,请确认是否本人操作"], "change_new_moble" => ["pre" => "change_new_moble", "您正在添加手机认证,请确认是否本人操作"], "fetch_psd" => ["pre" => "fetch_psd", "您正在找回密码,请确认是否本人操作"],];		if (!isset($map[$id])) {			echo "sendMoble 调用错误";			exit();		}		if (self::userid(1)) {			$pre = "UID_" . self::userid(1) . "_" . $map[$id]["pre"] . "_" . hashs($moble);		} else {			$pre = $map[$type]["pre"] . "_" . hashs($moble);		}		if ($type == "send") {			$code = rand(10000, 99999);			if (defined('MS_SMS') && (MS_SMS == 1)) {				mc($pre, $code);				ajax('验证码已发送:' + $code, 1);			} else {				$sms = new \ext\sms();				$rs = $sms->send("+86|" . $moble, $code, "sms", $moban);				if (isset($rs[1])) {					mc($pre, $code);					ajax($rs[0], 1);				} else {					ajax($rs[0]);				}			}		} else if ($type == "check") {			if (!isset($_REQUEST["code"]) || !$_REQUEST["code"]) {				ajax("手机验证码为空");			}			$code = trim($_REQUEST["code"]);			$_code = mc($pre);			if (!$_code) {				ajax("手机验证码已失效");			}			if ($_code != $code) {				ajax("手机验证码错误");			} else {				if (!$keep) {					mc($pre, null);					return $pre;				}			}		} else {			exit("doMoble 方法未定义");		}	}	protected function checkVerify()	{		$randstr = iv("randstr", 'wd', 'GET randstr is require');		$randcode = iv("randcode", 'wd', 'GET randcode is require');		if (strlen($randstr) != 32) {			ajax("randstr is must 32 bit");		}		$_randcode = mc("VERIFY_" . hashs($randstr));		if (!$_randcode) {			ajax("验证码已失效,请重新获取");		}		if (strtolower($randcode) != $_randcode) {			ajax("验证码错误");		} else {			mc("VERIFY_" . hashs($randstr), null);			return true;		}	}	protected function getRandCode($len = 4)	{		$code = "";		$charset = 'abcdefghkmnprstuvwxyzABCDEFGHKMNPRSTUVWXYZ23456789';		$_len = strlen($charset) - 1;		for ($i = 0; $i < $len; $i++) {			$code .= $charset[mt_rand(0, $_len)];		}		return $code;	}	protected function pullpage($table, $where, $order = null, $limit = 12, $field = null)	{		$res = [];		$res['count'] = db::table($table)->where($where)->count();		$pid = isset($_GET['pid']) ? (intval($_GET['pid']) > 1 ? intval($_GET['pid']) : 1) : 1;		$start = ($pid - 1) * $limit;		$res['pageSize'] = $limit;		$res['curPage'] = $pid;		if ($order && $field) {			$res['list'] = db::table($table)->where($where)->field($field)->limit($start, $limit)->order($order)->select();		} else if (!$order && !$field) {			$res['list'] = db::table($table)->where($where)->limit($limit, $limit)->select();		} else if ($order && !$field) {			$res['list'] = db::table($table)->where($where)->limit($start, $limit)->order($order)->select();		} else {			$res['list'] = db::table($table)->where($where)->field($field)->limit($start, $limit)->select();		}		return $res;	}	public function set_title($title = null)	{		return;	}	public function check_up($title = null)	{		$name = config("controller_name") . "/" . config("action_name");		$data = mc('home_sys_up_' . $name);		if (!$data) {			$data = db::table("sys_seo")->where(["name" => $name])->find();			if (!$data) {				$res = db::table("sys_seo")->add(["name" => $name, "status" => 1, 'title' => $title, "addtime" => time(), "truename" => 1]);				if ($res) {					$data = db::table("sys_seo")->where(["name" => $name])->find();				}			}			if ($data) {				mc('home_sys_up_' . $name, $data);			}		}		if (!$this->userid && config("controller_name") != "reg" && config("controller_name") != "login" && config("controller_name") != "findpwd") {			ajax("请先登录");		}		if ($data['status'] == 0) {			ajax('当前操作被禁止');		}		if ($this->userid && $name != 'user/truename_up' && $data['truename'] && config("controller_name") != "reg" && config("controller_name") != "login" && config("controller_name") != "findpwd") {			$checkuser = db::table("user")->where(["id" => $this->userid])->find();			if ($checkuser && !($checkuser['truename'] && $checkuser['idcard'])) {				ajax('请补全身份信息再操作');			}		}	}	public static function is_game($name = null)	{		$info = mc("ms_info_G45T5RBSDGFDS");		if (!$info) {			redirect('/');		}		if (!isset($info["game"]) || !$info["game"]) {			redirect('/');		}		if (in_array($name, explode("|", $info["game"]))) {			$game_list = mc('home_is_game');			if (!$game_list) {				$game_list = db::table("version_game")->order("`sort` ASC")->select();				mc('home_is_game', $game_list);			}			if (!$game_list) {				redirect('/');			}			foreach ($game_list as $k => $v) {				if ($v['name'] == $name) {					if ($v['status'] != 1 || $v['anzhuang'] != 1) {						redirect('/');					} else {						return true;					}				}			}			redirect('/');		} else {			redirect('/');		}	}}