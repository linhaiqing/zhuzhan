<?phpnamespace app;use Move\db;use Move\ext\page;class sweike extends home{	public function __construct()	{		parent::__construct();	}	public function type()	{		$typelist1 = db::table("sweike_type")->where(["status#!=" => 0, "pid" => 0])->order("sort asc ,id asc")->select();		if ($typelist1) {			foreach ($typelist1 as $k => $v) {				$type = db::table("sweike_type")->where(["status" => 1, "pid" => $v['id'], "hot#!=" => 0])->order("hot  desc")->field("type,id")->limit(4)->select();				if ($type) {					foreach ($type as $kk => $vv) {						$tjtype[] = $vv;					}				}				$typelist1[$k]['pid_list'] = db::table("sweike_type")->where(["status" => 1, "pid" => $v['id']])->order("sort asc , id asc")->field("type,id")->limit(3)->select();				if ($typelist1[$k]['pid_list']) {					$i = 0;					$m = 0;					foreach ($typelist1[$k]['pid_list'] as $kk => $vv) {						$typelist1[$k]['title'][$i++]["title"] = $typelist1[$k]['pid_list'][$kk]['type'];						$typelist1[$k]['title'][$m++]["id"] = $typelist1[$k]['pid_list'][$kk]['id'];						$typelist1[$k]['pid_list'][$kk]['pid_list'] = db::table("sweike_type")->where(["status" => 1, "pid" => $vv['id']])->order("sort asc , id asc")->field("type,id")->select();					}				}			}		}		$res = [];		array_splice($typelist1, 13);		$res['type'] = $typelist1;		array_splice($tjtype, 4);		$res['hot'] = $tjtype;		ajax($res, 1);	}	public function index()	{		$this->set_title('高级威客');		$this->banner = db::table("sys_ad")->where(["type" => "sweike"])->order("sort asc ,id desc")->select();		$this->article = db::table("article")->where(["status" => 1, "type_id" => 2])->order("id  desc")->limit(5)->select();		$this->sweike1 = db::table("sweike")->where(["status" => 1, "tj" => 1, "step#<=" => 2])->order("endtime  asc")->limit(8)->select();		$this->sweike2 = db::table("sweike")->where(["status" => 1, "tj" => 1, "step#<=" => 3])->order("price  desc")->limit(8)->select();		$weike_tender = db::table("sweike_tender")->where(["status" => 1])->order("endtime desc")->select();		foreach ($weike_tender as $k => $v) {			$data = db::table("sweike")->where(["id" => $v["weikeid"]])->find();			$weike_tender[$k]["price"] = $data["price"];			$weike_tender[$k]["price_type"] = $data["price_type"];			$weike_tender[$k]["weike_title"] = $data["title"];			$username = db::table("user")->where(["id" => $v["userid"]])->find();			$weike_tender[$k]["username"] = $username["username"];			$weike_tender[$k]["img"] = "";		}		$first = db::table("sweike_type")->where(["status" => 1, "pid" => 0])->select();		foreach ($first as $k => $v) {			$list = db::table("sweike_type")->where(["status" => 1, "pid" => $v["id"]])->order("hot  desc")->limit(6)->field("id,type")->select();			foreach ($list as $key => $value) {				$list3[] = $value;				$data[] = $value;			}		}		array_splice($data, 6);		foreach ($data as $k => $v) {			$list1 = db::table("sweike_type")->where(["status" => 1, "pid" => $v["id"]])->order("`sort` desc")->select();			foreach ($list1 as $kk => $vv) {				$weike = db::table("sweike")->where(["status" => 1, "type" => $vv["id"]])->order("id desc")->field("id,userid,title,price,price_type,num")->select();				foreach ($weike as $kkk => $vvv) {					$username = db::table("user")->where(["id" => $vvv["userid"]])->find();					if ($username) {						$weike[$kkk]["username"] = $username["username"];					} else {						$weike[$kkk]["username"] = "系统管理员";					}					$data[$k]["weikelist"][] = $weike[$kkk];				}			}		}		ajax($data, 1);	}	public function info()	{		$first = db::table("sweike_type")->where(["status" => 1, "pid" => 0])->select();		foreach ($first as $k => $v) {			$list = db::table("sweike_type")->where(["status" => 1, "pid" => $v["id"]])->order("hot  desc")->limit(6)->field("id,type")->select();			foreach ($list as $key => $value) {				$res[] = $value;			}		}		ajax("数据正常", 1, $res);	}	public function lists()	{		$this->set_title('任务列表');		$weike = db::table("sweike")->select();		foreach ($weike as $k => $v) {			if (time() - $v["addtime"] <= 86400 & $v["status"] == 1 & time() < $v["endtime"]) {				$v["step"] = 1;			} else {				if (time() - $v["addtime"] > 86400 & time() <= $v["endtime"] & $v["status"] == 1) {					$v["step"] = 2;				} else {					if (time() > $v["endtime"] & $v["status"] == 1) {						$v["step"] = 3;					} else {						if ($v["status"] == 0) {							$v["step"] = 4;						}					}				}			}			$count = db::table("sweike_tender")->where(["weikeid" => $v["id"]])->count();			db::table("sweike")->where(["id" => $v["id"]])->save(["step" => $v["step"], "num" => $count]);		}		$this->keyword = iv('get.keyword');		$where = [];		if ($this->keyword) {			if (!check($this->keyword, 'a')) {				ajax('关键字格式错误');			}			$where["title#like"] = "%" . $this->keyword . "%";		} else {			$this->keyword = "";		}		$this->step = iv('get.step', "d", "状态参数错误", 1);		if ($this->step) {			if (!check($this->step, 'd')) {				ajax('参数错误1');			}			if ($this->step == 1) {				$where["step"] = 1;			}			if ($this->step == 2) {				$where["step"] = 2;			}			if ($this->step == 3) {				$where["step"] = 3;			}			if ($this->step == 4) {				$where["step"] = 4;			} else {				$where["status#!="] = 0;			}		} else {			$this->step = 0;			$where["status#!="] = 0;		}		$this->type = iv('get.type');		$this->type1 = iv('get.type1');		$this->type2 = iv('get.type2');		if ($this->type && !$this->type1 && !$this->type2) {			if (!check($this->type, 'd')) {				ajax('参数错误2');			}			$data2 = db::table("sweike_type")->where(["status" => 1, "pid" => $this->type])->select();			$id_arr = [];			if ($data2) {				foreach ($data2 as $v) {					$id_arr[] = $v["id"];				}			}			if (!$id_arr) {				$id_arr[] = 'move';			}			$data3 = db::table("sweike_type")->where(["status" => 1, "pid#in" => $id_arr])->select();			$id_arr2 = [];			if ($data3) {				foreach ($data3 as $v) {					$id_arr2[] = $v["id"];				}			}			if (!$id_arr2) {				$id_arr2[] = 'move';			}			$this->type1 = 0;			$this->type2 = 0;			$where["type#in"] = $id_arr2;		} else {			if ($this->type1 && !$this->type2) {				if (!check($this->type1, 'd')) {					ajax('参数错误3');				}				$data2 = db::table("sweike_type")->where(["status" => 1, "pid" => $this->type1])->select();				$id_arr = [];				if ($data2) {					foreach ($data2 as $v) {						$id_arr[] = $v["id"];					}				}				if (!$id_arr) {					$id_arr[] = 'move';				}				$where["type#in"] = $id_arr;				if (!$this->type) {					$data5 = db::table("sweike_type")->where(["id" => $this->type1])->find();					$this->type = $data5["pid"];				}				$this->type2 = 0;			} else {				if ($this->type1 && $this->type2) {					if (!check($this->type1, 'd')) {						ajax('参数错误4');					}					if (!$this->type) {						$data6 = db::table("sweike_type")->where(["id" => $this->type1])->find();						$this->type = $data6["pid"];					}					$where["type"] = $this->type2;				} else {					$this->type = 0;					$this->type1 = 0;					$this->type2 = 0;				}			}		}		if ($this->type1) {			db::table("sweike_type")->where(["id" => $this->type1])->set(["hot" . "#+" => 1]);		}		$this->sort = iv('get.sort');		if ($this->sort) {			if (!check($this->sort, 'd')) {				ajax('参数错误5');			}			if ($this->sort == 1) {				$order = "addtime";			}			if ($this->sort == 2) {				$order = "num";			}			if ($this->sort == 3) {				$order = "price";			}		} else {			$this->sort = 0;			$order = "id";		}		$res = parent::pullpage("sweike", $where, "$order desc");		$list = $res['list'];		foreach ($list as $k => $v) {			$username = db::table("user")->where(["id" => $v["userid"]])->find();			if ($list[$k]["userid"]) {				$list[$k]["username"] = $username["username"];			} else {				$list[$k]["username"] = "系统管理员";			}			$type = db::table("sweike_type")->where(["status" => 1, "id" => $v["type"]])->order("sort asc , id asc")->field("type,id")->find();			$list[$k]["type"] = $type["type"];			$time = $v["endtime"] - time();			$list[$k]["lasttime"] = ["days" => 0, "hours" => 0, "minutes" => 0, "seconds" => 0];			if ($time >= 86400) {				$list[$k]["lasttime"]["days"] = floor($time / 86400);				$time = ($time % 86400);			}			if ($time >= 3600) {				$list[$k]["lasttime"]["hours"] = floor($time / 3600);				$time = ($time % 3600);			}			if ($time >= 60) {				$list[$k]["lasttime"]["minutes"] = floor($time / 60);				$time = ($time % 60);			}			if (0 < $time && $time < 60) {				$list[$k]["lasttime"]["seconds"] = floor($time);			}		}		$res['list'] = $list;		ajax($res, 1);	}	public function json()	{		$typelist1 = db::table("sweike_type")->where(["status#!=" => 0, "pid" => 0])->order("sort asc ,id asc")->field("type,id")->select();		if ($typelist1) {			foreach ($typelist1 as $k => $v) {				$typelist1[$k]['pid_list'] = db::table("sweike_type")->where(["status" => 1, "pid" => $v['id']])->order("sort asc , id asc")->field("type,id")->limit(3)->select();				if ($typelist1[$k]['pid_list']) {					foreach ($typelist1[$k]['pid_list'] as $kk => $vv) {						$typelist1[$k]['pid_list'][$kk]['pid_list'] = db::table("sweike_type")->where(["status" => 1, "pid" => $vv['id']])->order("sort asc , id asc")->field("type,id")->select();					}				}			}		}		$mymc_coin = new \mymc\coin();		$coin_list = $mymc_coin->select(1);		$res["coinlist"] = $coin_list;		$res["type"] = $typelist1;		ajax($res, 1);	}	public function up()	{		$this->userid = $this->userid();		$type = iv("post.type", "d", "请选择正确的任务类型");		$price = iv("post.price", "double", "请输入正确的任务酬劳");		$price_type = iv("post.price_type", "d", "请选择正确的币种");		$title = iv("post.title", "a", "请输入任务标题");		$content = iv("post.content", "a", "请输入任务描述");		$endtime = iv("post.endtime", "time", "请输入正确的投稿截止时间");		$adress = iv("post.adress", "a", "请输入投稿地址");		$paypassword = iv("post.paypassword", "password", "交易密码格式错误");		if (!$this->userid) {			ajax("请先登录");		}		$user = db::table("user")->where(["id" => session("userid")])->find();		if (hashs($paypassword) != $user["paypassword"]) {			ajax("交易密码错误");		}		if (mb_strlen($title) > 20) {			ajax("标题过长");		}		if (mb_strlen($content) > 200) {			ajax("问题过长");		}		if (!session("userid")) {			ajax("请先登录");		}		if ($price <= 0) {			ajax("酬劳错误");		}		$res = md('sweike')->up($this->userid, $type, $price, $price_type, $title, $content, $endtime, $adress);		if (isset($res[1]) && $res[1]) {			ajax($res[0], 1);		} else {			ajax($res[0]);		}	}	public function log()	{		$this->userid = $this->userid();		$this->set_title('投标记录');		if ($this->userid) {			$where = ["userid" => $this->userid];			$res = parent::pullpage("sweike_tender", $where, "id desc", 8);			$list = $res['list'];			foreach ($list as $k => $v) {				$username = db::table("user")->where(["id" => $v["userid"]])->find();				$list[$k]["userid"] = $username["username"];				$list[$k]['addtime'] = addtime($v['addtime']);			}		} else {			$list = [];		}		$res['list'] = $list;		ajax($res, 1);	}	public function weikelog()	{		$this->userid = $this->userid();		$this->set_title('威客记录');		if ($this->userid) {			$where = ["status" => 1, "userid" => session("userid")];			$res = parent::pullpage("sweike", $where, "id desc", 8);			$list = $res['list'];			foreach ($list as $kk => $vv) {				$username = db::table("user")->where(["id" => $vv["userid"]])->find();				$list[$kk]['addtime'] = addtime($vv['addtime']);				$list[$kk]["userid"] = $username["username"];			}		} else {			$list = [];		}		$res['list'] = $list;		ajax($res, 1);	}	public function details()	{		$id = iv("id", "d", "参数错误");		db::table("sweike")->where(["id" => $id])->set(["view" . "#+" => 1]);		$sweike = db::table("sweike")->where(["id" => $id, "status" => 1])->find();		if (time() - $sweike["addtime"] <= 86400 & $sweike["status"] == 1 & time() < $sweike["endtime"]) {			$v["step"] = 1;		} else {			if (time() - $sweike["addtime"] > 86400 & time() <= $sweike["endtime"] & $sweike["status"] == 1) {				$v["step"] = 2;			} else {				if (time() > $sweike["endtime"] & $sweike["status"] == 1) {					$v["step"] = 3;				} else {					if ($sweike["status"] == 0) {						$v["step"] = 4;					}				}			}		}		if (empty($sweike)) {			ajax("当前任务不存在或不可用");		}		$sweike_type = db::table('sweike_type')->where(['status' => 1, 'id' => $sweike['type']])->find();		$sweike['type_title'] = $sweike_type['type'];		$sweike['addtime'] = addtime($sweike['addtime']);		$sweike['endtime'] = addtime($sweike['endtime']);		$username = db::table("user")->where(["id" => $sweike["userid"]])->find();		if (empty($username)) {			$sweike["username"] = ["username" => "系统管理员"];		} else {			$sweike["username"] = ["username" => $username["username"], "email" => $username["email"]];		}		$res = [];		$type = db::table("sweike_type")->where(["status" => 1, "id" => $sweike["type"]])->find();		if ($type) {			$data = db::table("sweike")->where(["status" => 1, "type" => $sweike["type"], "step#<=" => 3])->field("id,price,price_type,title,num")->limit(12)->select();			$this->assign('date', $data);		}		$where = ["weikeid" => $id];		$log = parent::pullpage("sweike_tender", $where, "id desc", 3);		$list = $log['list'];		$user = db::table("user")->where(['status' => 1])->select();		foreach ($list as $k => $v) {			$list[$k]['addtime'] = addtime($list[$k]['addtime'], 'y-m-d');			foreach ($user as $k2 => $v2) {				if ($v['userid'] == $v2['id']) {					$list[$k]["username"] = substr_replace(str_replace("|", " ", $v2['username']), '**', 3, 2);				}			}		}		$log['list'] = $list;		$res['detail'] = $sweike;		$res['log'] = $log;		$res['leishi'] = $data;		ajax($res, 1);	}	public function tender_add()	{		$this->userid = $this->userid();		$weikeid = iv("post.weikeid", "d", "参数错误1");		$content = iv("post.content", "a", "参数错误2");		$paypassword = iv("post.paypassword", "password", "交易密码格式错误3");		if (!$this->userid) {			ajax("请先登录");		}		$user = db::table("user")->where(["id" => session("userid")])->find();		if (hashs($paypassword) != $user["paypassword"]) {			ajax("交易密码错误");		}		$weike = db::table("sweike")->where(["id" => $weikeid])->find();		if (!$weike) {			ajax("威客不存在");		}		if ($weike["step"] >= 3 || $weike["status"] == 0) {			ajax("该威客已不接受投标");		}		if (mb_strlen($content) > 200) {			ajax("问题过长");		}		$rs = db::table("sweike_tender")->add(["weikeid" => $weikeid, "userid" => session("userid"), "content" => $content, "status" => 2, "addtime" => time()]);		if ($rs) {			ajax("投标成功", 1);		} else {			ajax("投标失败");		}	}	public function check()	{		$this->userid = $this->userid();		$id = iv("post.id", "d", "参数错误");		$paypassword = iv("post.paypassword", "dw", "参数错误");		$arr = db::table("sweike_tender")->where(["id" => $id])->find();		if (!$this->userid) {			ajax("请先登录");		}		$user = db::table("user")->where(["id" => session("userid")])->find();		if (hashs($paypassword) != $user["paypassword"]) {			ajax("交易密码错误");		}		if (!$arr["weikeid"]) {			ajax("威客信息错误");		}		$sweike = db::table("sweike")->where(["id" => $arr["weikeid"]])->find();		if (!$sweike) {			ajax("威客不存在");		}		$sweike_tender = db::table("sweike_tender")->where(["weikeid" => $sweike["id"], "status" => 1])->find();		if ($sweike_tender) {			ajax("该任务已确定服务商");		}		$rs = db::table("sweike_tender")->where(["id" => $id])->save(["status" => 1]);		if ($rs) {			ajax("操作成功", 1);		} else {			ajax("操作失败");		}	}	public function pay()	{		$this->userid = $this->userid();		$id = iv("post.id", "d", "参数错误");		$paypassword = iv("post.paypassword", "dw", "参数错误");		if (!$this->userid) {			ajax("请先登录");		}		$user = db::table("user")->where(["id" => $this->userid])->find();		if (hashs($paypassword) != $user["paypassword"]) {			ajax("交易密码错误");		}		$res = md('sweike')->pay($this->userid, $id);		if (isset($res[1]) && $res[1]) {			ajax($res[0], 1);		} else {			ajax($res[0]);		}	}}