<?phpnamespace app;use Move\db;class wallet extends home{	public function __construct()	{		parent::__construct();	}	public function coinlists()	{		$mymc_coin = new \mymc\coin();		$coin = $mymc_coin->select(1);		if ($coin) {		} else {			$coin = [];		}		ajax($coin, 1);	}	public function submit()	{		$moble = iv("post.username", 'a', '账户格式错误');		$mobles = "+86";		$password = iv("post.password", 'password', '密码格式错误');		$users = db::table("user")->where(["username" => $moble])->find();		if (!$users) {			$users = db::table("user")->where(["email" => $moble])->find();			if (!$users) {				$users = db::table("user")->where(["moble" => $mobles . '|' . $moble])->find();				if (!$users) {					ajax('用户不存在');				} else {					if (db::table("user")->where(["moble" => $mobles . '|' . $moble])->count() > 1) {						ajax('您的手机号存在重复，禁止登录');					}					$remark = '通过手机号登录';				}			} else {				if (db::table("user")->where(["email" => $moble])->count() > 1) {					ajax('您的邮箱存在重复，禁止用户名登录');				}				$remark = '通过邮箱登录';			}		} else {			if (db::table("user")->where(["username" => $moble])->count() > 1) {				ajax('您的用户名存在重复，禁止用户名登录');			}			$remark = '通过用户名登录';		}		if ($users["status"] != 1) {			ajax('您的账户已禁止登录');		}		if ($users["password"] != hashs($password)) {			ajax('登录账户或密码错误');		}		$user_coin = db::table('user_coin')->where(['userid' => $users["id"]])->find();		if (!$user_coin) {			if (!db::table('user_coin')->add(['userid' => $users["id"]])) {				ajax('账户财产出现异常');			}		}		$user_wallet = db::table('user_wallet')->where(['userid' => $users["id"]])->find();		if (!$user_wallet) {			if (!db::table('user_wallet')->add(['userid' => $users["id"]])) {				ajax('账户钱包出现异常');			}		}		$addip = get_ip();		$addr = get_city();		if (isset($users['yidi']) && $users['yidi'] == 1) {			$user_login_log = db::table('user_log')->where(['type' => '登录'])->order('id desc')->find();			if ($user_login_log) {				if ($user_login_log['addip'] != $addip) {					session('userid_yidi', 1);				}			}		}		$rs = [];		$rs[] = db::table("user")->where(["id" => $users["id"]])->save(["logins" => ($users["logins"] + 1)]);		$rs[] = db::table("user_log")->add(["userid" => $users["id"], "type" => "登录", "remark" => $remark, "addip" => $addip, "addr" => $addr, "addtime" => time(), "status" => 1]);		if (check_arr($rs)) {			session('userid', $users["id"]);			session('home_login_username', null);			cookie("moble", $moble);			cookie("move_moble", $moble);		} else {			ajax('登录失败');		}		$check_time = 10;		$check_times = 5;		$username_msg = md5($moble);		$mc_key_times = md5('LOGIN_ERR_TIMES_' . $username_msg);		$mc_key_time = md5('LOGIN_ERR_TIME_' . $username_msg);		$ltimes = (int)mc($mc_key_times);		if ($ltimes >= $check_times) {			$ltime = mc($mc_key_time);			$ltime = time() - $ltime;			if ($ltime >= $check_time) {				mc($mc_key_times, 0);			} else {				$min = $check_time - $ltime;				ajax("错误次数过多,请" . $min . ' s后尝试');			}		}		if ($users) {			$user = db::table("user")->where(["id" => $users['id']])->find();			if (!($token = $user['token'])) {				$token = md5(md5(rand(0, 10000) . md5(time()), md5(uniqid())));				db::table("user")->where(["id" => $user['id']])->save(["token" => $token]);			}			$user = db::table("user")->where(["id" => $user['id']])->find();			if (!$user['token']) {				ajax("生成 token失败!#" . $token);			}			mc(md5('APP_AUTH_ID_' . $user['id']), $token);			$status = 1;			if (!$user['paypassword']) {				$status = -97;			}			if ($user['paypassword'] && !$user['truename']) {				$status = -98;			}			ajax(["ID" => $user['id'], "TOKEN" => $token, "msg" => ""], $status);		} else {			mc($mc_key_times, ++$ltimes);			mc($mc_key_time, time());			ajax('登录异常');		}	}	public function coinin_show()	{		$user_wallet = db::table('user_wallet')->where(['userid' => $this->userid()])->find();		$mymc_coin = new \mymc\coin();		$coin_list = $mymc_coin->all_xnb();		$user_coin = md('user')->get_coin_info();		$res = [];		$defaultCoin = '';		foreach ($coin_list as $k => $v) {			if ($defaultCoin == '') $defaultCoin = $v['name'];			$res["list"][$k] = ["id" => $v['id'], "name" => $v['name'], "title" => $v['title'], "img" => "http://" . $_SERVER["HTTP_HOST"] . "/upload/" . $v['img'], "keyong" => num($user_coin[$v['name']]), "dongjie" => num($user_coin[$v['name'] . "d"]), "status" => $coin_list[$k]['zr_jz'], "qianbao" => $coin_list[$k]['zr_jz'] ? $user_wallet[$v['name']] : "",];		}		$res["default"] = $res["list"][$defaultCoin];		ajax($res, 1);	}	public function coinin_log()	{		$coin = iv("get.coin", 'w', 'coin is must');		$mymc_coin = new \mymc\coin();		$coin_list = $mymc_coin->all_xnb();		if (!isset($coin_list[$coin])) {			ajax("币种不存在");		}		$coin_name = $coin_list[$coin]['title'];		$coin_mr_queren = $coin_list[$coin]["zr_dz"];		$where['coinname'] = $coin;		$where['userid'] = $this->userid();		$res = parent::pullpage("coin_in", $where, "id desc");		foreach ($res['list'] as $k => $v) {			$res['list'][$k] = ['id' => $v['id'], 'addtime' => addtime($v['addtime'], "m-d H:i"), 'coin_name' => $coin_name, 'num' => num($v['num']), 'fee' => num($v['fee']), 'mum' => num($v['mum']), 'queren' => $v['queren'] . "/" . $coin_mr_queren, 'type' => $v['type'], 'status' => $v['status'],];		}		ajax($res, 1);	}	public function coinout()	{		$ret = [];		$coin = iv("get.coin", 'w', '参数错误', true);		$mymc_coin = new \mymc\coin();		$coin_list = $mymc_coin->select();		if (!$coin) {			$coin = md('sys_config')->get('mr_coin');		}		if (!isset($coin_list[$coin])) {			ajax("币种名称错误");		}		$ret['moble'] = substr_replace(str_replace("|", " ", parent::getUserInfo("moble")), '****', 7, 4);		foreach ($coin_list as $key => $val) {			if ($val['name'] == "cny") {				continue;			}			$ret['coin_list'][$key] = $val['title'] . "(" . $val['name'] . ")";		}		$user_coin = db::table("user_coin")->where(['userid' => $this->userid()])->find();		$ret['keyong'] = isset($user_coin[$coin]) ? num($user_coin[$coin]) : 0;		$ret['img'] = "http://" . $_SERVER["HTTP_HOST"] . "/upload/" . $coin_list[$coin]['img'];		$ret['fee'] = $coin_list[$coin]["zc_fee"];		$where['userid'] = $this->userid();		$where['coinname'] = $coin;		$user_qianbao = db::table('user_qianbao')->where($where)->select();		foreach ($user_qianbao as $val) {			$ret['user_qianbao'][$val['id']] = $val['name'] . " 尾号:" . mb_substr($val['addr'], -4);		}		if (!isset($ret['user_qianbao'])) {			$ret['user_qianbao'] = "";		}		ajax($ret, 1);	}	public function coinout_send_moble()	{		$user = db::table("user")->where(["id" => $this->userid()])->find();		parent::doMoble("wallet_out", "send", $user['moble']);	}	public function coinout_up()	{		$coinname = iv("post.coin", 'w', '币种 格式错误');		$num = iv("post.num", 'xnb', '转出数量 格式错误');		$type = iv("post.bank", 'd', '提现地址格式错误');		$goole = iv("post.goole");		$paypassword = iv("post.paypassword", 'password', '交易密码格式错误');		$user = db::table("user")->where(["id" => $this->userid()])->find();		$pre = parent::doMoble("wallet_out", "check", $user['moble'], 1);		$res = md("finan")->coin_out_up($this->userid(), $coinname, $num, $type, $goole, $paypassword);		if (isset($res[1]) && $res[1]) {			mc($pre, null);			ajax('操作成功', 1);		} else {			ajax($res[0]);		}	}	public function coinoutlog()	{		$coinname = mrz(iv('get.coinname', 'w_', 'coinname 格式错误', true), null);		$mymc_coin = new \mymc\coin();		$coin_list = $mymc_coin->all_xnb();		if ($coinname && !isset($coin_list[$coinname])) {			ajax($coinname . " 币种不存在");		}		$coin_list_type = "";		foreach ($coin_list as $k => $v) {			$coin_list_type[$v['name']] = $v['title'] . "(" . $v['name'] . ")";		}		if ($coinname) {			$where['coinname'] = $coinname;		}		$where['userid'] = $this->userid();		$res = parent::pullpage("coin_out", $where, "id desc");		$res['coin_list_type'] = $coin_list_type;		foreach ($res['list'] as $k => $v) {			$res['list'][$k] = ['id' => $v['id'], 'addtime' => addtime($v['addtime'], "m-d H:i"), 'coin_name' => $coin_list[$v['coinname']]['title'], 'username' => $v['username'], 'num' => num($v['num']), 'fee' => num($v['fee']), 'mum' => num($v['mum']), 'type' => $v['type'], 'status' => $v['status'],];		}		ajax($res, 1);	}}