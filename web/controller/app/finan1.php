<?phpnamespace app;use Move\db;class finan extends home{	protected $userid = "";	public function __construct()	{		parent::__construct();		$this->userid = $this->userid();		if (!$this->userid) {			ajax('请登录', -99);		}	}	public function pay()	{		$id = iv('get.id', 'd', '参数错误');		$cnyin = db::table("finan_pay")->where(["id" => $id])->find();		if (!$cnyin || $cnyin['userid'] != $this->userid) {			ajax('充值订单错误');		}		$cnyin_type = db::table('finan_type')->where(['name' => $cnyin['type'], 'status' => 1])->find();		if (!$cnyin_type) {			ajax('充值方式错误');		}		$res = ["id" => $cnyin['id'], "tradeno" => $cnyin['tradeno'], "num" => $cnyin['num'], "mum" => $cnyin['mum'], "fee" => $cnyin['fee'], "feecoin" => $cnyin['feecoin'], "status" => $cnyin['status'], "addtime" => addtime($cnyin['addtime'], "m-d H:i"), 'coinname' => $cnyin['coinname'], "gm" => ["username" => $cnyin_type['username'], "truename" => $cnyin_type['truename'], "title" => $cnyin_type['title'], "code" => "http://" . $_SERVER["HTTP_HOST"] . "/upload/" . $cnyin_type['code'], "img" => "http://" . $_SERVER["HTTP_HOST"] . "/static/default/home/img/" . $cnyin_type['img'], "remark" => $cnyin_type['remark'], "shuoming" => $cnyin_type['shuoming']]];		ajax($res, 1);	}	public function pay_type()	{		$data = md('finan_pay')->lists(["status" => 1]);		if (isset($data[1]) && $data[1]) {			$data = $data[0];		} else {			ajax($data[0]);		}		$res = [];		foreach ($data as $key => $val) {			$res[$val['name']] = ["id" => $val['id'], "name" => $val['name'], "title" => $val['title'], "username" => $val['username'], "truename" => $val['truename'], "remark" => $val['remark'], "shuoming" => $val['shuoming'], "min" => $val['min'], "max" => $val['max'], "code" => "http://" . $_SERVER["HTTP_HOST"] . "/upload/" . $val['code'], "img" => "http://" . $_SERVER["HTTP_HOST"] . "/static/default/home/img/" . $data[$key]['img'],];		}		ajax($res, 1);	}	public function pay_up()	{		$this->check_up('APP-人民币充值');		$coin = iv("post.coin", 'w', '参数错误', 1);		$type = iv("post.type", 'w', '充值方式格式错误');		$num = iv("post.num", 'cny', '充值金额格式错误');		$cnyin_type = db::table("finan_type")->where(["name" => $type])->find();		if (!$cnyin_type) {			ajax('充值方式不存在');		}		if ($cnyin_type['status'] != 1) {			ajax('充值方式没有开通');		}		$cnyin_min = $cnyin_type['min'] ? $cnyin_type['min'] : 1;		$cnyin_max = $cnyin_type['max'] ? $cnyin_type['max'] : 100000;		if ($num < $cnyin_min) {			ajax('充值金额不能小于' . $cnyin_min . '元');		}		if ($num > $cnyin_max) {			ajax('充值金额不能大于' . $cnyin_max . '元');		}		$tradeno = md('finan')->tradeno();		if (!$tradeno) {			ajax('订单号创建失败');		}		$data = ['userid' => $this->userid, 'num' => $num, 'type' => $type, 'tradeno' => $tradeno, 'coinname' => $coin, 'addtime' => time(), 'status' => 0];		$res = db::table('finan_pay')->add($data);		if ($res) {			ajax('创建成功', $res);		} else {			ajax('订单创建失败');		}	}	public function pay_huikuan()	{		$id = iv("post.id");		if (!check($id, 'd')) {			ajax('参数错误');		}		$cnyin = md('finan_pay')->get_info($id);		if (!$cnyin) {			ajax('充值订单不存在');		}		if ($cnyin['userid'] != $this->userid) {			ajax('非法操作');		}		if ($cnyin['status'] != 0) {			ajax('订单已经处理过');		}		$res = db::table('finan_pay')->where(['id' => $id])->save(['status' => 3]);		if ($res) {			ajax('操作成功', 1);		} else {			ajax('操作失败');		}	}	public function pay_log()	{		$coin = iv("get.coin", 'w', '参数错误', 1);		if ($coin) {			$where['coinname'] = $coin;		}		$where['userid'] = $this->userid;		$type_list = md('finan_pay')->lists();		if (isset($type_list[1]) && $type_list[1]) {			$type_list = $type_list[0];		} else {			$type_list = [];		}		$res = parent::pullpage("finan_pay", $where, "id desc");		foreach ($res['list'] as $k => $v) {			$typeTitle = '';			foreach ($type_list as $key => $value) {				if ($value['name'] == $v['type']) {					$typeTitle = $value['title'];				}			}			$res['list'][$k] = ['id' => $v['id'], 'addtime' => addtime($v['addtime'], "m-d H:i"), 'tradeno' => $v['tradeno'], 'coinname' => $v['coinname'], 'type' => $typeTitle, 'num' => $v['num'], 'fee' => $v['fee'] . strtoupper($v['feecoin']), 'mum' => $v['mum'], 'status' => $v['status'],];		}		ajax($res, 1);	}	public function bank()	{		$coin = iv("get.coin", 'w', '参数错误', 1);		$user_bank = db::table("user_bank")->where(["userid" => $this->userid, 'coinname' => $coin])->select();		foreach ($user_bank as $k => $v) {			$user_bank[$k]['bankcard'] = substr_replace($v['bankcard'], '****', 4, 4);			$user_bank[$k] = ["id" => $v['id'], "name" => $v['name'], "truename" => $v['truename'], "coinname" => $v['coinname'], "bank" => $v['bank'], "bankprov" => $v['bankprov'], "bankcity" => $v['bankcity'], "bankaddr" => $v['bankaddr'], "bankcard" => substr_replace($v['bankcard'], '****', 4, 4), "addtime" => addtime($v['addtime'])];		}		ajax($user_bank, 1);	}	public function bank_type()	{		$ret = [];		$bank_list = md('sys_config')->get('out_bank');		$bank_list = explode("|", $bank_list);		$ret['bank_list'] = $bank_list;		$ret['true_name'] = parent::getUserInfo("truename");		ajax($ret, 1);	}	public function bank_up()	{		$this->check_up('APP-银行卡地址添加-上行');		$name = iv('post.name', 'a', '备注名称格式错误');		$bankcoin = iv('post.coin', 'w', '币种错误');		$bank = iv('post.bank', 'a', '开户银行格式错误');		$bankprov = iv('post.bankprov', 'c', '开户省份格式错误');		$bankcity = iv('post.bankcity', 'c', '开户城市格式错误');		$bankaddr = iv('post.bankaddr', 'a', '开户行地址格式错误');		$bankcard = iv('post.bankcard', 'a', '银行账号格式错误');		$paypassword = iv('post.paypassword', 'password', '交易密码格式错误');		$user = db::table("user")->where(["id" => $this->userid])->find();		if ($user['paypassword'] != hashs($paypassword)) {			ajax('交易密码错误');		}		$check_card = $this->luhm($bankcard);		if (!$check_card) {			ajax('银行卡号码错误');		}		$user_bank = db::table("user_bank")->where(["userid" => $this->userid])->select();		foreach ($user_bank as $k => $v) {			if ($v['name'] == $name) {				ajax('请不要使用相同的备注名称');			}			if ($v['bankcard'] == $bankcard) {				ajax('银行卡号已存在');			}		}		if (count($user_bank) >= 10) {			ajax('每个用户最多只能添加10个地址');		}		$res = db::table("user_bank")->add(['userid' => session('userid'), 'name' => $name, 'bank' => $bank, 'bankprov' => $bankprov, 'bankcity' => $bankcity, 'truename' => $user['truename'], 'bankaddr' => $bankaddr, 'bankcard' => $bankcard, 'coinname' => $bankcoin, 'addtime' => time(), 'status' => 1,]);		if (isset($res[1]) && $res[1]) {			ajax('操作成功', 1);		} else {			ajax($res[0]);		}	}	public function bank_del()	{		$id = iv('post.id', 'd', '参数错误');		$paypassword = iv('post.paypassword', 'password', '交易密码格式错误');		$user = db::table("user")->where(["id" => $this->userid])->find();		($user['paypassword'] != hashs($paypassword)) && ajax('交易密码错误');		$user_bank = db::table('user_bank')->where(["id" => $id])->find();		if (!$user_bank || $user_bank["userid"] != $user['id']) {			ajax('非法访问');		}		$res = db::table("user_bank")->where(["id" => $id])->delete();		if ($res) {			ajax('操作成功', 1);		} else {			ajax('操作失败');		}	}	public function out()	{		$this->check_up('APP-人民币提现-界面');		$coin = iv("get.coin", 'w', '参数错误', 1);		$user_coin = db::table("user_coin")->where(['userid' => $this->userid])->find($coin);		$user_bank_res = db::table("user_bank")->where(["userid" => $this->userid, "coinname" => $coin])->select();		$user_bank = null;		foreach ($user_bank_res as $val) {			$user_bank[] = ["id" => $val["id"], "name" => $val["name"] . " 尾号" . mb_substr($val["bankcard"], -4)];		}		$user = db::table("user")->where(["id" => $this->userid])->find();		$out_fee = md('sys_config')->get('out_fee');		$out_shuoming = md('sys_config')->get('out_shuoming');		if ($user['moble']) {			$user['moble'] = substr_replace(str_replace("|", " ", $user['moble']), '****', 7, 4);		}		$ret = ["moble" => $user['moble'], "cny" => num($user_coin), "out_fee" => $out_fee, "addr" => $user_bank, "shuoming" => $out_shuoming];		ajax($ret, 1);	}	public function out_send_moble()	{		$user = db::table("user")->where(["id" => $this->userid])->find();		parent::doMoble("cnyout", "send", $user['moble'], 'out');	}	public function out_up()	{		$this->check_up('APP-人民币提现-上行');		$type = iv("post.bank", 'd', '提现地址错误');		$num = iv("post.num", 'cny', '提现金额格式错误');		$paypassword = iv("post.paypassword", 'password', '交易密码格式错误');		$coinname = iv("post.coinname", 'w', '币种格式错误');		if (!$coinname) {			$coinname = 'cny';		}		$user = db::table("user")->where(["id" => $this->userid])->find();		$pre = parent::doMoble("cnyout", "check", $user['moble'], 1);		$num = num($num, 0);		if (!$num) {			ajax('提现金额错误');		}		$goole = "";		$res = md('finan')->out_up($this->userid, $type, $num, $goole, $paypassword, $coinname);		if (isset($res[1]) && $res[1]) {			mc($pre, null);			ajax('操作成功', 1);		} else {			ajax($res[0]);		}	}	public function outlog()	{		$coin = iv("get.coin", 'w', '参数错误', 1);		if ($coin) {			$where['coinname'] = $coin;		}		$status = mrz(iv('get.status', 'd', '状态错误', true), null);		$where['userid'] = $this->userid;		if ($status > 0) {			$where['status'] = $status - 1;		}		$res = parent::pullpage("finan_out", $where, "id desc");		foreach ($res['list'] as $k => $v) {			$res['list'][$k] = ['id' => $v['id'], 'addtime' => addtime($v['addtime'], "m-d H:i"), 'coinname' => $v['coinname'], 'num' => $v['num'], 'fee' => $v['fee'], 'mum' => $v['mum'], 'name' => $v['name'], 'status' => $v['status'],];		}		ajax($res, 1);	}	public function coinin_show()	{		$user_wallet = db::table('user_wallet')->where(['userid' => $this->userid])->find();		$mymc_coin = new \mymc\coin();		$coin_list = $mymc_coin->all_xnb(1);		$user_coin = md('user')->get_coin_info();		$res = [];		$defaultCoin = '';		$qianbao = '';		foreach ($coin_list as $k => $v) {			if ($defaultCoin == '') {				$defaultCoin = $v['name'];				$qianbao = $v['name'];				if ($v['name'] == "tsb") {					$qianbao = $v['tsb_addr'];				} else {					$qianbao = md('user')->get_wallet_addr($v['name']);				}			} else {				$qianbao = '';			}			if ($v['wallet'] != 'rmb') {				$res["list"][$k] = ["id" => $v['id'], "name" => $v['name'], "title" => $v['title'], "img" => "http://" . $_SERVER["HTTP_HOST"] . "/upload/" . $v['img'], "keyong" => num($user_coin[$v['name']]), "dongjie" => num($user_coin[$v['name'] . "d"]), "status" => $coin_list[$k]['zr_jz'], "qianbao" => $qianbao, "wallet" => $v['wallet']];			}		}		$res["default"] = $res["list"][$defaultCoin];		ajax($res, 1);	}	public function coinin_qianbao()	{		$coin = iv("get.coin", 'w', '参数错误', 1);		$mymc_coin = new \mymc\coin();		$coin_list = $mymc_coin->all_xnb();		$user_coin = md('user')->get_coin_info();		$res = [];		foreach ($coin_list as $k => $v) {			if ($v["name"] == $coin) {				$qianbao = $v['name'];				if ($v['wallet'] == "tsb") {					$qianbao = $v['tsb_addr'];				} else {					$qianbao = md('user')->get_wallet_addr($v['name']);				}				$res = ["id" => $v['id'], "name" => $v['name'], "title" => $v['title'], "img" => "http://" . $_SERVER["HTTP_HOST"] . "/upload/" . $v['img'], "keyong" => num($user_coin[$v['name']]), "dongjie" => num($user_coin[$v['name'] . "d"]), "status" => $coin_list[$k]['zr_jz'], "qianbao" => $qianbao, "wallet" => $v['wallet']];				break;			}		}		ajax($res, 1);	}	public function my_up()	{		$num = iv("post.num", 'xnb', '转入数量格式错误');		$addr = iv("post.addr", 'dw', '钱包地址格式错误');		$coin = iv("post.coin", 'w', '转入币种参数错误');		$mymc_coin = new \mymc\coin();		$coin_info = $mymc_coin->find($coin);		if (!$coin_info) {			ajax('币种错误');		}		if ($coin_info['status'] != 1) {			ajax('币种已经禁用');		}		if ($coin_info['zr_jz'] != 1) {			ajax('币种禁止转入');		}		$res = db::table('coin_in')->add(['userid' => session("userid"), 'coinname' => $coin, 'zhuanchu' => $addr, 'type' => "站外", 'num' => $num, 'addtime' => time(), "status" => 0]);		if ($res) {			ajax('订单创建成功', 1);		} else {			ajax('订单创建失败');		}	}	public function coinin_log()	{		$coin = iv("get.coin", 'w', 'coin is must');		$mymc_coin = new \mymc\coin();		$coin_list = $mymc_coin->all_xnb();		if (!isset($coin_list[$coin])) {			ajax("币种不存在");		}		$coin_name = $coin_list[$coin]['title'];		$coin_mr_queren = $coin_list[$coin]["zr_dz"];		$where['coinname'] = $coin;		$where['userid'] = $this->userid;		$res = parent::pullpage("coin_in", $where, "id desc");		foreach ($res['list'] as $k => $v) {			$res['list'][$k] = ['id' => $v['id'], 'addtime' => addtime($v['addtime'], "m-d H:i"), 'coin_name' => $coin_name, 'num' => num($v['num']), 'fee' => num($v['fee']), 'mum' => num($v['mum']), 'queren' => $v['queren'] . "/" . $coin_mr_queren, 'txid' => $v['txid'], 'type' => $v['type'], 'status' => $v['status'],];		}		ajax($res, 1);	}	public function qianbao()	{		$coinname = mrz(iv('get.coinname', 'w_', 'coinname 格式错误', true), null);		$mymc_coin = new \mymc\coin();		$coin_list = $mymc_coin->select();		if ($coinname && !isset($coin_list[$coinname])) {			ajax("币种不存在");		}		foreach ($coin_list as $k => $v) {			if ($k == 'cny') {				unset($coin_list[$k]);			}		}		if ($coinname) {			$where = ["userid" => $this->userid, "coinname" => $coinname];		} else {			$where = ["userid" => $this->userid];		}		$res = db::table("user_qianbao")->where($where)->order("sort desc,id desc")->select();		if (!$res) {			ajax([], 1);		} else {			foreach ($res as $k => $v) {				$res[$k] = ["id" => $v['id'], "coinname" => $v['coinname'], "name" => $v['name'], "addr" => $v['addr'], "title" => $coin_list[$v['coinname']]['title'] . "(" . $v['coinname'] . ")", 'img' => "http://" . $_SERVER["HTTP_HOST"] . "/upload/" . $coin_list[$v['coinname']]['img'], 'addtime' => date("h-d H:i", $v['addtime']),];			}			ajax($res, 1);		}	}	public function qianbao_up()	{		$this->check_up('APP-新增钱包地址-上行');		$name = iv('post.name', 'a', '钱包标识格式错误');		$coinname = iv('post.coinname', 'w', '币种格式错误');		$addr = iv('post.addr', 'dw', '钱包地址格式错误');		$paypassword = iv('post.paypassword', 'password', '交易密码格式错误');		$res = md('user')->add_qianbao($this->userid, $name, $coinname, $addr, $paypassword);		if (isset($res[1]) && $res[1]) {			ajax('操作成功', 1);		} else {			ajax($res[0]);		}	}	public function qianbao_del()	{		$this->check_up('APP-删除钱包地址-上行');		$id = iv('post.id', 'd', '参数错误');		$paypassword = iv('post.paypassword', 'password', '交易密码格式错误');		$res = md('user')->del_qianbao($this->userid, $id, $paypassword);		if (isset($res[1]) && $res[1]) {			ajax('操作成功', 1);		} else {			ajax($res[0]);		}	}	public function coinout()	{		$this->check_up('APP-虚拟币转出-界面');		$ret = [];		$coin = iv("get.coin", 'w', '参数错误', true);		$mymc_coin = new \mymc\coin();		$coin_list = $mymc_coin->select();		if (!$coin) {			$coin = md('sys_config')->get('mr_coin');		}		if (!isset($coin_list[$coin])) {			ajax("币种名称错误");		}		$ret['moble'] = substr_replace(str_replace("|", " ", parent::getUserInfo("moble")), '****', 7, 4);		foreach ($coin_list as $key => $val) {			if ($val['name'] == "cny") {				continue;			}			$ret['coin_list'][$key] = $val['title'] . "(" . $val['name'] . ")";		}		$user_coin = db::table("user_coin")->where(['userid' => $this->userid])->find();		$ret['keyong'] = isset($user_coin[$coin]) ? num($user_coin[$coin]) : 0;		$ret['img'] = "http://" . $_SERVER["HTTP_HOST"] . "/upload/" . $coin_list[$coin]['img'];		$ret['fee'] = $coin_list[$coin]["zc_fee"];		$where['userid'] = $this->userid;		$where['coinname'] = $coin;		$user_qianbao = db::table('user_qianbao')->where($where)->select();		foreach ($user_qianbao as $val) {			$ret['user_qianbao'][$val['id']] = $val['name'] . " 尾号:" . mb_substr($val['addr'], -4);		}		if (!isset($ret['user_qianbao'])) {			$ret['user_qianbao'] = "";		}		ajax($ret, 1);	}	public function coinout_send_moble()	{		$user = db::table("user")->where(["id" => $this->userid])->find();		parent::doMoble("coinout", "send", $user['moble']);	}	public function coinout_up()	{		$this->check_up('APP-虚拟币转出-上行');		$coinname = iv("post.coin", 'w', '币种 格式错误');		$num = iv("post.num", 'xnb', '转出数量 格式错误');		$type = iv("post.bank", 'd', '提现地址格式错误');		$goole = iv("post.goole");		$paypassword = iv("post.paypassword", 'password', '交易密码格式错误');		$user = db::table("user")->where(["id" => $this->userid])->find();		$pre = parent::doMoble("coinout", "check", $user['moble'], 1);		$res = md("finan")->coin_out_up($this->userid, $coinname, $num, $type, $goole, $paypassword);		if (isset($res[1]) && $res[1]) {			mc($pre, null);			ajax('操作成功', 1);		} else {			ajax($res[0]);		}	}	public function coinoutlog()	{		$coinname = mrz(iv('get.coinname', 'w_', 'coinname 格式错误', true), null);		$mymc_coin = new \mymc\coin();		$coin_list = $mymc_coin->all_xnb();		if ($coinname && !isset($coin_list[$coinname])) {			ajax($coinname . " 币种不存在");		}		$coin_list_type = "";		foreach ($coin_list as $k => $v) {			$coin_list_type[$v['name']] = $v['title'] . "(" . $v['name'] . ")";		}		if ($coinname) {			$where['coinname'] = $coinname;		}		$where['userid'] = $this->userid;		$res = parent::pullpage("coin_out", $where, "id desc");		$res['coin_list_type'] = $coin_list_type;		foreach ($res['list'] as $k => $v) {			$res['list'][$k] = ['id' => $v['id'], 'addtime' => addtime($v['addtime'], "m-d H:i"), 'coin_name' => $coin_list[$v['coinname']]['title'], 'username' => $v['username'], 'num' => num($v['num']), 'fee' => num($v['fee']), 'mum' => num($v['mum']), 'txid' => $v['txid'], 'type' => $v['type'], 'status' => $v['status'],];		}		ajax($res, 1);	}	public function trades()	{		$this->market = mrz(iv('get.market', 'w_', '市场错误', true), null);		$this->type = mrz(iv('get.type', 'd', '类型错误', true), null);		$this->status = mrz(iv('get.status', 'd', '状态错误', true), null);		$where['userid'] = $this->userid;		if ($this->market) {			$where['market'] = $this->market;		}		if ($this->type > 0) {			$where['type'] = $this->type;		}		if ($this->status > 0) {			$where['status'] = $this->status - 1;		}		$market_list = md('trade')->market_list();		if ($this->market && !isset($market_list[$this->market])) {			ajax("市场不存在");		}		$res = parent::pullpage("trade", $where, "id desc");		foreach ($market_list as $index => $item) {			$res['market_type_list'][$index] = $item['title'];		}		foreach ($res['list'] as $k => $v) {			$res['list'][$k] = ['id' => $v['id'], "img" => 'http://' . $_SERVER["HTTP_HOST"] . "/upload/" . $market_list[$v['market']]['img'], "title" => $market_list[$v['market']]['title'], 'addtime' => addtime($v['addtime'], "m-d H:i"), 'type' => $v['type'], 'price' => $v['price'], 'num' => $v['num'], 'deal' => $v['deal'], 'status' => $v['status'],];		}		ajax($res, 1);	}	public function order()	{		$market = mrz(iv('get.market', 'w_', '市场错误', true), null);		$type = mrz(iv('get.type', 'd', '类型错误', true), null);		$where['userid|peerid'] = $this->userid;		if ($market) {			$where['market'] = $market;		}		if ($type > 0) {			if ($type == 1) {				$where['userid'] = $this->userid;			} else {				$where['peerid'] = $this->userid;			}		}		$market_list = md('trade')->market_list();		$res = parent::pullpage("trade_log", $where, "id desc");		foreach ($market_list as $index => $item) {			$res['market_type_list'][$index] = $item['title'];		}		foreach ($res['list'] as $k => $v) {			if ($v['userid'] == $this->userid) {				if ($v['userid'] == $v['peerid']) {					$type_title = "自买 & 自卖";				} else {					$type_title = "买入";				}			} else {				$type_title = "卖出";			}			$res['list'][$k] = ['id' => $v['id'], "img" => 'http://' . $_SERVER["HTTP_HOST"] . "/upload/" . $market_list[$v['market']]['img'], "title" => $market_list[$v['market']]['title'], 'addtime' => addtime($v['addtime'], "m-d H:i"), 'type' => $type_title, 'price' => $v['price'], 'num' => $v['num'], 'mum' => $v['mum'], 'fee_buy' => $v['fee_buy'], 'fee_sell' => $v['fee_sell'],];		}		ajax($res, 1);	}	public function invit()	{		$res['invit'] = parent::getUserInfo("invit");		$res['invit_url'] = $this->host . "/index/index?invit=" . parent::getUserInfo("invit");		$web_invit_text = md('sys_config')->get('web_invit_text');		$res['text'] = $this->host . "?invit=" . parent::getUserInfo("invit") . "   " . $web_invit_text;		ajax($res, 1);	}	public function invitlog()	{		;		$where['invit_1'] = $this->userid;		$pages = parent::pullpage("user", $where, "id asc");		foreach ($pages['list'] as $k => $v) {			$pages['list'][$k] = ["id" => $v['id'], "username" => $v['username'], "invit" => $v['invit'], "invit_1" => $v['invit_1'], "addtime" => addtime($v['addtime']), "isactive" => "已认证"];			$pages['list'][$k]['invits'] = md('user')->invit(['invit_1' => $v['id']], 'id asc', 'id,username,addtime,invit_1');			$pages['list'][$k]['invitss'] = count($pages['list'][$k]['invits']);			foreach ($pages['list'][$k]['invits'] as $kk => $vv) {				$pages['list'][$k]['invits'][$kk]['addtime'] = addtime($vv['addtime']);				$pages['list'][$k]['invits'][$kk]['isactive'] = "已认证";				$pages['list'][$k]['invits'][$kk]['invits'] = md('user')->invit(['invit_1' => $vv['id']], 'id asc', 'id,username,addtime,invit_1');				foreach ($pages['list'][$k]['invits'][$kk]['invits'] as $kkk => $vvv) {					$pages['list'][$k]['invits'][$kk]['invits'][$kkk]['addtime'] = addtime($vvv['addtime']);					$pages['list'][$k]['invits'][$kk]['invits'][$kkk]['isactive'] = "已认证";				}				$pages['list'][$k]['invits'][$kk]['invitss'] = count($pages['list'][$k]['invits'][$kk]['invits']);			}		}		ajax($pages, 1);	}	public function award()	{		$where['userid'] = $this->userid;		$res = parent::pullpage("user_invit", $where, "id desc");		foreach ($res['list'] as $k => $v) {			if ($v['invit'] != 0) {				$v['invit'] = db::table("user")->where(["id" => $v["invit"]])->find("username");			} else {				$v['invit'] = '系统';			}			$res['list'][$k] = ["invitname" => $v['invit'], "type" => $v['type'], "name" => $v['name'], "addtime" => addtime($v['addtime'], "m-d H:i"), "num" => num($v['num']), "fee" => num($v['fee']), "feecoin" => $v['feecoin'], "status" => $v['status'],];		}		ajax($res, 1);	}	function luhm($no)	{		$arr_no = str_split($no);		$last_n = $arr_no[count($arr_no) - 1];		krsort($arr_no);		$i = 1;		$total = 0;		foreach ($arr_no as $n) {			if ($i % 2 == 0) {				$ix = $n * 2;				if ($ix >= 10) {					$nx = 1 + ($ix % 10);					$total += $nx;				} else {					$total += $ix;				}			} else {				$total += $n;			}			$i++;		}		$total -= $last_n;		$total *= 9;		if ($last_n == ($total % 10)) {			return 1;		} else {			return 0;		}	}}