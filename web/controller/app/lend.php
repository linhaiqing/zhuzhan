<?phpnamespace app;use Move\db;class lend extends home{	protected $userid = "";	public function __construct()	{		parent::__construct();		$this->userid = $this->userid();		if (!$this->userid) {			ajax('请登录', -99);		}	}	public function lendinfo()	{		$lend_qi = db::table("lend_qi")->where(["status" => 1])->select();		if ($lend_qi) {			ajax($lend_qi, 1);		} else {			ajax('暂无借款期数配置');		}	}	public function coinin_show()	{		$user_wallet = db::table('user_wallet')->where(['userid' => $this->userid])->find();		$coin_list = md('coin')->all_xnb_list();		$user_coin = md('user')->get_coin_info();		$res = [];		$defaultCoin = '';		foreach ($coin_list as $k => $v) {			if ($defaultCoin == '') $defaultCoin = $v['name'];			$res["list"][$k] = ["id" => $v['id'], "name" => $v['name'], "title" => $v['title'], "img" => $this->host . "/upload/" . $v['img'], "keyong" => num($user_coin[$v['name']]), "dongjie" => num($user_coin[$v['name'] . "d"]), "status" => $coin_list[$k]['zr_jz'], "qianbao" => $coin_list[$k]['zr_jz'] ? $user_wallet[$v['name']] : "",];		}		$res["default"] = $res["list"][$defaultCoin];		ajax($res, 1);	}	public function coinin_log()	{		$coin = iv("get.coin", 'w', 'coin is must');		$coin_list = md('coin')->all_xnb_list();		if (!isset($coin_list[$coin])) {			ajax("币种不存在");		}		$coin_name = $coin_list[$coin]['title'];		$coin_mr_queren = $coin_list[$coin]["zr_dz"];		$where['coinname'] = $coin;		$where['userid'] = $this->userid;		$res = parent::pullpage("coin_in", $where, "id desc");		foreach ($res['list'] as $k => $v) {			$res['list'][$k] = ['id' => $v['id'], 'addtime' => addtime($v['addtime'], "m-d H:i"), 'coin_name' => $coin_name, 'num' => num($v['num']), 'fee' => num($v['fee']), 'mum' => num($v['mum']), 'queren' => $v['queren'] . "/" . $coin_mr_queren, 'type' => $v['type'], 'status' => $v['status'],];		}		ajax($res, 1);	}	public function qianbao()	{		$coinname = mrz(iv('get.coinname', 'w_', 'coinname 格式错误', true), null);		$coin_list = md('coin')->lists();		if ($coinname && !isset($coin_list[$coinname])) {			ajax("币种不存在");		}		foreach ($coin_list as $k => $v) {			if ($k == 'cny') {				unset($coin_list[$k]);			}		}		if ($coinname) {			$where = ["userid" => $this->userid, "coinname" => $coinname];		} else {			$where = ["userid" => $this->userid];		}		$res = db::table("user_qianbao")->where($where)->order("sort desc,id desc")->select();		if (!$res) {			ajax("没有记录");		} else {			foreach ($res as $k => $v) {				$res[$k] = ["id" => $v['id'], "coinname" => $v['coinname'], "name" => $v['name'], "addr" => $v['addr'], "title" => $coin_list[$v['coinname']]['title'] . "(" . $v['coinname'] . ")", 'img' => $this->host . "/upload/" . $coin_list[$v['coinname']]['img'], 'addtime' => date("h-d H:i", $v['addtime']),];			}			ajax($res, 1);		}	}	public function qianbao_up()	{		$name = iv('post.name', 'a', '钱包标识格式错误');		$coinname = iv('post.coinname', 'w', '币种格式错误');		$addr = iv('post.addr', 'dw', '钱包地址格式错误');		$paypassword = iv('post.paypassword', 'password', '交易密码格式错误');		$res = md('user')->add_qianbao($this->userid, $name, $coinname, $addr, $paypassword);		if (isset($res[1]) && $res[1]) {			ajax('操作成功！', 1);		} else {			ajax($res[0]);		}	}	public function qianbao_del()	{		$id = iv('post.id', 'd', '参数错误');		$paypassword = iv('post.paypassword', 'password', '交易密码格式错误');		$res = md('user')->del_qianbao($this->userid, $id, $paypassword);		if (isset($res[1]) && $res[1]) {			ajax('操作成功！', 1);		} else {			ajax($res[0]);		}	}	public function coinout()	{		$ret = [];		$coin = iv("get.coin", 'w', '参数错误', true);		$coin_list = md('coin')->lists();		if (!$coin) {			$coin = md('config')->get('mr_coin');		}		if (!isset($coin_list[$coin])) {			ajax("币种名称错误");		}		$ret['moble'] = substr_replace(str_replace("|", " ", parent::getUserInfo("moble")), '****', 7, 4);		foreach ($coin_list as $key => $val) {			if ($val['name'] == "cny") {				continue;			}			$ret['coin_list'][$key] = $val['title'] . "(" . $val['name'] . ")";		}		$user_coin = db::table("user_coin")->where(['userid' => $this->userid])->find();		$ret['keyong'] = isset($user_coin[$coin]) ? num($user_coin[$coin]) : 0;		$ret['img'] = $this->host . "/upload/" . $coin_list[$coin]['img'];		$ret['fee'] = $coin_list[$coin]["zc_fee"];		$where['userid'] = $this->userid;		$where['coinname'] = $coin;		$user_qianbao = db::table('user_qianbao')->where($where)->select();		foreach ($user_qianbao as $val) {			$ret['user_qianbao'][$val['id']] = $val['name'] . " 尾号:" . mb_substr($val['addr'], -4);		}		if (!isset($ret['user_qianbao'])) {			$ret['user_qianbao'] = "";		}		ajax($ret, 1);	}	public function coinout_send_moble()	{		$user = db::table("user")->where(["id" => $this->userid])->find();		parent::doMoble("coinout", "send", $user['moble']);	}	public function coinout_up()	{		$coinname = iv("post.coin", 'w', '币种 格式错误');		$num = iv("post.num", 'xnb', '转出数量 格式错误');		$type = iv("post.bank", 'd', '提现地址格式错误');		$goole = iv("post.goole");		$paypassword = iv("post.paypassword", 'password', '交易密码格式错误');		$user = db::table("user")->where(["id" => $this->userid])->find();		$pre = parent::doMoble("coinout", "check", $user['moble'], 1);		$res = md("finan")->coin_out_up($this->userid, $coinname, $num, $type, $goole, $paypassword);		if (isset($res[1]) && $res[1]) {			mc($pre, null);			ajax('操作成功！', 1);		} else {			ajax($res[0]);		}	}	public function coinoutlog()	{		$coinname = mrz(iv('get.coinname', 'w_', 'coinname 格式错误', true), null);		$coin_list = md('coin')->all_xnb_list();		if ($coinname && !isset($coin_list[$coinname])) {			ajax($coinname . " 币种不存在");		}		$coin_list_type = "";		foreach ($coin_list as $k => $v) {			$coin_list_type[$v['name']] = $v['title'] . "(" . $v['name'] . ")";		}		if ($coinname) {			$where['coinname'] = $coinname;		}		$where['userid'] = $this->userid;		$res = parent::pullpage("coin_out", $where, "id desc");		$res['coin_list_type'] = $coin_list_type;		foreach ($res['list'] as $k => $v) {			$res['list'][$k] = ['id' => $v['id'], 'addtime' => addtime($v['addtime'], "m-d H:i"), 'coin_name' => $coin_list[$v['coinname']]['title'], 'username' => $v['username'], 'num' => num($v['num']), 'fee' => num($v['fee']), 'mum' => num($v['mum']), 'type' => $v['type'], 'status' => $v['status'],];		}		ajax($res, 1);	}	public function trades()	{		$this->market = mrz(iv('get.market', 'w_', '市场错误', true), null);		$this->type = mrz(iv('get.type', 'd', '类型错误', true), null);		$this->status = mrz(iv('get.status', 'd', '状态错误', true), null);		$where['userid'] = $this->userid;		if ($this->market) {			$where['market'] = $this->market;		}		if ($this->type > 0) {			$where['type'] = $this->type;		}		if ($this->status > 0) {			$where['status'] = $this->status - 1;		}		$market_list = md('trade')->market_list();		if ($this->market && !isset($market_list[$this->market])) {			ajax("市场不存在");		}		$res = parent::pullpage("trade", $where, "id desc");		foreach ($market_list as $index => $item) {			$res['market_type_list'][$index] = $item['title'];		}		foreach ($res['list'] as $k => $v) {			$res['list'][$k] = ['id' => $v['id'], "img" => $this->host . "/upload/" . $market_list[$v['market']]['img'], "title" => $market_list[$v['market']]['title'], 'addtime' => addtime($v['addtime'], "m-d H:i"), 'type' => $v['type'], 'price' => num($v['price']), 'num' => num($v['num']), 'deal' => num($v['deal']), 'status' => $v['status'],];		}		ajax($res, 1);	}	public function order()	{		$market = mrz(iv('get.market', 'w_', '市场错误', true), null);		$type = mrz(iv('get.type', 'd', '类型错误', true), null);		$where['userid|peerid'] = $this->userid;		if ($market) {			$where['market'] = $market;		}		if ($type > 0) {			$where['type'] = $type;		}		$market_list = md('trade')->market_list();		$res = parent::pullpage("trade_log", $where, "id desc");		foreach ($market_list as $index => $item) {			$res['market_type_list'][$index] = $item['title'];		}		foreach ($res['list'] as $k => $v) {			if ($v['type'] == 1) {				if ($v['userid'] == $v['peerid']) {					$type_title = "自买 & 自卖";				} else {					$type_title = "买入";				}			} else {				$type_title = "卖出";			}			$res['list'][$k] = ['id' => $v['id'], "img" => $this->host . "/upload/" . $market_list[$v['market']]['img'], "title" => $market_list[$v['market']]['title'], 'addtime' => addtime($v['addtime'], "m-d H:i"), 'type' => $type_title, 'price' => num($v['price']), 'num' => num($v['num']), 'mum' => num($v['mum']), 'fee_buy' => num($v['fee_buy']), 'fee_sell' => num($v['fee_sell']),];		}		ajax($res, 1);	}	public function invit()	{		$res['invit'] = parent::getUserInfo("invit");		$res['invit_url'] = $this->host . "/index/index?invit=" . parent::getUserInfo("invit");		$res['text'] = $this->host . "?invit=" . parent::getUserInfo("invit") . "   " . md('config')->get('web_invit_text');		ajax($res, 1);	}	public function invitlog()	{		;		$where['invit_1'] = $this->userid;		$pages = parent::pullpage("user", $where, "id asc");		foreach ($pages['list'] as $k => $v) {			$pages['list'][$k] = ["id" => $v['id'], "username" => $v['username'], "invit" => $v['invit'], "invit_1" => $v['invit_1'], "addtime" => addtime($v['addtime']), "isactive" => "已认证"];			$pages['list'][$k]['invits'] = md('user')->invit(['invit_1' => $v['id']], 'id asc', 'id,username,addtime,invit_1');			$pages['list'][$k]['invitss'] = count($pages['list'][$k]['invits']);			foreach ($pages['list'][$k]['invits'] as $kk => $vv) {				$pages['list'][$k]['invits'][$kk]['addtime'] = addtime($vv['addtime']);				$pages['list'][$k]['invits'][$kk]['isactive'] = "已认证";				$pages['list'][$k]['invits'][$kk]['invits'] = md('user')->invit(['invit_1' => $vv['id']], 'id asc', 'id,username,addtime,invit_1');				foreach ($pages['list'][$k]['invits'][$kk]['invits'] as $kkk => $vvv) {					$pages['list'][$k]['invits'][$kk]['invits'][$kkk]['addtime'] = addtime($vvv['addtime']);					$pages['list'][$k]['invits'][$kk]['invits'][$kkk]['isactive'] = "已认证";				}				$pages['list'][$k]['invits'][$kk]['invitss'] = count($pages['list'][$k]['invits'][$kk]['invits']);			}		}		ajax($pages, 1);	}	public function award()	{		$coin_list = md('coin')->all_xnb_list();		$where['userid'] = $this->userid;		$res = parent::pullpage("user_invit", $where, "id desc");		foreach ($res['list'] as $k => $v) {			$res['list'][$k] = ["invitname" => $v['invit'] ? md('user')->find(['id' => $v['invit']], 'username') : '系统', "type" => $v['type'], "name" => $v['name'], "addtime" => addtime($v['addtime'], "m-d H:i"), "num" => num($v['num']), "fee" => num($v['fee']), "feecoin" => isset($coin_list[$v['feecoin']]) ? $coin_list[$v['feecoin']]['title'] : $v['feecoin'], "status" => $v['status'],];		}		ajax($res, 1);	}	public function cardCharge()	{		$cardnum = iv('post.cardnum');		$paypassword = iv('post.paypassword');		$user = db::table("user")->where(["id" => $this->userid])->find();		$chargecard = db::table("charge_card")->where(["cardnum" => $cardnum, "password" => $paypassword, "status#!=" => 0])->find();		$id = $chargecard["id"];		if (!$this->userid) {			ajax("请先登录");		}		if (!$chargecard) {			ajax("输入的卡不存在");			if ($chargecard["status"] != 1 && $chargecard["check"] != 1) ajax("该卡不能正常使用");		}		if (strtotime(date("y-m-d", $chargecard["addtime"])) > time()) {			ajax('未到充值时间');		}		if (strtotime(date("y-m-d", $chargecard["endtime"])) < time()) {			ajax('卡已过期');		}		if ($chargecard["status"] != 1) {			ajax("充值卡不存在或已使用");		}		if ($chargecard["status"] == 1 && $chargecard["check"] == 0) {			$log = ["userid" => session("userid"), "cardnum" => $cardnum, "price" => $chargecard ["price"], "cointype" => $chargecard["cointype"], "addtime" => time(), "status" => 3];			$rs = [];			db::exec("set autocommit=0");			db::exec("lock tables  #pre#charge_log write , #pre#charge_card write,#pre#user_coin write ");			$rs[] = db::table("charge_log")->add($log);			$res[] = db::table("charge_card")->where(["id" => $id])->save(["status" => 2]);			if (check_arr($rs)) {				db::exec("commit");				db::exec("unlock tables");				ajax("提交成功,等待后台确认", 1);			} else {				db::exec("rollback");				db::exec("unlock tables");				ajax("提交失败");			}		}		if ($chargecard["status"] == 1 && $chargecard["check"] == 1) {			$log = ["userid" => session("userid"), "cardnum" => $cardnum, "price" => $chargecard ["price"], "cointype" => $chargecard["cointype"], "addtime" => time(), "gettime" => time(), "status" => 1];			$userid = $log['userid'];			$coin = $log['cointype'];			$price = $log['price'];			$rs = [];			db::exec("set autocommit=0");			db::exec("lock tables  #pre#charge_log write , #pre#charge_card write,#pre#user_coin write ");			$rs[] = db::table("charge_log")->add($log);			$res[] = db::table("charge_card")->where(["id" => $id])->save(["status" => 2]);			$res[] = db::table("user_coin")->where(["userid" => $userid])->set([$coin . "#+" => $price]);			if (check_arr($rs)) {				db::exec("commit");				db::exec("unlock tables");				ajax("卡密充值成功", 1);			} else {				db::exec("rollback");				db::exec("unlock tables");				ajax("卡密充值失败");			}		}	}	public function cardChargeLog()	{		$where = ["userid" => session("userid"), "status#!=" => 0];		$res = parent::pullpage("charge_log", $where, "id desc");		$list = $res["list"];		foreach ($list as $k => $v) {			$username = db::table("user")->where(["id" => $v["userid"]])->find();			$list[$k]["username"] = substr_replace(str_replace("|", " ", $username['username']), '**', 3, 2);			$list[$k]["addtime"] = addtime($v["addtime"]);		}		$res["list"] = $list;		if ($res) {			ajax($res, 1);		} else {			ajax('暂无充值记录');		}	}}