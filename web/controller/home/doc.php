<?phpnamespace home;use Move\db;use Move\ext\page;class doc extends home{	public function __construct()	{		parent::__construct();		$this->is_game('doc');	}	public function index()	{		$this->set_title('文档中心');		$type['id'] = iv('get.typeid', 'd', '参数错误', 1);		if (!$type['id']) {			$type = db::table("doc_type")->where(["mr" => 1, 'type' => 1])->find();		} else {			$type = db::table("doc_type")->where(["id" => $type['id']])->find();		}		if (!$type['id']) {			$type = db::table("doc_type")->where(["status" => 1, 'type' => 1])->find();		}		$this->assign('type', $type);		$type_arr = db::table("doc_type")->where(["status" => "1", 'type' => $type['type']])->order("sort asc ,id desc ,addtime desc")->limit(4)->select();		$this->assign('type_arr', $type_arr);		$where = ["status" => 1, 'type_id' => $type['id']];		$count = db::table("doc")->where($where)->count();		$PageObj = new page($count, 10);		$show = $PageObj->show();		$list = db::table("doc")->where($where)->order("sort asc ,id desc ,addtime desc")->limit($PageObj->firstRow, $PageObj->listRows)->select();		foreach ($list as $k => $v) {			$list[$k]['jian'] = mb_substr(strip_tags($v['value']), 0, 130) . '...';			$pattern = "/<[img|IMG].*?src=[\'|\"](.*?(?:[\.gif|\.jpg|\.png]))[\'|\"].*?[\/]?>/";			preg_match($pattern, $v['value'], $match);			if ($match) {				$list[$k]['img'] = $match[1];			} else {				$list[$k]['img'] = '/static/default/home/img/noimg.png';			}		}		$pages = ['show' => $show, 'list' => $list];		$this->assign('pages', $pages);		$type_hot = db::table("doc")->where($where)->limit(10)->order("hot desc ,sort asc ,id desc ,addtime desc")->select();		$this->assign('type_hot', $type_hot);		$this->display();	}	public function detail()	{		$this->set_title('文档详情');		$doc['id'] = iv('get.id', 'd', '参数错误', 1);		if (!$doc['id']) {			$doc = db::table("doc")->find();		} else {			$doc = db::table("doc")->where(["id" => $doc['id']])->find();		}		$doc['jian'] = mb_substr(strip_tags($doc['value']), 0, 100) . '...';		$this->assign('doc', $doc);		$type = db::table("doc_type")->where(["id" => $doc['type_id']])->find();		$this->assign('type', $type);		$type_arr = db::table("doc_type")->where(["status" => "1", 'type' => $type['type']])->order("sort asc ,id desc ,addtime desc")->limit(4)->select();		$this->assign('type_arr', $type_arr);		$type_hot = db::table("doc")->where(["status" => "1", 'type_id' => $type['id']])->limit(10)->order("hot desc ,sort asc ,id desc ,addtime desc")->select();		$this->assign('type_hot', $type_hot);		$shang = db::table("doc")->where(['id#<' => $doc['id'], 'type_id' => $doc['type_id'], 'status' => 1])->order("sort asc ,id desc ,addtime desc")->find();		if (!$shang) {			$shang['id'] = $doc['id'];			$shang['title'] = '没有了';		}		$this->assign('shang', $shang);		$xia = db::table("doc")->where(['id#>' => $doc['id'], 'type_id' => $doc['type_id'], 'status' => 1])->find();		if (!$xia) {			$xia['id'] = $doc['id'];			$xia['title'] = '没有了';		}		$this->assign('xia', $xia);		$this->display();	}	public function shows()	{		$doc['id'] = iv('get.id', 'd', '参数错误', 1);		if (!$doc['id']) {			$doc = db::table("doc")->find();		} else {			$doc = db::table("doc")->where(["id" => $doc['id']])->find();		}		$this->assign('doc', $doc);		$this->display();	}}