<?phpnamespace home;use Move\db;use Move\ext\page;class lend extends home{	public function __construct()	{		parent::__construct();		$this->is_game('lend');	}	public function con()	{		if ($this->userid) {			$checkdanbao = db::table("lend_danbao")->where(["userid" => $this->userid])->find();			$this->assign("checkdanbao", $checkdanbao);		}	}	public function index()	{		$this->set_title('有借有还');		$this->con();		if ($this->userid) {			md("lend")->common($this->userid);		}		$lend_qi = db::table("lend_qi")->where(["status" => 1])->select();		if ($this->userid) {			$userdata = db::table("user")->where(["id" => session("userid")])->field("id,username")->find();			$this->assign("userdata", $userdata);		}		$this->assign("lend_qi", $lend_qi);		$this->display();	}	public function danbaoren()	{		$keyword = iv("post.keywords", "a", "参数错误");		$where["status"] = 1;		if ($keyword) {			$where["username#like"] = "%" . $keyword . "%";		}		$lend_danbao = db::table("lend_danbao")->where($where)->select();		ajax("参数正常", 1, $lend_danbao);	}	public function info()	{		$num = iv("post.num", "d", "借款金额参数错误");		$qi = iv("post.qi", "d", "借款期限参数错误");		$backtype = iv("post.backtype", "d", "还款方式参数错误");		$lend_qi = db::table("lend_qi")->where(["id" => $qi, "status" => 1])->find();		if (empty($lend_qi)) {			$res = "暂无信息";		} else {			if ($backtype == 1) {				$res = $num * ($lend_qi["qi"] + 1) / 2 * $lend_qi["lixi"] / 100 + $num;			} else {				if ($backtype == 2 || $backtype == 3) {					$res = $num * (1 + $lend_qi["qi"] * $lend_qi["lixi"] / 100);				}			}		}		ajax("参数正常", 1, $res);	}	public function up()	{		$this->check_up('借贷');		$num = iv("post.num", "d", "借款金额参数错误");		$qi = iv("post.qi", "d", "借款期限参数错误");		$moble = iv("post.moble", "moble", "手机号码参数错误");		$keywords = iv("post.keywords", "a", "担保人参数错误");		$backtype = iv("post.backtype", "d", "还款方式参数错误");		$paypassword = iv("post.paypassword", "password", "交易密码参数错误");		if (empty(session("userid"))) {			ajax("请先登录");		}		$user1 = db::table("user")->where(["id" => session("userid")])->find();		if (hashs($paypassword) != $user1["paypassword"]) {			ajax("交易密码错误");		}		$danbao = db::table("lend_danbao")->where(["username" => $keywords, "status" => 1])->find();		if (empty($danbao)) {			ajax("无效的担保人");		}		$danbaoid = $danbao["userid"];		if ($danbaoid == session("userid")) {			ajax("非法担保");		}		$lend_back = db::table("lend_back")->where(["userid" => session("userid"), "status" => 3])->find();		if ($lend_back) {			ajax("您有未还清的超期账单,不能借款");		}		$peizhi = db::table("lend_set")->where(["status" => 1])->find();		if (empty($peizhi)) {			ajax("系统配置异常,请联系管理员");		}		if ($peizhi["min"] && $num < $peizhi["min"]) {			ajax("单次借款不得小于" . $peizhi['min']);		}		if ($peizhi["max"] && $num > $peizhi["max"]) {			ajax("单次借款不得大于" . $peizhi['max']);		}		$status = [2, 3];		$userpay = db::table("finan_pay")->where(["userid" => session("userid"), "status#in" => $status, "coinname" => "cny"])->sum("num");		$userout = db::table("finan_out")->where(["userid" => session("userid"), "status#in" => $status, "coinname" => "cny"])->sum("num");		$userlend = db::table("lend")->where(["userid" => session("userid")])->sum("shen");		if (($userpay - $userout) * $peizhi["limit"] / 100 < ($num + $userlend)) {			ajax("贷款总额超过系统限制");		}		$danbaopay = db::table("finan_pay")->where(["userid" => $danbaoid, "status#in" => $status, "coinname" => "cny"])->sum("num");		$danbaoout = db::table("finan_out")->where(["userid" => $danbaoid, "status#in" => $status, "coinname" => "cny"])->sum("num");		$danbaolend = db::table("lend")->where(["danbaoid" => $danbaoid])->sum("num");		if (($danbaopay - $danbaoout - $danbaolend) < $num) {			ajax("该担保人资格已耗尽");		}		$lend_qi = db::table("lend_qi")->where(["id" => $qi, "status" => 1])->find();		if (empty($lend_qi)) {			ajax("该分期已禁用");		}		$res = db::table("lend")->add(["userid" => session("userid"), "danbaoid" => $danbaoid, "num" => $num, "shen" => $num, "backtype" => $backtype, "qi" => $lend_qi["qi"], "lixi" => $lend_qi["lixi"], "moble" => $moble, "addtime" => time(), "status" => 2]);		if ($res) {			ajax("操作成功,等待担保人确认", 1);		} else {			ajax("操作失败,请重试");		}	}	public function check()	{		$this->check_up('借贷 担保人确认');		$id = iv("post.id", "d", "参数错误");		$paypassword = iv("post.paypassword", "dw", "参数错误");		if (empty(session("userid"))) {			ajax("请先登录");		}		$user1 = db::table("user")->where(["id" => session("userid")])->find();		if (hashs($paypassword) != $user1["paypassword"]) {			ajax("交易密码错误");		}		$lend = db::table("lend")->where(["id" => $id])->find();		if (empty($lend)) {			ajax("数据错误");		}		if ($lend["danbaoid"] != session("userid") && $lend["status"] != 2) {			ajax("非法操作");		}		$res = db::table("lend")->where(["id" => $id])->save(["status" => 3]);		if ($res) {			ajax("操作成功", 1);		} else {			ajax("操作失败");		}	}	public function log()	{		$this->con();		if ($this->userid) {			md("lend")->common($this->userid);		}		$peizhi = db::table("lend_set")->where(["status" => 1])->find();		if (empty($peizhi)) {			show_msg("系统配置异常,请联系管理员");		}		if ($this->userid) {			$lendsum = db::table("lend")->where(["userid" => session("userid")])->sum("num");			$this->assign("lendsum", $lendsum);			$shensum = db::table("lend")->where(["userid" => session("userid")])->sum("shen");			$this->assign("shensum", $shensum);			$danbaosum = db::table("lend")->where(["danbaoid" => session("userid")])->sum("num");			$this->assign("danbaosum", $danbaosum);			$danbaogetsum = db::table("lend_back")->where(["userid" => session("userid")])->sum("danbaofee");			$this->assign("danbaogetsum", $danbaogetsum);			$status = [1, 3];			$shouldpay = db::table("lend_back")->where(["userid" => session("userid"), "status#in" => $status])->sum("should");			$this->assign("shouldpay", $shouldpay);		} else {			$this->assign("lendsum", '');			$this->assign("shensum", '');			$this->assign("danbaosum", '');			$this->assign("danbaogetsum", '');			$this->assign("shouldpay", '');		}		if ($this->userid) {			$where = ["userid" => $this->userid];			$count1 = db::table("lend")->where($where)->count();			$PageObj1 = new page($count1, 15);			$show1 = $PageObj1->show();			$list1 = db::table("lend")->where($where)->order("`id` desc")->limit($PageObj1->firstRow, $PageObj1->listRows)->select();			foreach ($list1 as $k => $v) {				$username = db::table("user")->where(["id" => $v["danbaoid"]])->find();				if ($username) {					$list1[$k]["username"] = $username['username'];				}			}		} else {			$show1 = [];			$list1 = [];		}		$lend_log = ['show' => $show1, 'list' => $list1];		$this->assign("lend_log", $lend_log);		if ($this->userid) {			$where2 = ["userid" => $this->userid];			$count2 = db::table("lend_back")->where($where2)->count();			$PageObj2 = new page($count2, 15);			$show2 = $PageObj2->show();			$list2 = db::table("lend_back")->where($where2)->order("`addtime` desc,id   desc")->limit($PageObj2->firstRow, $PageObj2->listRows)->select();		} else {			$show2 = [];			$list2 = [];		}		$back_log = ['show' => $show2, 'list' => $list2];		$this->assign("back_log", $back_log);		if ($this->userid) {			$count3 = db::table("lend")->where(["danbaoid" => session("userid")])->count();			$PageObj3 = new page($count3, 15);			$show3 = $PageObj3->show();			$list3 = db::table("lend")->where(["danbaoid" => session("userid")])->order("`id` desc")->limit($PageObj3->firstRow, $PageObj3->listRows)->select();			$danbao_log = ['show' => $show3, 'list' => $list3];			foreach ($danbao_log["list"] as $k => $v) {				$username = db::table("user")->where(["id" => $v["userid"]])->find();				if ($username) {					$danbao_log["list"][$k]["username"] = $username["username"];				}				if ($v["backtype"] == 1) {					$danbao_log["list"][$k]["lixi"] = $v["shen"] * $v["lixi"] / 100 * $peizhi["danbao_fee"] / 100;				} else {					if ($v["backtype"] == 2) {						$danbao_log["list"][$k]["lixi"] = $v["num"] * $v["lixi"] / 100 * $peizhi["danbao_fee"] / 100;					} else {						if ($v["backtype"] == 3) {							$danbao_log["list"][$k]["lixi"] = $v["num"] * $v["lixi"] / 100 * $peizhi["danbao_fee"] / 100;						}					}				}			}		} else {			$show3 = [];			$list3 = [];			$danbao_log = ['show' => $show3, 'list' => $list3];		}		$this->assign("danbao_log", $danbao_log);		if ($this->userid) {			$mydanbao = db::table("lend")->where(["danbaoid" => session("userid"), "status#>=" => 4])->select();			if ($mydanbao) {				foreach ($mydanbao as $k => $v) {					$id[] = $v["id"];				}				$where = ["lendid#in" => $id, "status" => 3];				$count4 = db::table("lend_back")->where($where)->count();				$PageObj4 = new page($count4, 15);				$show4 = $PageObj4->show();				$list4 = db::table("lend_back")->where($where)->order("`id` desc")->limit($PageObj4->firstRow, $PageObj4->listRows)->select();			} else {				$show4 = [];				$list4 = [];			}			$lend_danbaopay = ['show' => $show4, 'list' => $list4];			$this->assign("lend_danbaopay", $lend_danbaopay);			$count5 = db::table("lend_fee")->where(["userid" => session("userid")])->count();			$PageObj5 = new page($count5, 15);			$show5 = $PageObj5->show();			$list5 = db::table("lend_fee")->where(["userid" => session("userid")])->order("`id` desc")->limit($PageObj5->firstRow, $PageObj5->listRows)->select();		} else {			$show5 = [];			$list5 = [];		}		$lend_fee = ['show' => $show5, 'list' => $list5];		$this->assign("lend_fee", $lend_fee);		$this->display();	}	public function payback()	{		$this->check_up('借贷 还款');		$id = iv("post.id", "d", "参数错误");		$paypassword = iv("post.paypassword", "password", "参数错误");		if (empty(session("userid"))) {			ajax("请先登录");		}		$user1 = db::table("user")->where(["id" => session("userid")])->find();		if (hashs($paypassword) != $user1["paypassword"]) {			ajax("交易密码错误");		}		$res = md('lend')->payback($this->userid, $id);		if (isset($res[1]) && $res[1]) {			ajax($res[0], 1);		} else {			ajax($res[0]);		}	}	public function danbaoup()	{		$this->check_up('借贷 申请成为担保人');		$paypassword = iv("post.paypassword", "dw", "参数错误");		if (empty(session("userid"))) {			ajax("请先登录");		}		$user1 = db::table("user")->where(["id" => session("userid")])->find();		if (hashs($paypassword) != $user1["paypassword"]) {			ajax("交易密码错误");		}		$lend_danbao = db::table("lend_danbao")->where(["userid" => session("userid")])->find();		if ($lend_danbao && $lend_danbao["status"] == 0) {			ajax("你已经是担保人,状态异常请联系客服");		}		if ($lend_danbao && $lend_danbao["status"] == 1) {			ajax("你已经是担保人");		}		if ($lend_danbao && $lend_danbao["status"] == 2) {			ajax("你已经提交申请,待系统审核");		}		$res = db::table("lend_danbao")->add(["userid" => session("userid"), "username" => $user1["username"], "addtime" => time(), "status" => 2]);		if ($res) {			ajax("操作成功", 1);		} else {			ajax("操作失败");		}	}	public function status()	{		$paypassword = iv("post.paypassword", "dw", "参数错误");		if (empty(session("userid"))) {			ajax("请先登录");		}		$user1 = db::table("user")->where(["id" => session("userid")])->find();		if (hashs($paypassword) != $user1["paypassword"]) {			ajax("交易密码错误");		}		$lend_danbao = db::table("lend_danbao")->where(["userid" => session("userid")])->find();		if (empty($lend_danbao)) {			ajax("你还不是担保人");		}		if ($lend_danbao["status"] > 1) {			ajax("当前状态不能操作");		}		if ($lend_danbao["status"] == 1) {			db::table("lend_danbao")->where(["userid" => session("userid")])->save(["status" => 0]);		} else {			if ($lend_danbao["status"] == 0) {				db::table("lend_danbao")->where(["userid" => session("userid")])->save(["status" => 1]);			}		}		ajax("操作成功", 1);	}}