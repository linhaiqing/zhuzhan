<?phpnamespace home;use move\db;use move\ext\page;class cen_hangq extends home{	public function __construct()	{		parent::__construct();	}	public function index()	{		$keywords = iv('get.content');		$where = [];		if (preg_match("/[\x7f-\xff]/", $keywords)) {			$where["title#like"] = "%" . $keywords . "%";		} else {			$where["name#like"] = "%" . $keywords . "%";		}		$where["status"] = 1;		$count = db::table("cen_hangq")->where($where)->count();		$PageObj = new page($count, 50);		$show = $PageObj->show();		$coin_hq = db::table("cen_hangq")->where($where)->limit($PageObj->firstRow, $PageObj->listRows)->select();		$pages = ['show' => $show, 'list' => $coin_hq];		$this->assign('pages', $pages);		$this->assign('keywords', $keywords);		$this->display();	}	public function all()	{		$coin_list = db::table('cen_hangq')->where(['status' => 1])->order("`sort` asc")->select();		$this->assign('coin_list', $coin_list);		$this->display();	}	public function detail()	{		$coin_hq_name = iv('get.name', 'w', '参数错误', 1);		if ($coin_hq_name) {			$where['name'] = $coin_hq_name;		}		$where['status'] = 1;		$coin_hq = db::table("cen_hangq")->where(["status" => 1])->order("sort asc")->limit(50)->select();		$coin_hq = $this->number($coin_hq);		foreach ($coin_hq as $k => $v) {			$coin_hq[$k]['price'] = rand(1, 1000);		}		$coin_hq_type = db::table("cen_hangq_type")->where(["status" => 1])->select();		if ($coin_hq_type) {			foreach ($coin_hq_type as $k => $v) {				$coin_hq_Value[$v['name']] = db::table("cen_hangq")->where(['name' => $coin_hq_name, "status" => 1])->find($v['name']);			}		} else {			$coin_hq_Value = [];		}		$coin_hq1 = db::table('cen_hangq')->where($where)->find();		$this->assign('coin_hq_Value', $coin_hq_Value);		$this->assign('coin_hq', $coin_hq);		$this->assign('coin_hq1', $coin_hq1);		$this->display();	}	public function number($num)	{		foreach ($num as $k => $v) {			if ($v['zl']) {				$lstr = strlen($v['zl']);				if (1 < $lstr && $lstr <= 4) {					$num[$k]['z'] = $v['zl'] . '元';				} elseif (5 <= $lstr && $lstr <= 8) {					$lstr = $lstr - 4;					$num[$k]['z'] = substr($v['zl'], 0, $lstr) . '.' . substr($v['zl'], -3, 1) . substr($v['zl'], -2, 1) . '万';				} elseif ($lstr <= 12 && $lstr >= 9) {					$lstr = $lstr - 8;					$num[$k]['z'] = substr($v['zl'], 0, $lstr) . '.' . substr($v['zl'], -8, 1) . substr($v['zl'], -7, 1) . '亿';				} elseif ($lstr >= 13) {					$lstr = $lstr - 12;					$num[$k]['z'] = substr($v['zl'], 0, $lstr) . '.' . substr($v['zl'], -12, 1) . substr($v['zl'], -11, 1) . '兆';				}			}		}		return $num;	}} 