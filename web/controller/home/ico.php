<?phpnamespace home;use Move\db;use Move\ext\page;class ico extends home{	public function __construct()	{		parent::__construct();		// $this->is_game('ico');	}	public function index()	{		$this->set_title('前台首页');		$new_ico = db::table("ico")->where(["status" => 1])->order("strtime  desc")->limit(6)->select();		foreach ($new_ico as $k => $v) {			$t = date('m-d', $new_ico[$k]['addtime']);			$t = str_replace('-', '月', $t);			$new_ico[$k]['addtime'] = $t . '日';		}		$this->assign('new_ico', $new_ico);		$now_ico = db::table("ico")->where(["status" => 1, "strtime#<" => time()])->order("endtime  desc")->limit(3)->select();		if (count($now_ico) < 3) {			$limit = 3 - count($now_ico);			$now_ico2 = db::table("ico")->where(["status" => 1, "strtime#>" => time()])->order("endtime  desc")->limit($limit)->select();			$now_ico = array_merge($now_ico, $now_ico2);		}		if ($now_ico) {			foreach ($now_ico as $k => $v) {				$now_ico[$k]["day"] = round(($v["endtime"] - time()) / 86400);				if ($now_ico[$k]["day"] < 0) {					$now_ico[$k]["day"] = 0;				}				if ($v["strtime"] > time()) {					$now_ico[$k]["kaishi"] = 1;				} else {					if ($v["strtime"] <= time() && $v["endtime"] < time()) {						$now_ico[$k]["kaishi"] = 2;					}				}				if ($v["mum"] > 0) {					$now_ico[$k]["bili"] = $v["gete"] / $v["mum"] * 100;				} else {					$now_ico[$k]["bili"] = '';				}				if (($v["gete"] / $v["mum"]) > 1) {					$now_ico[$k]["bili"] = 100;				}			}		}		$news_type_list = db::table('article_type')->where(['type' => 1, "status" => 1])->limit(3)->order("`sort` ASC ,`id` desc")->select();		if ($news_type_list) {			foreach ($news_type_list as $k => $v) {				$news_type_list[$k]['list'] = db::table('article')->where(['type_id' => $v['id'], "status" => 1])->limit(7)->order("`sort` ASC ,`id` desc")->select();			}		}		$this->assign('news_type_list', $news_type_list);		$this->assign('now_ico', $now_ico);		$this->display();	}	public function lists()	{		$this->set_title('项目列表');		$type = iv("type", "d", "条件错误", 1);		$where = [];		if ($type == 1) {			$where["status"] = 1;			$where["strtime#>"] = time();		} else {			if ($type == 2) {				$where["status"] = 1;				$where["strtime#<"] = time();			} else {				if ($type == 3) {					$where["status#in"] = [2, 3, 4];				} else {					$where["status#!="] = 0;				}			}		}		$this->assign("type", $type);		$count = db::table("ico")->where($where)->count();		$PageObj = new page($count, 12);		$show = $PageObj->show();		$list = db::table("ico")->where($where)->order("`id` desc")->limit($PageObj->firstRow, $PageObj->listRows)->select();		foreach ($list as $k => $v) {			$list[$k]["day"] = round(($v["endtime"] - time()) / 86400);			if ($list[$k]["day"] < 0) {				$list[$k]["day"] = 0;			}			if ($v["strtime"] > time()) {				$list[$k]["kaishi"] = 1;			} else {				if ($v["strtime"] <= time() && $v["endtime"] > time()) {					$list[$k]["kaishi"] = 2;				} else {					if ($v["endtime"] < time()) {						$list[$k]["kaishi"] = 3;					}				}			}			$list[$k]["bili"] = $v["gete"] / $v["mum"] * 100;			if (($v["gete"] / $v["mum"]) > 1) {				$list[$k]["bili"] = 100;			}		}		$pages = ['show' => $show, 'list' => $list];		$this->assign('pages', $pages);		$this->display();	}	public function details()	{		$this->set_title('项目介绍');		$id = iv("id", "d", "参数错误");		$ico = db::table("ico")->where(["id" => $id])->find();		if (!$ico) {			show_msg("该项目丢失了.......");		}		$ico["day"] = round(($ico["endtime"] - time()) / 86400);		if ($ico["day"] < 0) {			$ico["day"] = 0;		}		if ($ico["strtime"] > time()) {			$ico["kaishi"] = 1;		} else {			if ($ico["strtime"] <= time() && $ico["endtime"] > time()) {				$ico["kaishi"] = 2;			} else {				if ($ico["endtime"] < time()) {					$ico["kaishi"] = 3;				}			}		}		$ico["bili"] = $ico["gete"] / $ico["mum"] * 100;		if ($ico["mum"] > 0 && ($ico["gete"] / $ico["mum"]) > 1) {			$ico["bili"] = 100;		}		$this->assign("ico", $ico);		if (isset($ico["coin_data"])) {			$coin_data2 = explode(",", rtrim($ico["coin_data"], ","));			$mymc_coin = new \mymc\coin();			foreach ($coin_data2 as $k => $v) {				$coin = $mymc_coin->find(["id" => $v]);				$coin_data[$coin["name"]] = $coin["title"];			}		} else {			$coin_data = '';		}		$this->assign("coin_data", $coin_data);		$ico_bili = db::table("ico_bili")->where(["pid" => $id, "status" => 1])->order("strtime asc")->select();		$this->assign("ico_bili", $ico_bili);		$this->display();	}	public function up()	{		$this->check_up('ICO众筹立即认筹');		$id = iv("post.id", "d", "ID格式错误");		$num = iv("post.num", "xnb", "数量格式错误");		$coin = iv("post.coin", "w", "币种格式错误");		$paypassword = iv("post.paypassword", "password", "密码格式格式错误");		if (!$this->userid) {			ajax("请先登录");		}		$user1 = db::table("user")->where(["id" => $this->userid])->find();		if (empty($user1['paypassword'])) {			ajax('交易密码非法');		}		if (hashs($paypassword) != $user1['paypassword']) {			ajax('交易密码错误');		}		$res = md('ico')->up($this->userid, $id, $coin, $num);		if (isset($res[1]) && $res[1]) {			ajax($res[0], 1);		} else {			ajax($res[0]);		}	}	public function log()	{		$this->set_title('众筹记录');		if ($this->userid) {			$where = ['userid' => $this->userid];			$count = db::table("ico_log")->where($where)->count();			$PageObj = new page($count, 12);			$show = $PageObj->show();			$list = db::table("ico_log")->where($where)->order("`id` desc")->limit($PageObj->firstRow, $PageObj->listRows)->select();		} else {			$show = [];			$list = [];		}		$pages = ['show' => $show, 'list' => $list];		$this->assign('pages', $pages);		$this->display();	}	public function hangqin()	{		$coin = iv("post.coin", "w", "众筹币种币种错误");		$coinpay = iv("post.coinpay", "w", "支付币种错误");		$num = iv("post.num", "xnb", "数量错误");		if ($coin == $coinpay) {			$bili = 1;		} else {			if ($coin != "cny") {				$market = db::table("trade_market")->where(["name" => $coin . "_cny"])->find();			} else {				$market["new_price"] = 1;			}			if (empty($market) || !$market["new_price"]) {				$market["new_price"] = 1;			}			if ($coinpay != "cny") {				$market_pay = db::table("trade_market")->where(["name" => $coinpay . "_cny"])->find();			} else {				$market_pay["new_price"] = 1;			}			if (empty($market_pay) || !$market_pay["new_price"]) {				$market_pay["new_price"] = 1;			}			$bili = $market["new_price"] / $market_pay["new_price"];		}		if ($this->userid) {			$my_coin = db::table("user_coin")->where(['userid' => $this->userid])->find($coinpay);		} else {			$my_coin = 0;		}		$mum = $num * $bili;		if ($mum) {			ajax($mum, 1, $my_coin);		} else {			ajax("err", 0, $my_coin);		}	}} 