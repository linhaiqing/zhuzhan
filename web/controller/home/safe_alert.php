<?phpnamespace home;use Move\db;class safe_alert{	public function __construct()	{		import("jpush");	}	public function push_err($option)	{		$function = '异常推送:';		if (!$option) {			return [$function . '参数错误'];		}		$title = @$option['title'];		$info = @$option['info'];		$content = @$option['content'];		$tags = @$option['tags'];		$alias = @$option['alias'];		$addtime = @$option['addtime'];		if (!$addtime) {			$addtime = 'null';		}		$source = @$option['source'];		if (!$source) $source = '系统';		if (!$title) {			return [$function . '标题不可为空'];		}		if (!$info) {			return [$function . '简介不可为空'];		}		if (!$content) {			return [$function . '内容不可以为空'];		}		$appKey = 'bf78cd2068f56352cfd252dc';		$masterSecret = 'b79e0102a479f6406eea15c9';		$client = new \JPush\Client($appKey, $masterSecret);		$response = $client->push()->setPlatform('all');		if ($alias) {			$res = $response->addAlias($alias);		} else if ($tags) {			$res = $response->addTagAnd($tags);		} else {			$res = $response->addAllAudience();		}		$result = $res->setNotificationAlert('系统异常推送11')->androidNotification($info, ['title' => $title, 'extras' => ['title' => $title, 'addtime' => $addtime, 'content' => $content, 'source' => $source],])->message($info, ['title' => $title, 'extras' => ['title' => $title, 'content' => $content, 'addtime' => $addtime, 'source' => $source],])->options(array('apns_production' => false, 'time_to_live' => 86400,))->send();		if ($result) {			return ['异常推送成功', 1];		} else {			return ['异常推送失败'];		}	}	public function bind()	{		$device = iv('post.device');		$username = iv('post.username', 'username', '用户名格式错误');		$password = iv('post.password', 'password', '密码格式错误');		$tag = defined('YC_TAG') ? YC_TAG : 'movesay_none';		if (!$username || !$password) {			ajax('用户名和密码不能为空');		}		$user = db::table("admin")->where(["username" => $username])->find();		if (!$user) {			$user = db::table("admin")->where(["moble" => $username])->find();		}		if (!$user) {			ajax('用户名不存在');		}		if ($user["password"] != hashs($password)) {			ajax("登录账户或密码错误");		}		if ($user['tag']) {			ajax(['此用户已绑定,请先解绑']);		}		$res = db::table('admin')->where(['id' => $user['id']])->set(['device' => $device, 'tag' => $tag]);		if ($res) {			ajax(['msg' => '绑定成功', 'data' => $tag], 1);		} else {			ajax('绑定失败');		}	}	public function out()	{		$arry = mc('push_bind');		$RegistrationId = iv('post.RegistrationId');		$alisa = iv('post.alisa', 'username', '用户名格式错误');		$tags = iv('post.tags');		$data['RegistrationId'] = $RegistrationId;		$data['alisa'] = $alisa;		$data['tags'] = $tags;		$data['status'] = 1;		foreach ($arry as $key => $value) {			if ($value == $data) {				unset($arry[$key]);				mc('push_bind', null);				mc('push_bind', $arry);				ajax('解绑成功', 1);			}		}	}}