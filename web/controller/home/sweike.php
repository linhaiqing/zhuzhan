<?phpnamespace home;use Move\db;use Move\ext\page;class sweike extends home{	public function __construct()	{		parent::__construct();		$this->is_game('sweike');	}	protected function header()	{		$typelist1 = db::table("sweike_type")->where(["status#!=" => 0, "pid" => 0])->order("sort asc ,id asc")->select();		if ($typelist1) {			foreach ($typelist1 as $k => $v) {				$type = db::table("sweike_type")->where(["status" => 1, "pid" => $v['id'], "hot#!=" => 0])->order("hot  desc")->field("type,id")->limit(4)->select();				if ($type) {					foreach ($type as $kk => $vv) {						$tjtype[] = $vv;					}				}				$typelist1[$k]['pid_list'] = db::table("sweike_type")->where(["status" => 1, "pid" => $v['id']])->order("sort asc , id asc")->field("type,id")->limit(3)->select();				if ($typelist1[$k]['pid_list']) {					$i = 0;					$m = 0;					foreach ($typelist1[$k]['pid_list'] as $kk => $vv) {						$typelist1[$k]['title'][$i++]["title"] = $typelist1[$k]['pid_list'][$kk]['type'];						$typelist1[$k]['title'][$m++]["id"] = $typelist1[$k]['pid_list'][$kk]['id'];						$typelist1[$k]['pid_list'][$kk]['pid_list'] = db::table("sweike_type")->where(["status" => 1, "pid" => $vv['id']])->order("sort asc , id asc")->field("type,id")->select();					}				}			}		}		$this->assign("list2", $tjtype);		array_splice($tjtype, 4);		$this->assign('tjtype', $tjtype);		array_splice($typelist1, 13);		$this->assign('typelist1', $typelist1);	}	public function index()	{		$this->set_title('高级威客');		$banner = db::table("sys_ad")->where(["type" => "sweike"])->order("sort asc ,id desc")->select();		$this->assign('banner', $banner);		$article = db::table("article")->where(["status" => 1, "type_id" => 2])->order("id  desc")->limit(5)->select();		$this->assign('article', $article);		$sweike1 = db::table("sweike")->where(["status" => 1, "tj" => 1, "step#<=" => 2])->order("endtime  asc")->limit(8)->select();		$this->assign('sweike1', $sweike1);		$sweike2 = db::table("sweike")->where(["status" => 1, "tj" => 1, "step#<=" => 3])->order("price  desc")->limit(8)->select();		$this->assign('sweike2', $sweike2);		$weike_tender = db::table("sweike_tender")->where(["status" => 1])->order("endtime desc")->select();		if ($weike_tender) {			foreach ($weike_tender as $k => $v) {				$data = db::table("sweike")->where(["id" => $v["weikeid"]])->find();				$weike_tender[$k]["price"] = $data["price"];				$weike_tender[$k]["price_type"] = $data["price_type"];				$weike_tender[$k]["weike_title"] = $data["title"];				$username = db::table("user")->where(["id" => $v["userid"]])->find();				$weike_tender[$k]["username"] = $username["username"];				$weike_tender[$k]["img"] = "";			}		}		$first = db::table("sweike_type")->where(["status" => 1, "pid" => 0])->select();		$dataa = [];		$list3 = [];		if ($first) {			foreach ($first as $k => $v) {				$list = db::table("sweike_type")->where(["status" => 1, "pid" => $v["id"]])->order("hot  desc")->limit(6)->field("id,type")->select();				foreach ($list as $key => $value) {					$list3[] = $value;					$dataa[] = $value;				}			}		}		array_splice($dataa, 6);		foreach ($dataa as $k => $v) {			$list1 = db::table("sweike_type")->where(["status" => 1, "pid" => $v["id"]])->order("`sort` desc")->select();			if ($list1) {				foreach ($list1 as $kk => $vv) {					$weike = db::table("sweike")->where(["status" => 1, "type" => $vv["id"]])->order("id desc")->field("id,userid,title,price,price_type,num")->select();					foreach ($weike as $kkk => $vvv) {						$username = db::table("user")->where(["id" => $vvv["userid"]])->find();						if ($username) {							$weike[$kkk]["username"] = $username["username"];						} else {							$weike[$kkk]["username"] = "系统管理员";						}						$dataa[$k]["weikelist"][] = $weike[$kkk];					}				}			}		}		$this->assign("list3", $list3);		$this->assign("dataa", $dataa);		$this->header();		$this->display();	}	public function info()	{		$first = db::table("sweike_type")->where(["status" => 1, "pid" => 0])->select();		foreach ($first as $k => $v) {			$list = db::table("sweike_type")->where(["status" => 1, "pid" => $v["id"]])->order("hot  desc")->limit(6)->field("id,type")->select();			foreach ($list as $key => $value) {				$res[] = $value;			}		}		ajax("数据正常", 1, $res);	}	public function lists()	{		$this->set_title('任务列表');		$weike = db::table("sweike")->select();		if ($weike) {			foreach ($weike as $k => $v) {				if (time() - $v["addtime"] <= 86400 & $v["status"] == 1 & time() < $v["endtime"]) {					$v["step"] = 1;				} else {					if (time() - $v["addtime"] > 86400 & time() <= $v["endtime"] & $v["status"] == 1) {						$v["step"] = 2;					} else {						if (time() > $v["endtime"] & $v["status"] == 1) {							$v["step"] = 3;						} else {							if ($v["status"] == 0) {								$v["step"] = 4;							}						}					}				}				$count = db::table("sweike_tender")->where(["weikeid" => $v["id"]])->count();				db::table("sweike")->where(["id" => $v["id"]])->save(["step" => $v["step"], "num" => $count]);			}		}		$type = iv('get.type');		$type1 = iv('get.type1');		$type2 = iv('get.type2');		$keyword = iv('get.keyword');		$step = iv('get.step', "d", "状态参数错误", 1);		$sort = iv('get.sort');		$where = [];		if ($keyword) {			if (!check($keyword, 'a')) {				ajax('关键字格式错误');			}			$where["title#like"] = "%" . $keyword . "%";		} else {			$keyword = "";		}		if ($step) {			if (!check($step, 'd')) {				ajax('参数错误1');			}			if ($step == 1) {				$where["step"] = 1;			}			if ($step == 2) {				$where["step"] = 2;			}			if ($step == 3) {				$where["step"] = 3;			}			if ($step == 4) {				$where["step"] = 4;			} else {				$where["status#!="] = 0;			}		} else {			$step = 0;			$where["status#!="] = 0;		}		if ($type && !$type1 && !$type2) {			if (!check($type, 'd')) {				ajax('参数错误2');			}			$data2 = db::table("sweike_type")->where(["status" => 1, "pid" => $type])->select();			$id_arr = [];			if ($data2) {				foreach ($data2 as $v) {					$id_arr[] = $v["id"];				}			}			if (!$id_arr) {				$id_arr[] = 'move';			}			$data3 = db::table("sweike_type")->where(["status" => 1, "pid#in" => $id_arr])->select();			$id_arr2 = [];			if ($data3) {				foreach ($data3 as $v) {					$id_arr2[] = $v["id"];				}			}			if (!$id_arr2) {				$id_arr2[] = 'move';			}			$type1 = 0;			$type2 = 0;			$where["type#in"] = $id_arr2;		} else {			if ($type1 && !$type2) {				if (!check($type1, 'd')) {					ajax('参数错误3');				}				$data2 = db::table("sweike_type")->where(["status" => 1, "pid" => $type1])->select();				$id_arr = [];				if ($data2) {					foreach ($data2 as $v) {						$id_arr[] = $v["id"];					}				}				if (!$id_arr) {					$id_arr[] = 'move';				}				$where["type#in"] = $id_arr;				if (!$type) {					$data5 = db::table("sweike_type")->where(["id" => $type1])->find();					$type = $data5["pid"];				}				$type2 = 0;			} else {				if ($type1 && $type2) {					if (!check($type1, 'd')) {						ajax('参数错误4');					}					if (!$type) {						$data6 = db::table("sweike_type")->where(["id" => $type1])->find();						$type = $data6["pid"];					}					$where["type"] = $type2;				} else {					$type = 0;					$type1 = 0;					$type2 = 0;				}			}		}		if ($type1) {			db::table("sweike_type")->where(["id" => $type1])->set(["hot" . "#+" => 1]);		}		if ($sort) {			if (!check($sort, 'd')) {				ajax('参数错误5');			}			if ($sort == 1) {				$order = "addtime";			}			if ($sort == 2) {				$order = "num";			}			if ($sort == 3) {				$order = "price";			}		} else {			$sort = 0;			$order = "id";		}		$this->assign('type', $type);		$this->assign('type1', $type1);		$this->assign('type2', $type2);		$this->assign('keyword', $keyword);		$this->assign('step', $step);		$this->assign('sort', $sort);		$typelist1 = db::table("sweike_type")->where(["status" => 1, "pid" => 0])->order("sort asc , id asc")->field("type,id")->select();		$this->assign('typelist1', $typelist1);		if ($type) {			$typelist2 = db::table("sweike_type")->where(["status" => 1, "pid" => $type])->field("type,id")->select();			$i = 0;			$m = 0;			foreach ($typelist2 as $k => $v) {				$typelist3[$i++]["b"] = $v;				$typelist3[$m++]["c"] = db::table("sweike_type")->where(["status" => 1, "pid" => $v["id"]])->order("sort asc , id asc")->field("type,id")->select();			}		} else {			$typelist2 = [];			$typelist3 = [];		}		$this->assign('typelist2', $typelist2);		$this->assign('typelist3', $typelist3);		$data = db::table("sweike")->where(["status" => 1, "step#<" => 3, "tj" => 1])->field("id,title")->order("view desc")->limit(10)->select();		$this->assign('data', $data);		$arr = db::table("sweike")->where($where)->count();		$this->assign('countnum', $arr);		$PageObj = new page($arr, 12);		$show = $PageObj->show();		$list = db::table("sweike")->where($where)->order("$order desc")->limit($PageObj->firstRow, $PageObj->listRows)->select();		foreach ($list as $k => $v) {			$username = db::table("user")->where(["id" => $v["userid"]])->find();			if ($list[$k]["userid"]) {				$list[$k]["username"] = $username["username"];			} else {				$list[$k]["username"] = "系统管理员";			}			$type = db::table("sweike_type")->where(["status" => 1, "id" => $v["type"]])->order("sort asc , id asc")->field("type,id")->find();			$list[$k]["type"] = $type["type"];			$time = $v["endtime"] - time();			$list[$k]["lasttime"] = ["days" => 0, "hours" => 0, "minutes" => 0, "seconds" => 0];			if ($time >= 86400) {				$list[$k]["lasttime"]["days"] = floor($time / 86400);				$time = ($time % 86400);			}			if ($time >= 3600) {				$list[$k]["lasttime"]["hours"] = floor($time / 3600);				$time = ($time % 3600);			}			if ($time >= 60) {				$list[$k]["lasttime"]["minutes"] = floor($time / 60);				$time = ($time % 60);			}			if (0 < $time && $time < 60) {				$list[$k]["lasttime"]["seconds"] = floor($time);			}		}		$pages = ['show' => $show, 'list' => $list];		$this->assign('pages', $pages);		$this->assign("current_type", $type);		$this->header();		$this->display();	}	public function json()	{		$typelist1 = db::table("sweike_type")->where(["status#!=" => 0, "pid" => 0])->order("sort asc ,id asc")->field("type,id")->select();		if ($typelist1) {			foreach ($typelist1 as $k => $v) {				$typelist1[$k]['pid_list'] = db::table("sweike_type")->where(["status" => 1, "pid" => $v['id']])->order("sort asc , id asc")->field("type,id")->limit(3)->select();				if ($typelist1[$k]['pid_list']) {					foreach ($typelist1[$k]['pid_list'] as $kk => $vv) {						$typelist1[$k]['pid_list'][$kk]['pid_list'] = db::table("sweike_type")->where(["status" => 1, "pid" => $vv['id']])->order("sort asc , id asc")->field("type,id")->select();					}				}			}		}		$mymc_coin = new \mymc\coin();		$coin_list = $mymc_coin->select(1);		$res["coinlist"] = $coin_list;		$res["type"] = $typelist1;		ajax("数据正常", 1, $res);	}	public function up()	{		$type = iv("post.type", "d", "请选择正确的任务类型");		$price = iv("post.price", "double", "请输入正确的任务酬劳");		$price_type = iv("post.price_type", "d", "请选择正确的币种");		$title = iv("post.title", "a", "请输入任务标题");		$content = iv("post.content", "a", "请输入任务描述");		$endtime = iv("post.endtime", "time", "请输入正确的投稿截止时间");		$adress = iv("post.adress", "a", "请输入投稿地址");		$paypassword = iv("post.paypassword", "password", "交易密码格式错误");		if (!$this->userid) {			ajax("请先登录");		}		$user = db::table("user")->where(["id" => session("userid")])->find();		if (hashs($paypassword) != $user["paypassword"]) {			ajax("交易密码错误");		}		if (mb_strlen($title) > 20) {			ajax("标题过长");		}		if (mb_strlen($content) > 200) {			ajax("问题过长");		}		if (!session("userid")) {			ajax("请先登录");		}		if ($price <= 0) {			ajax("酬劳错误");		}		$res = md('sweike')->up($this->userid, $type, $price, $price_type, $title, $content, $endtime, $adress);		if (isset($res[1]) && $res[1]) {			ajax($res[0], 1);		} else {			ajax($res[0]);		}	}	public function log()	{		$this->set_title('投标记录');		if ($this->userid) {			$where = ["userid" => $this->userid];			$count = db::table("sweike_tender")->where($where)->count();			$PageObj = new page($count, 15);			$show = $PageObj->show();			$list = db::table("sweike_tender")->where($where)->order("`id` desc")->limit($PageObj->firstRow, $PageObj->listRows)->select();			if ($list) {				foreach ($list as $k => $v) {					$username = db::table("user")->where(["id" => $v["userid"]])->find();					$list[$k]["userid"] = $username["username"];				}			}		} else {			$show = [];			$list = [];		}		$pages = ['show' => $show, 'list' => $list];		$this->assign('pages', $pages);		$this->header();		$this->display();	}	public function weikelog()	{		$this->set_title('威客记录');		if ($this->userid) {			$where = ["status" => 1, "userid" => session("userid")];			$vcount = db::table("sweike")->where($where)->count();			$vPageObj = new page($vcount, 15);			$vshow = $vPageObj->show();			$vlist = db::table("sweike")->where($where)->order("`id` desc")->limit($vPageObj->firstRow, $vPageObj->listRows)->select();			foreach ($vlist as $kk => $vv) {				$username = db::table("user")->where(["id" => $vv["userid"]])->find();				$vlist[$kk]["userid"] = $username["username"];			}		} else {			$vshow = [];			$vlist = [];		}		$vpages = ['show' => $vshow, 'list' => $vlist];		$this->assign('vpages', $vpages);		$this->header();		$this->display();	}	public function details()	{		$id = iv("id", "d", "参数错误");		db::table("sweike")->where(["id" => $id])->set(["view" . "#+" => 1]);		$sweike = db::table("sweike")->where(["id" => $id, "status" => 1])->find();		if (time() - $sweike["addtime"] <= 86400 & $sweike["status"] == 1 & time() < $sweike["endtime"]) {			$v["step"] = 1;		} else {			if (time() - $sweike["addtime"] > 86400 & time() <= $sweike["endtime"] & $sweike["status"] == 1) {				$v["step"] = 2;			} else {				if (time() > $sweike["endtime"] & $sweike["status"] == 1) {					$v["step"] = 3;				} else {					if ($sweike["status"] == 0) {						$v["step"] = 4;					}				}			}		}		if (empty($sweike)) {			ajax("当前任务不存在或不可用");		}		$username = db::table("user")->where(["id" => $sweike["userid"]])->find();		if (empty($username)) {			$sweike["username"] = ["username" => "系统管理员"];		} else {			$sweike["username"] = ["username" => $username["username"], "email" => $username["email"]];		}		$this->assign('sweike', $sweike);		$type = db::table("sweike_type")->where(["status" => 1, "id" => $sweike["type"]])->find();		if ($type) {			$data = db::table("sweike")->where(["status" => 1, "type" => $sweike["type"], "step#<=" => 3])->field("id,price,price_type,title,num")->limit(18)->select();			$this->assign('date', $data);		}		$count = db::table("sweike_tender")->where(["weikeid" => $id])->count();		$PageObj = new page($count, 5);		$show = $PageObj->show();		$list = db::table("sweike_tender")->where(["weikeid" => $id])->order("`id` desc")->limit($PageObj->firstRow, $PageObj->listRows)->select();		foreach ($list as $k => $v) {			$username = db::table("user")->where(["id" => $v["userid"]])->find();			$list[$k]["userid"] = substr_replace(str_replace("|", " ", $username['username']), '**', 3, 2);		}		$pages = ['show' => $show, 'list' => $list];		$this->assign('pages', $pages);		$this->header();		$this->display();	}	public function tender_add()	{		$weikeid = iv("post.weikeid", "d", "参数错误1");		$content = iv("post.content", "a", "参数错误2");		$paypassword = iv("post.paypassword", "password", "交易密码格式错误3");		if (!$this->userid) {			ajax("请先登录");		}		$user = db::table("user")->where(["id" => session("userid")])->find();		if (hashs($paypassword) != $user["paypassword"]) {			ajax("交易密码错误");		}		$weike = db::table("sweike")->where(["id" => $weikeid])->find();		if (!$weike) {			ajax("威客不存在");		}		if ($weike["step"] >= 3 || $weike["status"] == 0) {			ajax("该威客已不接受投标");		}		if (mb_strlen($content) > 200) {			ajax("问题过长");		}		$rs = db::table("sweike_tender")->add(["weikeid" => $weikeid, "userid" => session("userid"), "content" => $content, "status" => 2, "addtime" => time()]);		if ($rs) {			ajax("投标成功", 1);		} else {			ajax("投标失败");		}	}	public function check()	{		$id = iv("post.id", "d", "参数错误");		$paypassword = iv("post.paypassword", "dw", "参数错误");		$arr = db::table("sweike_tender")->where(["id" => $id])->find();		if (!$this->userid) {			ajax("请先登录");		}		$user = db::table("user")->where(["id" => session("userid")])->find();		if (hashs($paypassword) != $user["paypassword"]) {			ajax("交易密码错误");		}		if (!$arr["weikeid"]) {			ajax("威客信息错误");		}		$sweike = db::table("sweike")->where(["id" => $arr["weikeid"]])->find();		if (!$sweike) {			ajax("威客不存在");		}		$sweike_tender = db::table("sweike_tender")->where(["weikeid" => $sweike["id"], "status" => 1])->find();		if ($sweike_tender) {			ajax("该任务已确定服务商");		}		$rs = db::table("sweike_tender")->where(["id" => $id])->save(["status" => 1]);		if ($rs) {			ajax("操作成功", 1);		} else {			ajax("操作失败");		}	}	public function pay()	{		$id = iv("post.id", "d", "参数错误");		$paypassword = iv("post.paypassword", "dw", "参数错误");		if (!$this->userid) {			ajax("请先登录");		}		$user = db::table("user")->where(["id" => session("userid")])->find();		if (hashs($paypassword) != $user["paypassword"]) {			ajax("交易密码错误");		}		$res = md('sweike')->pay($this->userid, $id);		if (isset($res[1]) && $res[1]) {			ajax($res[0], 1);		} else {			ajax($res[0]);		}	}}