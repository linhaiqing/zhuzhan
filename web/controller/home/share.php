<?phpnamespace home;use admin\dingcan;use Move\db;use Move\ext\page;class share extends home{	public function __construct()	{		parent::__construct();	}	public function index()	{		$this->set_title('分享得币');		$id = iv("get.id");		$this->assign('id', $id);		$shareitem = db::table("share")->where(["status#!=" => 0])->select();		$mymc_coin = new \mymc\coin();		if ($this->userid) {			$shareuser = db::table("share_user")->where(['userid' => $this->userid])->select();			foreach ($shareitem as $k => $v) {				$coin = $mymc_coin->find(["name" => $v['coin']]);				$shareitem[$k]["coinTitle"] = $coin["title"];				if ($v["status"] == 1) {					if (!$shareuser) {						$round = $this->getrandom();						$res = md("share")->adduser_share($this->userid, $round, $v["id"]);						$shareitem[$k]["shareAdd"] = $round;					}					foreach ($shareuser as $k2 => $v2) {						if ($v["id"] == $v2["itemid"]) {							$shareAdd = $v2["share"];							$shareitem[$k]["shareAdd"] = $shareAdd;						}					}				}			}		}		$this->assign('shareitem', $shareitem);		$paiming = db::table("share_user")->where(["itemid" => $id])->order("num desc")->limit(10)->select();		$user = db::table("user")->where(["status" => 1])->select();		foreach ($paiming as $k => $v) {			foreach ($user as $k2 => $v2) {				if ($v["userid"] == $v2["id"]) {					$paiming[$k]["username"] = substr_replace(str_replace("|", " ", $v2["username"]), '**', 3, 2);				}			}		}		$this->assign('paiming', $paiming);		$item = db::table("share")->where(["id" => $id])->find();		$coin1 = $mymc_coin->find(["name" => $item['coin']]);		if ($this->userid) {			$itemuser = db::table("share_user")->where(["itemid" => $id, "userid" => $this->userid])->find();			if ($itemuser["num"]) {				$otheruser = db::table("share_user")->where(["itemid" => $id, "num#>" => $itemuser["num"]])->select();				$item["paiming"] = count($otheruser) + 1;			}			$item["dianji"] = $itemuser["num"];		}		$item["reward"] = @ $itemuser["reward"];		$item["coinTitle"] = @$coin1["title"];		$this->assign('item', $item);		$share = iv("get.share");		if ($share && $id) {			$ip = getenv("HTTP_X_FORWARDED_FOR");			if (!$ip) {				$ip = $_SERVER["REMOTE_ADDR"];			}			$alert = '';			if ($item['status'] == 2) {				$alert = "项目已结束";			}			if ($item['status'] == 3) {				$alert = "项目未开始";			}			$this->assign('alert', $alert);			$where = ["ip" => $ip, "itemid" => $id];			$log = db::table("share_log")->where($where)->select();			if (!$log) {				$user_id = db::table("share_user")->where(["share" => $share])->find("userid");				$res = md("share")->addlog($user_id, $ip, $id);			}		}		$this->display();	}	public function getrandom()	{		$chars = "abcdefghijklmnopqrstuvwxyzABCDEFGHIJKLMNOPQRSTUVWXYZ0123456789!@$%^*|";		$password = "";		for ($i = 0; $i < 32; $i++) {			$password .= $chars[mt_rand(0, strlen($chars) - 1)];		}		$log = db::table("share_user")->where(["share" => $password])->find();		if ($log) {			$this->getrandom();		} else {			return $password;		}	}}