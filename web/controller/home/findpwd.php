<?phpnamespace home;use Move\db;class findpwd extends home{	public function __construct()	{		parent::__construct();	}	public function index()	{		$sys_sms = db::table('sys_sms')->where(['status' => 1])->find();		if (!$sys_sms) {			$sys_sms['sms'] = 0;			$sys_sms['tel'] = 0;		}		$this->assign('sys_sms', $sys_sms);		$this->display();	}	public function check_moble()	{		$moble = iv('post.moble', 'd', $this->ajax_lang('手机号码格式错误'));		$mobles = iv("post.mobles");		if (!check($mobles, 'd', '+')) {			ajax($this->ajax_lang('国家编号错误'));		}		$moble = $mobles . '|' . $moble;		$res = md('user')->cha_moble($moble);		if (isset($res[1])) {			session('jl_findpwd_password', $moble);			ajax($this->ajax_lang("账户存在"), 1);		} else {			ajax($this->ajax_lang("手机号不存在"));		}	}	public function check_email()	{		$email = iv('post.email', 'email', $this->ajax_lang('邮箱格式错误'));		$res = db::table('user')->where(['email' => $email])->find();		if ($res) {			ajax($this->ajax_lang("邮箱存在"), 1);		} else {			ajax($this->ajax_lang("邮箱不存在"));		}	}	public function up()	{		$this->check_up('更换手机号码');		$moble = iv("post.moble", 'd', $this->ajax_lang('手机号码格式错误'));		$mobles = iv("post.mobles");		if (!check($mobles, 'd', '+')) {			ajax($this->ajax_lang('国家编号错误'));		}		$moble_verify = iv("post.moble_verify", 'dw', $this->ajax_lang('验证码格式错误'));		$moble = $mobles . '|' . $moble;		if (!$moble_verify || $moble_verify != session('verify_moble_findpwd')) {			ajax($this->ajax_lang('短信验证码错误'));		}		if ($moble != session('jl_findpwd_password')) {			ajax($this->ajax_lang('非法请求'));		}		if ($moble != session('verify_moble_findpwd_moble')) {			ajax($this->ajax_lang('非法请求'));		}		$res = md('user')->cha_moble($moble);		if (isset($res[1])) {			session('zh_findpwd_password', $moble);			ajax($this->ajax_lang('验证成功'), 1, '/findpwd/password');		} else {			ajax($this->ajax_lang("手机号不存在"));		}	}	public function checkEmailVerify()	{		$getCode = iv('post.code', 'd', '接受参数出错');		$email = iv('post.email', 'email', '邮箱格式错误');		$mcCode = session('verify_moble_findpwd');		if ($getCode == $mcCode) {			session('zh_findpwd_password', $email);			ajax($this->ajax_lang('验证成功'), 1, '/findpwd/password');		} else {			ajax($this->ajax_lang('验证码错误'));		}	}	public function payup_email()	{		$getCode = iv('post.code', 'd', '接受参数出错');		$email = iv('post.email', 'email', '邮箱格式错误');		$userEmail = db::table('user')->where(['id' => $this->userid])->find('email');		if ($email != $userEmail) {			ajax($this->ajax_lang('邮箱不正确'));		}		$mcCode = session('verify_moble_findpwd_pay');		if ($getCode == $mcCode) {			session('zh_findpwd_paypassword', $email);			ajax($this->ajax_lang('验证成功'), 1, '/findpwd/setpaypassword');		} else {			ajax($this->ajax_lang('验证码错误'));		}	}	public function password()	{		if (!session('zh_findpwd_password')) {			redirect('/findpwd');		}		$this->display();	}	public function password_up()	{		$this->check_up('找回登录密码');		$password = iv("post.password", 'password', $this->ajax_lang('新密码格式错误'));		$moble = session('zh_findpwd_password');		if (!session('zh_findpwd_password')) {			ajax($this->ajax_lang('非法访问'));		}		$res = md('user')->fd_password($moble, $password);		if (isset($res[1])) {			session('zh_findpwd_password', null);			session('zh_findpwd_info', 1);			session('userid', null);			ajax($this->ajax_lang('操作成功'), 1, '/findpwd/info');		} else {			ajax($this->ajax_lang('操作失败'));		}	}	public function paypassword()	{		$sys_sms = db::table('sys_sms')->where(['status' => 1])->find();		if (!$sys_sms) {			$sys_sms['sms'] = 0;			$sys_sms['tel'] = 0;		}		$this->assign('sys_sms', $sys_sms);		$this->display();	}	public function check_moble_paypassword()	{		$moble = iv('post.moble', 'd', $this->ajax_lang('手机号码格式错误'));		$mobles = iv("post.mobles");		if (!check($mobles, 'd', '+')) {			ajax('国家编号错误');		}		$moble = $mobles . '|' . $moble;		$res = md('user')->cha_moble($moble);		if (isset($res[1])) {			session('jl_findpwd_paypassword', $moble);			ajax($this->ajax_lang("账户存在"), 1);		} else {			ajax($this->ajax_lang("手机号不存在"));		}	}	public function paypassword_up()	{		$moble = iv("post.moble", 'd', $this->ajax_lang('手机号码格式错误'));		$mobles = iv("post.mobles");		if (!check($mobles, 'd', '+')) {			ajax($this->ajax_lang('国家编号错误'));		}		$moble_verify = iv("post.moble_verify", 'dw', $this->ajax_lang('验证码格式错误'));		$moble = $mobles . '|' . $moble;		if (!$moble_verify || $moble_verify != session('verify_moble_findpwd_pay')) {			ajax($this->ajax_lang('短信验证码错误'));		}		if ($moble != session('jl_findpwd_paypassword')) {			ajax($this->ajax_lang('非法请求'));		}		if ($moble != session('verify_moble_findpwd_pay_moble')) {			ajax($this->ajax_lang('非法请求'));		}		$res = md('user')->cha_moble($moble);		if (!isset($res[1])) {			ajax($this->ajax_lang('手机号码不存在'));		} else {			session('zh_findpwd_paypassword', $moble);			ajax($this->ajax_lang('验证成功'), 1, '/findpwd/setpaypassword');		}	}	public function setpaypassword()	{		if (!session('zh_findpwd_paypassword')) {			redirect('/findpwd/paypassword');		}		$this->display();	}	public function setpaypassword_up()	{		$this->check_up('找回交易密码');		$paypassword = iv("post.password", 'password', $this->ajax_lang('密码格式错误'));		$moble = session('zh_findpwd_paypassword');		if (!session('zh_findpwd_paypassword')) {			ajax($this->ajax_lang('非法访问'));		}		$res = md('user')->fd_paypassword($moble, $paypassword);		if (isset($res[1])) {			session('zh_findpwd_paypassword', null);			session('zh_findpwd_payinfo', 1);			ajax($this->ajax_lang('操作成功'), 1, '/findpwd/payinfo');		} else {			ajax($this->ajax_lang('操作失败'));		}		if (md('user')->save(['moble' => $moble], ['paypassword' => hashs($paypassword)])) {			session('zh_findpwd_paypassword', null);			session('zh_findpwd_payinfo', 1);			ajax($this->ajax_lang('操作成功'), 1, '/findpwd/payinfo');		} else {			ajax($this->ajax_lang('操作失败'));		}	}	public function info()	{		if (!session('zh_findpwd_info')) {			redirect('/findpwd');		}		session('zh_findpwd_info', null);		$this->display();	}	public function payinfo()	{		if (!session('zh_findpwd_payinfo')) {			redirect('/findpwd/paypassword');		}		session('zh_findpwd_payinfo', null);		$this->display();	}} 