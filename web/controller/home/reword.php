<?phpnamespace home;use Move\db;use Move\ext\speal;use Move\ext\page;class reword extends home{	public function __construct()	{		parent::__construct();		$this->is_game('reword');		$this->is_login();		$this->is_goole();	}	public function index()	{		$this->set_title('悬赏任务');		$count = db::table("reword")->where(["status" => 1, "step#>=" => 1])->count();		$PageObj = new page($count, 4);		$show = $PageObj->show();		$list = db::table("reword")->where(["status" => 1, "step#>=" => 1])->order("addtime desc,sort desc")->limit($PageObj->firstRow, $PageObj->listRows)->select();		foreach ($list as $k => $v) {			$list[$k]['username'] = db::table('user')->where(['id' => $v['userid']])->find('username');			$list[$k]['coinname'] = db::table('coin')->where(['id' => $v['coin'], 'status' => 1])->find('name');			if (time() - $v['addtime'] > 86400 && $v['step'] == 1) {				db::table("reword")->where(['id' => $v['id']])->save(['step' => 2]);			} elseif (time() >= $v['endtime']) {				db::table("reword")->where(['id' => $v['id']])->save(['step' => 4]);			}		}		$pages = ['show' => $show, 'list' => $list];		$this->assign('page', $pages);		$this->coin = db::table('coin')->where(['status' => 1])->select();		$this->type = db::table('reword_type')->where(['status' => 1])->select();		$this->display();	}	public function details()	{		$this->set_title('悬赏任务');		$id = iv("get.id", "d", "参数错误");		$arr = db::table('reword')->where(['id' => $id])->find();		$this->type = db::table("reword_type")->where(['id' => $arr['type']])->find('title');		$arr['username'] = db::table('user')->where(['id' => $arr['userid']])->find('username');		$arr['coin'] = db::table('coin')->where(['id' => $arr['coin']])->find('name');		$arr['vusername'] = db::table('user')->where(['id' => $arr['vuserid']])->find('username');		$this->arr = $arr;		$this->preson = db::table('reword')->where(['userid' => $arr['userid']])->select();		$count = db::table("reword_log")->where(["status#>=" => 1, "pid" => $id])->count();		$PageObj = new page($count, 4);		$show = $PageObj->show();		$list = db::table("reword_log")->where(["status#>=" => 1, "pid" => $id])->order("addtime desc,sort desc")->limit($PageObj->firstRow, $PageObj->listRows)->select();		foreach ($list as $k => $v) {			$list[$k]['username'] = db::table('user')->where(['id' => $v['userid']])->find('username');		}		$pages = ['show' => $show, 'list' => $list];		$this->assign('page', $pages);		$this->display();	}	public function reword_log()	{		$id = iv("get.id", "d", "参数错误");		$content = iv("post.content", "a", "内容错误");		$paypassword = iv("post.paypassword", "password", "交易密码格式错误");		if (!$this->userid) {			ajax("请先登录");		}		$user = db::table("user")->where(["id" => session("userid")])->find();		if (hashs($paypassword) != $user["paypassword"]) {			ajax("交易密码错误");		}		$reuser = db::table('reword_log')->where(['pid' => $id, 'userid' => session('userid')])->find();		if ($reuser) {			ajax("不可重复提交");		}		$userid = db::table("reword")->where(['id' => $id])->find();		$author = db::table("user")->where(['id' => $userid['userid']])->find("username");		$re = [];		$re[] = db::table("reword")->where(['id' => $id])->set(['joins' . "#+" => 1]);		$re[] = db::table('reword_log')->add(['pid' => $id, 'userid' => session('userid'), 'content' => $content, 'addtime' => time(), 'author' => $author, 'coin' => $userid['coin'], 'status' => 1,]);		if ($re) {			ajax('提交成功', 1);		} else {			ajax('提交失败');		}	}	public function sub_up()	{		$title = iv("post.title", "a", "标题错误");		$type = iv("post.type", "a", "类型参数错误");		$content = iv("post.content", "a", "内容错误");		$endtiem = iv("post.endtime", "time", "时间格式错误");		$price = iv("post.price", "d", "价格格式错误");		$coin = iv("post.coin", "d", "货币格式错误");		$paypassword = iv("post.paypassword", "password", "交易密码格式错误");		if (!$this->userid) {			ajax("请先登录");		}		$user = db::table("user")->where(["id" => session("userid")])->find();		if (hashs($paypassword) != $user["paypassword"]) {			ajax("交易密码错误");		}		$coinname = db::table('coin')->where(['id' => $coin])->find('name');		$userprice = db::table("user_coin")->where(['userid' => session('userid')])->find($coinname);		if ($price > $userprice) {			ajax("余额不足");		}		if ($endtiem < time()) {			ajax("请输入正确的时间格式");		}		$re = [];		db::exec("set autocommit=0");		db::exec("lock tables  #pre#reword write ,#pre#user_coin write");		$rs[] = db::table("user_coin")->where(["userid" => $user['id']])->set([$coinname . "#-" => $price]);		$rs[] = db::table("reword")->add(["userid" => session('userid'), "title" => $title, "content" => $content, "price" => $price, "coin" => $coin, "type" => $type, "limit" => 1, "strtime" => time(), "endtime" => $endtiem, "addtime" => time(), "tuoguan" => $price, "status" => 1, "step" => 1,]);		if (check_arr($rs)) {			db::exec("commit");			db::exec("unlock tables");			ajax('发布成功', 1);		} else {			db::exec("rollback");			db::exec("unlock tables");			ajax('发布失败');		}	}	public function up()	{		$this->set_title('悬赏任务');		$this->type = db::table('reword_type')->where(['status' => 1])->select();		$this->coinname = db::table('coin')->where(['status' => 1])->select();		$this->display();	}	public function mySub()	{		$this->set_title('悬赏任务');		$count = db::table("reword")->where(["status#>=" => 1, "userid" => session('userid')])->count();		$PageObj = new page($count, 6);		$show = $PageObj->show();		$list = db::table("reword")->where(["status#>=" => 1, "userid" => session('userid')])->order("addtime desc,sort desc")->limit($PageObj->firstRow, $PageObj->listRows)->select();		foreach ($list as $k => $v) {			if ($v['vuserid'] > 0) {				$list[$k]['vuser'] = db::table('user')->where(['id' => $v['vuserid']])->find('username');			}			$list[$k]['solve'] = db::table('reword_log')->where(['pid' => $v['id']])->find('content');			$list[$k]['coinname'] = db::table('coin')->where(['id' => $v['coin'], 'status' => 1])->find('name');		}		$pages = ['show' => $show, 'list' => $list];		$this->assign('pages', $pages);		$this->display();	}	public function myJoin()	{		$this->set_title('悬赏任务');		$count = db::table("reword_log")->where(["status#>=" => 1, "userid" => session('userid')])->count();		$PageObj = new page($count, 6);		$show = $PageObj->show();		$list = db::table("reword_log")->where(["status#>=" => 1, "userid" => session('userid')])->order("addtime desc,sort desc")->limit($PageObj->firstRow, $PageObj->listRows)->select();		foreach ($list as $k => $v) {			$list[$k]['coinname'] = db::table('coin')->where(['id' => $v['coin'], 'status' => 1])->find('name');			$list[$k]['rprice'] = db::table('reword')->where(['id' => $v['pid']])->find('price');			$list[$k]['step'] = db::table('reword')->where(['id' => $v['pid']])->find('step');			$list[$k]['title'] = db::table('reword')->where(['id' => $v['pid']])->find('title');		}		$pages = ['show' => $show, 'list' => $list];		$this->assign('pages', $pages);		$this->display();	}	public function dashang()	{		$id = iv('get.id', 'd', '参数错误');		$paypassword = iv("post.paypassword", "password", "交易密码格式错误");		if (!$this->userid) {			ajax("请先登录");		}		$ruser = db::table("user")->where(["id" => session("userid")])->find();		if (hashs($paypassword) != $ruser["paypassword"]) {			ajax("交易密码错误");		}		$log = db::table('reword_log')->where(['id' => $id])->find();		$userid = $log['userid'];		$reword = db::table('reword')->where(['id' => $log['pid']])->find();		$price = $reword['tuoguan'];		$coinname = db::table("coin")->where(['id' => $reword['coin']])->find('name');		$re = [];		db::exec("set autocommit=0");		db::exec("lock tables  #pre#reword write ,#pre#user_coin write,#pre#reword_log write");		$re[] = db::table("user_coin")->where(["userid" => $userid])->set([$coinname . "#+" => $price]);		$re[] = db::table("reword")->where(['id' => $log['pid']])->save(["vuserid" => $userid, "tuoguan" => 0, "step" => 3,]);		$re[] = db::table("reword_log")->where(['id' => $id])->save(["getprice" => $price, "status" => 2]);		if (check_arr($re)) {			db::exec("commit");			db::exec("unlock tables");			ajax('打赏成功', 1);		} else {			db::exec("rollback");			db::exec("unlock tables");			ajax('打赏失败');		}	}	public function delete()	{		$id = iv('post.id', 'd', '参数错误');		$re = [];		$re[] = db::table("reword_log")->where(['pid' => $id])->delete();		$re[] = db::table("reword")->where(['id' => $id])->delete();		if (check_arr($re)) {			ajax('删除成功', 1);		} else {			ajax('删除失败');		}	}}