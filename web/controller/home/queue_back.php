<?phpnamespace home;use Move\db;class queue_back extends \move\mvc\Controller{	public function __construct()	{		parent::__construct();	}	public function movesay()	{		defined('ADMIN_KEY') or define('ADMIN_KEY', '');		if (ADMIN_KEY) {			$move_key = iv('get.movesay');			if ($move_key != ADMIN_KEY) {				die;			}		}		dump(mm());		dump(murl());	}	public function show_run($titie = '', $var = [], $del = '')	{		echo addtime(time()) . " ";		echo $titie . " ";		if (is_array($var) && isset($var[0])) {			echo $var[0] . " ";		} else {			dump($var);		}		if ($del) {			die;		}	}	public function test()	{		$this->show_run('给以太坊转入', md('queue')->coin_in_eth());	}	public function run()	{		if (date('s') == '00') {			$str = microtime(true);			$this->show_run('更新队列状态', md('queue')->queue());			echo "本次耗时" . round((microtime(true) - $str), 2) . "s" . "<br>" . "\n";		}		$mm = mm();		if (!$mm) {			$str = microtime(true);			$this->show_run('授权获取失败', '', 1);			echo "本次耗时" . round((microtime(true) - $str), 2) . "s" . "<br>" . "\n";		}		if (date('s') % 3 == 0) {			$str = microtime(true);			$this->show_run('开始模拟交易', md('trade')->moni());			echo "本次耗时" . round((microtime(true) - $str), 2) . "s" . "<br>" . "\n";		}		if (date('s') == '04' && date('i') == '10') {			$str = microtime(true);			$this->show_run('计算市场趋势', md('queue')->tendency());			echo "本次耗时" . round((microtime(true) - $str), 2) . "s" . "<br>" . "\n";		}		if (date("s") == "10" || date("s") == "50") {			$str = microtime(true);			$this->show_run('计算行情数据', md('queue')->hangqingtu());			echo "本次耗时" . round((microtime(true) - $str), 2) . "s" . "<br>" . "\n";		}		if (isset($mm['game']) && in_array("coin_eth", explode("|", $mm["game"]))) {			if (date("s") % 9 == 0) {				$this->show_run('给以太坊转入', md('queue')->coin_in_eth());			}			if (date("s") % 10 == 0) {				$this->show_run('给以太坊转出', md('queue')->coin_out_eth());			}			if (date('s') == '59') {				$this->show_run('给以太坊集中', md('queue')->coin_jizong_eth());			}		}		if (isset($mm['eyuyan_alipay']) && ($mm['eyuyan_alipay'] > time()) && date("s") % 3 == 0) {			$str = microtime(true);			$this->show_run('计算自动收款', md('queue')->pay_eyuyan());			echo "本次耗时" . round((microtime(true) - $str), 2) . "s" . "<br>" . "\n";		}		if (isset($mm['game']) && in_array("money", explode("|", $mm["game"])) && (date("H") == "2" || date("H") == "3" || date("H") == "4") && date("s") % 3 == 0) {			$str = microtime(true);			$this->show_run('计算理财利息', md('queue')->money_lixi());			echo "本次耗时" . round((microtime(true) - $str), 2) . "s" . "<br>" . "\n";		}		if (date('s') == '11') {		}		if (date("s") == "01") {			$str = microtime(true);			$this->show_run('发送异常短信', md('queue')->sms_jk());			echo "本次耗时" . round((microtime(true) - $str), 2) . "s" . "<br>" . "\n";		}		if (date("s") == '8' && date("i") >= '56') {			$str = microtime(true);			$this->show_run('计算市场统计', md('queue')->market_stat());			echo "本次耗时" . round((microtime(true) - $str), 2) . "s" . "<br>" . "\n";		}		if (date("s") == "12" && date("i") == '30') {			$str = microtime(true);			$this->show_run('计算充值统计', md('queue')->finan_pay());			echo "本次耗时" . round((microtime(true) - $str), 2) . "s" . "<br>" . "\n";		}		if (date("s") == "14" && date("i") == '20') {			$str = microtime(true);			$this->show_run('计算财产统计', md('queue')->coin_stats());			echo "本次耗时" . round((microtime(true) - $str), 2) . "s" . "<br>" . "\n";		}		if (date("s") == "16") {			$str = microtime(true);			$this->show_run('计算冻结异常', md('queue')->dongjieyichang());			echo "本次耗时" . round((microtime(true) - $str), 2) . "s" . "<br>" . "\n";		}		if (date("s") == "18" && date("i") == '40') {			$str = microtime(true);			$this->show_run('计算转入统计', md('queue')->coin_in());			echo "本次耗时" . round((microtime(true) - $str), 2) . "s" . "<br>" . "\n";		}		if (date("s") == "20" && date("i") == '45') {			$str = microtime(true);			$this->show_run('计算转出统计', md('queue')->coin_out());			echo "本次耗时" . round((microtime(true) - $str), 2) . "s" . "<br>" . "\n";		}		if (date("s") == "22" && date("i") == '15') {			$str = microtime(true);			$this->show_run('计算交易统计', md('queue')->trade_stat());			echo "本次耗时" . round((microtime(true) - $str), 2) . "s" . "<br>" . "\n";		}		if (date("s") == "24" && date("i") == '5') {			$str = microtime(true);			$this->show_run('计算提现统计', md('queue')->finan_out());			echo "本次耗时" . round((microtime(true) - $str), 2) . "s" . "<br>" . "\n";		}		if (date("s") == "28") {			$str = microtime(true);			$this->show_run('计算订单统计', md('queue')->dingdan());			echo "本次耗时" . round((microtime(true) - $str), 2) . "s" . "<br>" . "\n";		}		if (date("s") == "30" && date("i") % 5 == '0') {			$str = microtime(true);			$this->show_run('检查金额异常', md('queue')->coin_jk());			echo "本次耗时" . round((microtime(true) - $str), 2) . "s" . "<br>" . "\n";		}		if (date("s") == "36" && date("i") == '25' && date("i") % 3 == '0') {			$str = microtime(true);			$this->show_run('计算注册统计', md('queue')->reg_stat());			echo "本次耗时" . round((microtime(true) - $str), 2) . "s" . "<br>" . "\n";		}		if (date("s") % 2 == 0) {			$str = microtime(true);			$this->show_run('计算自动转入', md('queue')->coin_zidong());			echo "本次耗时" . round((microtime(true) - $str), 2) . "s" . "<br>" . "\n";		}		if (date("s") % 3 == 0) {			$str = microtime(true);			$this->show_run('计算自动转出', md('queue')->coin_out_zidong());			echo "本次耗时" . round((microtime(true) - $str), 2) . "s" . "<br>" . "\n";		}		if (date("s") % 4 == 0) {			$str = microtime(true);			defined('TRADE_SEND') or define('TRADE_SEND', 0);			if (TRADE_SEND) {				$this->show_run('计算交易赠送', md('trade')->invit_queue_new());			} else {				$this->show_run('计算交易赠送', md('trade')->invit_queue());			}			echo "本次耗时" . round((microtime(true) - $str), 2) . "s" . "<br>" . "\n";		}		if (date("H") == "19" && date("i") >= "50" && date("s") % 3 != 0) {			if (isset($mm['game']) && in_array("fenhong_tsb", explode("|", $mm["game"]))) {				$str = microtime(true);				$this->show_run('持币分红开始', md('back_cny')->fenhong_tsb());				echo "本次耗时" . round((microtime(true) - $str), 2) . "s" . "<br>" . "\n";			}			if (isset($mm['game']) && in_array("back_cny", explode("|", $mm["game"]))) {				$str = microtime(true);				$this->show_run('返现计算', md('back_cny')->back_cny());				echo "本次耗时" . round((microtime(true) - $str), 2) . "s" . "<br>" . "\n";			}		}		if (isset($mm['game']) && in_array("ico", explode("|", $mm["game"])) && (date("s") % 5 == 0)) {			$str = microtime(true);			$this->show_run('众筹状态监控', md('ico')->queue());			echo "本次耗时" . round((microtime(true) - $str), 2) . "s" . "<br>" . "\n";		}		if (date("s") % 5 == 0) {			$str = microtime(true);			$this->show_run('计算自动撤单', md('queue')->trade_che());			echo "本次耗时" . round((microtime(true) - $str), 2) . "s" . "<br>" . "\n";		}	}	public function movegame()	{		defined('ADMIN_KEY') or define('ADMIN_KEY', '');		if (ADMIN_KEY) {			$move_key = iv('get.movesay');			if ($move_key != ADMIN_KEY) {				die;			}		}		$ext = new \ext\game();		$ext->check();		ajax('更新成功', 1);	}	public function movetable()	{		defined('ADMIN_KEY') or define('ADMIN_KEY', '');		if (ADMIN_KEY) {			$move_key = iv('get.movesay');			if ($move_key != ADMIN_KEY) {				die;			}		}		$mm = mm();		if (!$mm || !isset($mm['game'])) {			exit('本地缓存获取失败');		}		if (!in_array('bbs', explode("|", $mm['game']))) {			$this->table_del('move_bbs');			$this->table_del('move_bbs_act');			$this->table_del('move_bbs_disc');			$this->table_del('move_bbs_img');			$this->table_del('move_bbs_type');			$this->table_del('move_bbs_user');		}		if (!in_array('daili', explode("|", $mm['game']))) {			$this->table_del('move_daili');			$this->table_del('move_daili_invit');			$this->table_del('move_daili_log');		}		if (!in_array('doc', explode("|", $mm['game']))) {			$this->table_del('move_doc');			$this->table_del('move_doc_type');		}		if (!in_array('egg', explode("|", $mm['game']))) {			$this->table_del('move_egg');			$this->table_del('move_egg_farm');			$this->table_del('move_egg_log');			$this->table_del('move_egg_market');			$this->table_del('move_egg_user');		}		if (!in_array('fenhong98', explode("|", $mm['game']))) {			$this->table_del('move_fenhong98');			$this->table_del('move_fenhong98_log');			$this->table_del('move_fenhong98_pool');			$this->table_del('move_fenhong98_poolconfig');		}		if (!in_array('hold', explode("|", $mm['game']))) {			$this->table_del('move_hold');			$this->table_del('move_hold_invit');			$this->table_del('move_hold_log');		}		if (!in_array('back', explode("|", $mm['game']))) {			$this->table_del('move_back');			$this->table_del('move_back_data');			$this->table_del('move_back_log');		}		if (!in_array('bazaar', explode("|", $mm['game']))) {			$this->table_del('move_bazaar');			$this->table_del('move_bazaar_conf');			$this->table_del('move_bazaar_invit');			$this->table_del('move_bazaar_log');			$this->table_del('move_bazaar_market');		}		if (!in_array('charge', explode("|", $mm['game']))) {			$this->table_del('move_charge_card');			$this->table_del('move_charge_log');		}		if (!in_array('choujiang', explode("|", $mm['game']))) {			$this->table_del('move_choujiang');			$this->table_del('move_choujiang_coinlist');			$this->table_del('move_choujiang_log');			$this->table_del('move_choujiang_num');		}		if (!in_array('crowd', explode("|", $mm['game']))) {			$this->table_del('move_crowd');			$this->table_del('move_crowd_fee');			$this->table_del('move_crowd_log');		}		if (!in_array('duihuan', explode("|", $mm['game']))) {			$this->table_del('move_duihuan');			$this->table_del('move_duihuan_cointype');			$this->table_del('move_duihuan_log');		}		if (!in_array('duobao', explode("|", $mm['game']))) {			$this->table_del('move_duobao');			$this->table_del('move_duobao_coinpay');			$this->table_del('move_duobao_img');			$this->table_del('move_duobao_log');			$this->table_del('move_duobao_old');			$this->table_del('move_duobao_type');		}		if (!in_array('factory', explode("|", $mm['game']))) {			$this->table_del('move_factory');			$this->table_del('move_factory_buylog');			$this->table_del('move_factory_feedlog');			$this->table_del('move_factory_getproduct');			$this->table_del('move_factory_goods');			$this->table_del('move_factory_proterty');		}		if (!in_array('fenhong', explode("|", $mm['game']))) {			$this->table_del('move_fenhong');			$this->table_del('move_fenhong_log');		}		if (!in_array('hongbao', explode("|", $mm['game']))) {			$this->table_del('move_hongbao');			$this->table_del('move_hongbao_log');			$this->table_del('move_hongbao_type');		}		if (!in_array('hongli', explode("|", $mm['game']))) {			$this->table_del('move_hongli');			$this->table_del('move_hongli_fee');			$this->table_del('move_hongli_log');			$this->table_del('move_hongli_type');		}		if (!in_array('huafei', explode("|", $mm['game']))) {			$this->table_del('move_huafei');			$this->table_del('move_huafei_coin');			$this->table_del('move_huafei_cointype');			$this->table_del('move_huafei_log');			$this->table_del('move_huafei_peizhi');			$this->table_del('move_huafei_type');		}		if (!in_array('hyissue', explode("|", $mm['game']))) {			$this->table_del('move_hyissue');			$this->table_del('move_hyissue_invit');			$this->table_del('move_hyissue_log');		}		if (!in_array('lend', explode("|", $mm['game']))) {			$this->table_del('move_lend');			$this->table_del('move_lend_back');			$this->table_del('move_lend_danbao');			$this->table_del('move_lend_fee');			$this->table_del('move_lend_qi');			$this->table_del('move_lend_set');		}		if (!in_array('mine', explode("|", $mm['game']))) {			$this->table_del('move_mine');			$this->table_del('move_mine_log');			$this->table_del('move_mine_market');			$this->table_del('move_mine_rate');			$this->table_del('move_mine_supply');			$this->table_del('move_mine_supplylog');			$this->table_del('move_mine_worker');		}		if (!in_array('newfenhong', explode("|", $mm['game']))) {			$this->table_del('move_newfenhong');			$this->table_del('move_newfenhong_bili');			$this->table_del('move_newfenhong_log');		}		if (!in_array('poolgbw', explode("|", $mm['game']))) {			$this->table_del('move_poolgbw');			$this->table_del('move_poolgbw_log');			$this->table_del('move_poolgbw_market');			$this->table_del('move_poolgbw_shuoming');		}		if (!in_array('pool', explode("|", $mm['game']))) {			$this->table_del('move_pool');			$this->table_del('move_pool_log');			$this->table_del('move_pool_market');		}		if (!in_array('push', explode("|", $mm['game']))) {			$this->table_del('move_push_config');			$this->table_del('move_push_log');		}		if (!in_array('money', explode("|", $mm['game']))) {			$this->table_del('move_money');			$this->table_del('move_money_fee');			$this->table_del('move_money_log');		}		if (!in_array('qiandao', explode("|", $mm['game']))) {			$this->table_del('move_qiandao');			$this->table_del('move_qiandao_award');		}		if (!in_array('question', explode("|", $mm['game']))) {			$this->table_del('move_question');			$this->table_del('move_question_ans');			$this->table_del('move_question_type');		}		if (!in_array('raise', explode("|", $mm['game']))) {			$this->table_del('move_raise');			$this->table_del('move_raise_money');			$this->table_del('move_raise_order');		}		if (!in_array('reword', explode("|", $mm['game']))) {			$this->table_del('move_reword');			$this->table_del('move_reword_log');			$this->table_del('move_reword_type');		}		if (!in_array('sale', explode("|", $mm['game']))) {			$this->table_del('move_sale');			$this->table_del('move_sale_danbaolog');			$this->table_del('move_sale_img');			$this->table_del('move_sale_log');			$this->table_del('move_sale_type');		}		if (!in_array('shop', explode("|", $mm['game']))) {			$this->table_del('move_shop');			$this->table_del('move_shop_banner');			$this->table_del('move_shop_coinpay');			$this->table_del('move_shop_img');			$this->table_del('move_shop_log');			$this->table_del('move_shop_type');		}		if (!in_array('smoney', explode("|", $mm['game']))) {			$this->table_del('move_smoney');			$this->table_del('move_smoney_fee');			$this->table_del('move_smoney_log');		}		if (!in_array('sweike', explode("|", $mm['game']))) {			$this->table_del('move_sweike');			$this->table_del('move_sweike_tender');			$this->table_del('move_sweike_type');		}		if (!in_array('talk', explode("|", $mm['game']))) {			$this->table_del('move_talk');			$this->table_del('move_talk_type');		}		if (!in_array('weibo', explode("|", $mm['game']))) {			$this->table_del('move_weibo');			$this->table_del('move_weibo_config');			$this->table_del('move_weibo_guanzhu');			$this->table_del('move_weibo_img');			$this->table_del('move_weibo_log');			$this->table_del('move_weibo_pinlun');		}		if (!in_array('weike', explode("|", $mm['game']))) {			$this->table_del('move_weike');			$this->table_del('move_weike_tender');			$this->table_del('move_weike_type');		}		if (!in_array('z', explode("|", $mm['game']))) {			$this->table_del('move_z_btc');			$this->table_del('move_z_hangq');			$this->table_del('move_z_hangq_type');		}		if (!in_array('back_cny', explode("|", $mm['game']))) {			$this->table_del('move_back_cny');			$this->table_del('move_back_cny_log');		}		if (!in_array('cen', explode("|", $mm['game']))) {			$this->table_del('move_cen_btc');			$this->table_del('move_cen_coinping');			$this->table_del('move_cen_hangq');			$this->table_del('move_cen_hangq_type');			$this->table_del('move_cen_ping');			$this->table_del('move_cen_qu');			$this->table_del('move_cen_qu_type');		}		if (!in_array('dingcan', explode("|", $mm['game']))) {			$this->table_del('move_dingcan');			$this->table_del('move_dingcan_addr');			$this->table_del('move_dingcan_img');			$this->table_del('move_dingcan_invit');			$this->table_del('move_dingcan_log');			$this->table_del('move_dingcan_seller');			$this->table_del('move_dingcan_type');		}		if (!in_array('fenhong_tsb', explode("|", $mm['game']))) {			$this->table_del('move_fenhong_tsb');			$this->table_del('move_fenhong_tsb_bili');			$this->table_del('move_fenhong_tsb_log');		}		if (!in_array('ico', explode("|", $mm['game']))) {			$this->table_del('move_ico');			$this->table_del('move_ico_bili');			$this->table_del('move_ico_log');		}		if (!in_array('push_js', explode("|", $mm['game']))) {			$this->table_del('move_push_js');			$this->table_del('move_push_js_log');			$this->table_del('move_push_js_market');		}		$this->table_del('move_navigation');		$this->table_del('move_mem');		exit('删除表成功');	}	protected function table_del($name)	{		db::query('DROP TABLE `' . $name . '`;');		echo '删除' . $name . '成功<br>';	}}