<?phpnamespace home;use Move\db;use Move\ext\client;use Move\ext\page;use function PHPSTORM_META\elementType;class domain extends home{	public $all_xnb = [];	public $cnyin_type = [];	public $status = [];	public $xnb = [];	public $user_bank = [];	public $coinname = [];	public $market_list = [];	public $paiming = [];	public $zjc = [];	public $random = [];	public $type = [];	public $out_fee = [];	public $coin = [];	public $all_gjb = [];	public function __construct()	{		parent::__construct();		$this->is_login();		$this->is_goole();		$domain = true;		$this->assign('domain', $domain);	}	public function index()	{		$this->set_title('我的域名');		$coinname = iv('get.coinname');		$status = iv('get.status');		$mymc_coin = new \mymc\coin();		$coin_list_tmp = $mymc_coin->all_xnb(1);		if ($coin_list_tmp) {			foreach ($coin_list_tmp as $k => $v) {				$coin_list[$v['name']] = $v;			}		} else {			$coin_list = [];		}		$where ['user_id'] = $this->userid;		if ($coinname) {			$where ['coinname'] = $coinname;		}		if ($status) {			$where ['status'] = $status;		} else {			$where ['status#<>'] = 0;		}		$count = db::table('user_domain')->where($where)->count();		$page_obj = new page($count, 15);		$show = $page_obj->show();		$list = db::table('user_domain')->where($where)->order('`sort` asc ,id desc')->limit($page_obj->firstRow, $page_obj->listRows)->select();		$pages = ["list" => $list, "show" => $show];		$this->assign('pages', $pages);		$this->assign('coin_list', $coin_list);		$this->assign('coinname', $coinname);		$this->assign('coinname', $status);		$this->display();	}	public function domainin()	{		$this->set_title('转入虚拟币');		$coin = iv("get.coin", 'w', '参数错误', 1);		if (!$coin) {			$coin = md('sys_config')->get('mr_coin');		}		$user_wallet = db::table('user_wallet')->where(['userid' => $this->userid])->find();		if (!isset($user_wallet[$coin])) {			md('common')->execute("ALTER TABLE  `move_user_wallet` ADD  `" . $coin . "` VARCHAR(255) NOT NULL");		}		$mymc_coin = new \mymc\coin();		$coin_list_tmp = $mymc_coin->all_xnb(1);		if ($coin_list_tmp) {			foreach ($coin_list_tmp as $k => $v) {				$coin_list[$v['name']] = $v;			}		} else {			$coin_list = [];		}		$user_coin = md('user')->get_coin_info();		$mymc_coin = new \mymc\coin();		$coin_info = $mymc_coin->find($coin);		if (!$coin_info) {			show_msg("币种不存在...");		}		$token = token('home_finan_coinin');		$memo = null;		if ($coin_info['wallet'] == "gxb") {			$qianbao = db::table("user_wallet")->where(["userid" => session("userid")])->find($coin);			$memo = session("userid");			if (!$qianbao) {				$address = $coin_info['dj_yh'];				db::table("user_wallet")->where(["userid" => session("userid")])->save([$coin => $address]);			}		} else if ($coin_info['wallet'] == "eth") {			$qianbao = db::table("user_wallet")->where(["userid" => session("userid")])->find($coin);			if (!$qianbao) {				$host = $coin_info['dj_zj'];				$port = $coin_info["dj_dk"];				$password = $coin_info['dj_jm'];				$pararm = 'coin=' . $coin_info['name'] . '&action=newAccount';				$qianbao = \ext\coin\mscoin::mycurl($host, $port, $password, $pararm);				$qianbao = $qianbao['msg'];				if (!db::table("user_wallet")->where(["userid" => session("userid")])->save([$coin => $qianbao])) {					$qianbao = '钱包地址创建失败.....';				}			}		} else {			if ($coin_info['wallet'] == "tsb") {				$qianbao = $coin_info['tsb_addr'];			} else {				$qianbao = md('user')->get_wallet_addr($coin);			}		}		$where = ["userid" => $this->userid, "coinname" => $coin];		$count = db::table('coin_in')->where($where)->count();		$page_obj = new page($count, 5);		$show = $page_obj->show();		$list = db::table('coin_in')->where($where)->order('`sort` asc ,id desc')->limit($page_obj->firstRow, $page_obj->listRows)->select();		$this->assign('qianbao', $qianbao);		$this->assign('memo', $memo);		$this->pages = ["list" => $list, "show" => $show];		$this->assign("coin", $coin);		$this->assign('coin_list', $coin_list);		$this->assign('user_coin', $user_coin);		$this->assign('coin_info', $coin_info);		$this->assign('token', $token);		$this->display();	}	public function mydomain_up()	{		$this->check_up('转入虚拟币');		if (!session('home_finan_coinin')) {			ajax('非法访问');		}		$token = iv("post.token", 'dw', '令牌错误');		if (!$token || $token != session('home_finan_coinin')) {			ajax('恶意访问');		}		$addr = iv("post.addr");		$coin = iv("post.coin", 'w', '转入币种 参数错误');		if (!session("userid")) {			ajax("请先登录");		}		$mymc_coin = new \mymc\coin();		$coin_info = $mymc_coin->find($coin);		if (!$coin_info) {			ajax('币种错误');		}		if ($coin_info['status'] != 1) {			ajax('币种已经禁用');		}		if ($coin_info['zr_jz'] != 1) {			ajax('币种禁止转入');		}		$type = iv("post.type");		$res = md('domain')->domain_in(session("userid"), $coin, $addr, $type);		if (isset($res[1])) {			ajax($res[0], 1);		} else {			ajax($res[0]);		}	}	public function domainout()	{		$this->set_title('转出虚拟币');		$coin = iv("get.coin", 'w', '参数错误', true);		if (!$coin) {			$coin = md('sys_config')->get('mr_coin');		}		$mymc_coin = new \mymc\coin();		$coin_list_tmp = $mymc_coin->all_xnb(1);		if ($coin_list_tmp) {			foreach ($coin_list_tmp as $k => $v) {				$coin_list[$v['name']] = $v;			}		} else {			$coin_list = [];		}		if ($this->userid) {			$where['userid'] = $this->userid;			$where['coinname'] = $coin;			$user_qianbao = db::table('user_qianbao')->where($where)->select();		} else {			$user_qianbao = [];		}		if (isset($this->user['moble']) && $this->user['moble']) {			$this->user['moble'] = substr_replace(str_replace("|", " ", $this->user['moble']), '****', 7, 4);		}		$goole = 0;		if (isset($this->user['google']) && $this->user['google']) {			$arr = explode('|', $this->user['google']);			if ($arr[2]) {				$goole = 1;			} else {				$goole = 0;			}		}		$mymc_coin = new \mymc\coin();		$coin_info = $mymc_coin->find($coin);		if (!$coin_info) {			show_msg("币种不存在.....");		}		$sys_sms = db::table('sys_sms')->where(['status' => 1])->find();		if (!$sys_sms) {			$sys_sms['sms'] = 0;			$sys_sms['tel'] = 0;		}		$this->assign('goole', $goole);		$this->assign('user_qianbao', $user_qianbao);		$this->assign('coin_list', $coin_list);		$this->assign('coin', $coin);		$this->assign('sys_sms', $sys_sms);		$this->display();	}	public function domainout_up()	{		$this->check_up('转出虚拟币');		$coinname = iv("post.coin", 'w', '币种 格式错误');		$num = iv("post.num", 'xnb', '转出数量 格式错误');		$moble_verify = iv("post.moble_verify", 'd', '短信验证码格式错误');		$bank = iv("post.bank");		$type = iv("post.type");		$goole = iv("post.goole");		$paypassword = iv("post.paypassword", 'password', '交易密码格式错误');		if (!$moble_verify || $moble_verify != session('moble_verify_coinout')) {			ajax('短信验证码错误');		}		if (!$goole) {			$goole = null;		}		$res = md("domain")->domain_out_up($this->userid, $coinname, $num, $bank, $type, $goole, $paypassword);		if (isset($res[1])) {			session('moble_verify_coinout', null);			ajax($res[0], 1);		} else {			ajax($res[0]);		}	}	public function domainoutlog()	{		$this->set_title('转出虚拟币记录');		$coinname = iv('get.coinname');		$mymc_coin = new \mymc\coin();		$coin_list_tmp = $mymc_coin->all_xnb(1);		if ($coin_list_tmp) {			foreach ($coin_list_tmp as $k => $v) {				$coin_list[$v['name']] = $v;			}		} else {			$coin_list = [];		}		$where ['userid'] = $this->userid;		if ($coinname) {			$where ['coinname'] = $coinname;		}		$count = db::table('coin_out')->where($where)->count();		$page_obj = new page($count, 15);		$show = $page_obj->show();		$list = db::table('coin_out')->where($where)->order('`sort` asc ,id desc')->limit($page_obj->firstRow, $page_obj->listRows)->select();		$pages = ["list" => $list, "show" => $show];		$this->assign('pages', $pages);		$this->assign('coin_list', $coin_list);		$this->assign('coinname', $coinname);		$this->display();	}} 