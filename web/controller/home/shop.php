<?phpnamespace home;use Move\db;use Move\ext\page;class shop extends home{	public function __construct()	{		parent::__construct();		$this->is_game('shop');	}	public function index()	{		$this->set_title('云购商城');		$banner = db::table("sys_ad")->where(["type" => "shop", "status" => 1])->order("sort asc ,id desc")->select();		$this->assign('banner', $banner);		$typelist1 = db::table("shop_type")->where(["status" => 1, "pid" => 0])->order("sort asc,id asc")->select();		$data = [];		$i = 0;		$m = 0;		$n = 0;		$type1 = iv("type1");		foreach ($typelist1 as $v) {			$typelist2 = db::table("shop_type")->where(["status" => 1, "pid" => $v["id"]])->limit(3)->select();			$data[$i++]["a"] = $typelist2;			$data[$m++]["b"] = $v;			if ($type1) {				$typelist3 = db::table("shop_type")->where(["status" => 1, "pid" => $type1])->select();				if ($typelist3) {					$id_arr = [];					foreach ($typelist3 as $kk => $vv) {						$id_arr[] = $vv["id"];					}					$shoplist = db::table("shop")->where(["status" => 1, "type#in" => $id_arr])->select();				} else {					$shoplist = [];				}			} else {				$type1 = 0;				$data2 = db::table("shop_type")->where(["status" => 1, "pid" => $v["id"]])->select();				if ($data2) {					$id_arr = [];					foreach ($data2 as $vv) {						$id_arr[] = $vv["id"];					}					$data3 = db::table("shop_type")->where(["status" => 1, "pid#in" => $id_arr])->select();					if ($data3) {						$id_arr2 = [];						foreach ($data3 as $vv) {							$id_arr2[] = $vv["id"];						}						$shoplist = db::table("shop")->where(["status" => 1, "type#in" => $id_arr2])->limit(8)->select();					} else {						$shoplist = [];					}				} else {					$shoplist = [];				}			}			$data[$n++]["c"] = $shoplist;		}		$hotlist = db::table("shop")->where(["status" => 1, "hot" => 1])->order("sort asc,id desc")->limit(4)->select();		$this->assign('hotlist', $hotlist);		$this->display();	}	public function json()	{		$type = iv('get.type', 'd', '参数错误', 1);		$data2 = db::table("shop_type")->where(["status" => 1, "pid" => $type])->select();		if ($data2) {			foreach ($data2 as $k => $v) {				$data2[$k]["keys"] = db::table("shop_type")->where(["status" => 1, "pid" => $v["id"]])->select();			}		}		exit(json_encode($data2));	}	public function lists()	{		$this->set_title('商品列表');		$where = [];		$keywords = iv("get.keywords");		$type = iv('get.type');		$type1 = iv('get.type1');		$type2 = iv('get.type2');		$sort = iv('get.sort');		$asc = iv('get.asc');		if ($keywords) {			if (!check($keywords, 'a')) {				ajax('关键字格式错误');			}			$where["title#like"] = "%" . $keywords . "%";		}		if ($type && !$type1 && !$type2) {			if (!check($type, 'd')) {				ajax('类型1格式错误');			}			$data2 = db::table("shop_type")->where(["status" => 1, "pid" => $type])->select();			$id_arr = [];			if ($data2) {				foreach ($data2 as $v) {					$id_arr[] = $v["id"];				}			}			if (!$id_arr) {				$id_arr[] = 'move';			}			$data3 = db::table("shop_type")->where(["status" => 1, "pid#in" => $id_arr])->select();			$id_arr2 = [];			if ($data3) {				foreach ($data3 as $v) {					$id_arr2[] = $v["id"];				}			}			if (!$id_arr2) {				$id_arr2[] = 'move';			}			$where["type#in"] = $id_arr2;			$where["status"] = 1;			$type1 = 0;			$type2 = 0;		} else {			if ($type && $type1 && !$type2) {				if (!check($type1, 'd')) {					ajax('类型2格式错误');				}				$data2 = db::table("shop_type")->where(["status" => 1, "pid" => $type1])->select();				$id_arr = [];				if ($data2) {					foreach ($data2 as $v) {						$id_arr[] = $v["id"];					}				}				if (!$id_arr) {					$id_arr[] = 'move';				}				$where["status"] = 1;				$where["type#in"] = $id_arr;				$type2 = 0;			} else {				if ($type2) {					if (!check($type2, 'd')) {						ajax('类型2格式错误');					}					$where["type"] = $type2;					$where["status"] = 1;				} else {					$type = 0;					$type1 = 0;					$type2 = 0;					$where["status"] = 1;				}			}		}		if ($sort) {			if (!check($sort, 'd')) {				ajax('格式错误');			}			if ($sort == 1) {				$order = "deal";			}			if ($sort == 2) {				$order = "price";			}			if ($sort == 3) {				$order = "addtime";			}		} else {			$sort = 0;			$order = "id";		}		if ($asc == 1) {			$asc = "asc";		} else {			$asc = "desc";		}		$this->assign('type', $type);		$this->assign('type1', $type1);		$this->assign('type2', $type2);		$this->assign('sort', $sort);		$this->assign('asc', $asc);		$typelist1 = db::table("shop_type")->where(["status" => 1, "pid" => 0])->select();		$this->assign('typelist1', $typelist1);		if ($type) {			$typelist2 = db::table("shop_type")->where(["status" => 1, "pid" => $type])->select();		} else {			$typelist2 = [];		}		$this->assign('typelist2', $typelist2);		if ($type1) {			$typelist3 = db::table("shop_type")->where(["status" => 1, "pid" => $type1])->select();		} else {			$typelist3 = [];		}		$this->assign('typelist3', $typelist3);		$hotlist = db::table("shop")->where(["status" => 1, "hot" => 1])->order("`$order` desc")->limit(5)->select();		$this->assign('hotlist', $hotlist);		$count = db::table("shop")->where($where)->count();		$PageObj = new page($count, 16);		$show = $PageObj->show();		$list = db::table("shop")->where($where)->order("`$order` $asc")->limit($PageObj->firstRow, $PageObj->listRows)->select();		$pages = ['show' => $show, 'list' => $list];		$this->assign('pages', $pages);		$this->display();	}	public function view()	{		$this->set_title('商品详情');		$token = token('home_shop_view');		$this->assign('token', $token);		$id = iv('get.id', 'd', '参数错误');		$shop = db::table("shop")->where(["id" => $id])->find();		if (!$shop) {			ajax("商品不存在");		}		if (isset($shop["coindata"])) {			$coinpay = explode(",", rtrim($shop["coindata"], ","));			$mymc_coin = new \mymc\coin();			foreach ($coinpay as $k => $v) {				$shop_coinpay = $mymc_coin->find(["id" => $v]);				$coinpay[$k] = $shop_coinpay["title"];			}		}		$shop['price'] = num($shop['price']);		$img = db::table("shop_img")->where(["shopid" => $id, "status" => 1])->select();		$img['a']['img'] = $shop['img'];		$shop_xg = db::table('shop')->where(["type" => $shop['type']])->limit(3)->select();		$this->assign('shop', $shop);		$this->assign('img', $img);		$this->assign('shop_xg', $shop_xg);		$this->display();	}	public function up()	{		if (!session('home_shop_view')) {			ajax('非法访问');		}		$token = iv("post.token", 'dw', '令牌错误');		if (!$token || $token != session('home_shop_view')) {			ajax('恶意访问');		}		$id = iv('post.id', 'd', '参数非法');		$num = iv('post.num');		$coinpay = iv('post.coinpay');		ajax('', 1, url('shop/order/id/' . $id . '/num/' . $num . '/coinpay/' . $coinpay));	}	public function order()	{		$this->set_title('确认订单');		$token = token('home_shop_order');		$this->assign('token', $token);		$id = iv('get.id', 'd', '参数错误');		$num = iv('get.num', "d", "参数错误");		$coinpay = iv('get.coinpay');		$coin = db::table("coin")->where(["title" => $coinpay])->find();		$coinpay = $coin["name"];		$shop = db::table("shop")->where(["id" => $id])->find();		$shop['coin_title'] = $coin["title"];		$heji = num($num * $shop['price']);		$shop_coinpay = db::table("shop_coinpay")->where(["coinpay" => $coin["name"]])->find();		if ($coinpay == $shop['price_coin']) {			$bili = '1';			$shiji = $heji;		} else {			if (!$shop_coinpay || !$shop_coinpay["bili"]) {				$price = db::table("trade_market")->where(["name" => "$coinpay" . "_" . $shop['price_coin']])->find();				$bili = $price["new_price"];				$shiji = $num * $shop['price'] / $bili;			} else if ($shop_coinpay["bili"]) {				$bili = $shop_coinpay["bili"];				$shiji = $num * $shop['price'] / $shop_coinpay["bili"];			} else {				$shiji = 'config err';			}		}		if ($this->userid) {			$user_goods = db::table("user_goods")->where(["userid" => $this->userid])->select();;		} else {			$user_goods = [];		}		$this->assign('id', $id);		$this->assign('bili', $bili);		$this->assign('num', $num);		$this->assign('shop', $shop);		$this->assign('heji', $heji);		$this->assign('shiji', $shiji);		$this->assign('coinpay', $coinpay);		$this->assign('user_goods', $user_goods);		$this->display();	}	public function order_up()	{		$this->check_up('云购商城下单');		$token = iv("post.token", 'dw', '令牌错误');		if (!$token || $token != session('home_shop_order')) {			ajax('恶意访问');		}		$num = iv('post.num', 'd', '数量错误');		$coinpay = iv('post.coinpay', 'w', '币种错误');		$shop_id = iv('post.shop_id', 'd', '商品错误');		$user_goods_id = iv('post.user_goods_id', 'd', '收货地址错误');		$liuyan = iv('post.liuyan', 'a', '留言格式错误', 1);		$paypassword = iv('post.paypassword', 'password', '交易密码格式错误');		if (!$this->userid) {			ajax("请先登录");		}		$user = db::table("user")->where(["id" => session("userid")])->find();		if (empty($user['paypassword'])) {			ajax('交易密码非法');		}		if (hashs($paypassword) != $user['paypassword']) {			ajax('交易密码错误');		}		$res = md('shop')->order_up($this->userid, $shop_id, $num, $coinpay, $user_goods_id, $liuyan);		if (isset($res[1]) && $res[1]) {			ajax($res[0], 1);		} else {			ajax($res[0]);		}	}	public function log()	{		$this->set_title('我的订单');		$this->token = token('home_shop_log');		if ($this->userid) {			$where = ["userid" => $this->userid];			$count = db::table("shop_log")->where($where)->count();			$PageObj = new page($count, 15);			$show = $PageObj->show();			$list = db::table("shop_log")->where($where)->order("`id` desc")->limit($PageObj->firstRow, $PageObj->listRows)->select();		} else {			$show = [];			$list = [];		}		$pages = ['show' => $show, 'list' => $list];		$this->assign('pages', $pages);		$this->display();	}	public function shouhuo()	{		$this->check_up('云购商城确认收货');		if (!session('home_shop_log')) {			ajax('非法访问');		}		$token = iv("post.token", 'dw', '令牌错误');		if (!$token || $token != session('home_shop_log')) {			ajax('恶意访问');		}		$id = iv('post.id', 'd', '请选择id');		$paypassword = iv('post.paypassword', 'password', '交易密码格式错误');		$user = db::table("user")->where(["id" => $this->userid])->find();		if (empty($user['paypassword'])) {			ajax('交易密码非法');		}		if (hashs($paypassword) != $user['paypassword']) {			ajax('交易密码错误');		}		$shop_log = db::table("shop_log")->where(["id" => $id])->find();		if (!$shop_log) {			ajax('参数错误');		}		if ($shop_log['status'] != 3) {			ajax('非法访问1');		}		if ($shop_log['userid'] != $this->userid) {			ajax('非法访问2');		}		$rs = db::table("shop_log")->where(["id" => $id])->save(['status' => 1, "endtime" => time()]);		if ($rs) {			ajax('操作成功', 1);		} else {			ajax('操作失败');		}	}}