<?phpnamespace mymc;use Move\db;class trade{	public $mc_market = [];	public $mc_qu = [];	public function clear_mr($market = null)	{		mc('mymc_trade_market', null);		if ($market) {			mc('mymc_trade_depth_data' . $market, null);			mc('mymc_trade_log_list' . $market, null);			mc('mymc_trade_buy_list' . $market . '10', null);			mc('mymc_trade_sell_list' . $market . '10', null);			mc('mymc_trade_buy_list' . $market . '20', null);			mc('mymc_trade_sell_list' . $market . '20', null);			mc('mymc_trade_buy_list' . $market . '100', null);			mc('mymc_trade_sell_list' . $market . '100', null);			mc('trade_index_mytrade' . session('userid') . $market);		}		mc('mymc_xin_trade_ajax_allcoin_a', 1);	}	public function market_run()	{		$data = mc('mymc_trade_market');		if (!$data) {			$res = db::table('trade_market')->where(['status' => 1])->order('sort asc,id desc')->select();			if ($res) {				foreach ($res as $k => $v) {					$data[$v['name']] = $v;				}				mc('mymc_trade_market', $data);			}		}		$this->mc_market = $data;	}	public function market_select()	{		$this->market_run();		return $this->mc_market ? $this->mc_market : [];	}	public function market_find($name = null)	{		$this->market_run();		return isset($this->mc_market[$name]) ? $this->mc_market[$name] : [];	}	public function qu_run()	{		$data = mc('mymc_trade_qu');		if (!$data) {			$res = db::table('trade_qu')->where(['status' => 1])->order('sort asc,id desc')->select();			if ($res) {				mc('mymc_trade_qu', $res);			}		}		$this->mc_qu = $data;	}	public function qu_select()	{		$this->qu_run();		return $this->mc_qu ? $this->mc_qu : [];	}	public function qu_find($name = null)	{		$this->qu_run();		return isset($this->mc_qu[$name]) ? $this->mc_qu[$name] : [];	}	public function daohang()	{		$this->qu_run();		$this->market_run();		$mymz_coin = new \mymc\coin();		$coin_list = $mymz_coin->select();		$menu = [];		if ($this->mc_qu) {			foreach ($this->mc_qu as $k => $v) {				$ids = explode(',', $v['data']);				if ($ids) {					$menu[$k]['title'] = $v['title'];					if ($this->mc_market) {						foreach ($this->mc_market as $kk => $vv) {							$tmp_xnb = explode("_", $vv['name'])[0];							if (in_array($vv['id'], $ids)) {								$menu[$k]['data'][$vv['name']]['img'] = $vv['img'];								$menu[$k]['data'][$vv['name']]['price'] = $vv['new_price'];								$menu[$k]['data'][$vv['name']]['title'] = $coin_list[$tmp_xnb]['title'] . "(" . strtoupper($tmp_xnb) . ")";							}						}					}				}			}		}		return $menu;	}	public function depth_data($market)	{		$data = mc('mymc_trade_depth_data' . $market);		if (!$data) {			$data['buy'] = db::query('select id,price,sum(num-deal)as nums from move_trade  where status=0 and type=1 and market =\'' . $market . '\' group by price order by price desc limit 100;');			$data['sell'] = db::query('select id,price,sum(num-deal)as nums from move_trade where status=0 and type=2 and market =\'' . $market . '\' group by price order by price asc limit 100;');			$data['log'] = db::table('trade_log')->where(['status' => 1, 'market' => $market])->order('id desc')->limit(100)->select();			if ($data['buy'] || $data['sell'] || $data['log']) {				mc('mymc_trade_depth_data' . $market, $data);			}		}		return $data;	}	public function log_list($market = null)	{		$data = mc('mymc_trade_log_list' . $market);		if (!$data) {			$data = db::table("trade_log")->where(["market" => $market])->order("`id` DESC")->limit(50)->select();			mc('mymc_trade_log_list' . $market, $data, 600);		}		return $data;	}	public function buy_list($market = null, $limit = 10)	{		$data = mc('mymc_trade_buy_list' . $market . $limit);		if (!$data) {			$data = db::query("select id,price,sum(num-deal) as nums from move_trade where status=0 and type=1 and market =? group by price order by price desc limit ?;", [$market, $limit]);			if ($data) {				mc('mymc_trade_buy_list' . $market . $limit, $data);			}		}		return $data;	}	public function sell_list($market = null, $limit = 10)	{		$data = mc('mymc_trade_sell_list' . $market . $limit);		if (!$data) {			$data = db::query("select id,price,sum(num-deal) as nums from move_trade where status=0 and type=2 and market =? group by price order by price asc limit ?;", [$market, $limit]);			mc('mymc_trade_sell_list' . $market . $limit, $data);		}		return $data;	}}