<?phpnamespace ext;use Move\db;class stats{	public function fangwen()	{		$str_time = mktime(0, 0, 0, date('m'), date('d') + 1, date('Y'));		$stats = db::table('sys_stats')->where(['name' => 'fangwen', 'addtime' => $str_time])->find();		if ($stats) {			$data = json_decode($stats['data'], true) + 1;			db::table('sys_stats')->where(['name' => 'fangwen', 'addtime' => $str_time])->save(['data' => json_encode($data)]);		} else {			$data = 1;			db::table('sys_stats')->add(['name' => 'fangwen', 'addtime' => $str_time, 'data' => json_encode($data)]);		}	}	public function xingneng()	{		$fp = popen('top -b -n 2 | grep -E "^(Cpu|Mem|Tasks)"', "r");		$rs = "";		while (!feof($fp)) {			$rs .= fread($fp, 1024);		}		pclose($fp);		$sys_info = explode("\n", $rs);		$tast_info = explode(",", $sys_info[3]);		$cpu_info = explode(",", $sys_info[4]);		$mem_info = explode(",", $sys_info[5]);		$tast_running = trim(trim($tast_info[1], 'running'));		$cpu_usage = trim(trim($cpu_info[0], 'Cpu(s): '), '%us');		$mem_total = trim(trim($mem_info[0], 'Mem: '), 'k total');		$mem_used = trim($mem_info[1], 'k used');		$mem_usage = round(100 * intval($mem_used) / intval($mem_total), 2);		$fp = popen('df -lh | grep -E "^(/)"', "r");		$rs = fread($fp, 1024);		pclose($fp);		$rs = preg_replace("/\s{2,}/", ' ', $rs);		$hd = explode(" ", $rs);		$hd_avail = trim($hd[3], 'G');		$hd_usage = trim($hd[4], '%');		$data = [$cpu_usage, $mem_usage, $hd_avail];		$str_time = mktime(0, 0, 0, date('m'), date('d') + 1, date('Y'));		$stats = db::table('sys_stats')->where(['name' => 'xingneng', 'addtime' => $str_time])->find();		if ($stats) {			db::table('sys_stats')->where(['name' => 'xingneng', 'addtime' => $str_time])->save(['data' => json_encode($data)]);		} else {			db::table('sys_stats')->add(['name' => 'xingneng', 'addtime' => $str_time, 'data' => json_encode($data)]);		}	}} 