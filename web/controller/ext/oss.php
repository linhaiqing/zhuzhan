<?phpnamespace ext;use Move\db;class oss{	const OSS_HOST = 'oss.aliyuncs.com';	private $rootPath;	private $error = '';	private $config = ['access_id' => '', 'access_key' => '', 'bucket' => '', 'timeout' => 90,];	public function __construct($config)	{		$this->config = array_merge($this->config, $config);	}	public function checkRootPath($rootpath)	{		$this->rootPath = trim($rootpath, './') . '/';		return true;	}	public function checkSavePath($savepath)	{		return true;	}	public function mkdir($savepath)	{		return true;	}	public function save($file, $replace = true)	{		$_headers = ['Content-Type: ' . $file['type']];		$resource = fopen($file['tmp_name'], 'r');		$path = $this->rootPath . $file['savepath'] . $file['savename'];		$uri = "/{$this->config['bucket']}{$path}";		$ch = curl_init('http://' . self::OSS_HOST . $uri);		$date = gmdate('D, d M Y H:i:s \G\M\T');		array_push($_headers, "Date: {$date}");		$sign_string = "PUT\n\n" . $file['type'] . "\n" . $date . "\n" . $uri;		$sign = $this->hex_to_base64(hash_hmac('sha1', $sign_string, $this->config['access_key']));		array_push($_headers, 'Authorization: OSS ' . $this->config['access_id'] . ':' . $sign);		fseek($resource, 0, SEEK_END);		$length = ftell($resource);		fseek($resource, 0);		array_push($_headers, "Content-Length: {$length}");		curl_setopt($ch, CURLOPT_CUSTOMREQUEST, "PUT");		curl_setopt($ch, CURLOPT_POST, 1);		curl_setopt($ch, CURLOPT_INFILE, $resource);		curl_setopt($ch, CURLOPT_INFILESIZE, $length);		curl_setopt($ch, CURLOPT_HTTPHEADER, $_headers);		curl_setopt($ch, CURLOPT_TIMEOUT, $this->config['timeout']);		curl_setopt($ch, CURLOPT_HEADER, 1);		curl_setopt($ch, CURLOPT_RETURNTRANSFER, 1);		curl_setopt($ch, CURLOPT_FOLLOWLOCATION, 0);		$response = curl_exec($ch);		$status = curl_getinfo($ch, CURLINFO_HTTP_CODE);		fclose($resource);		if ($status == 200) {			return true;		} else {			$this->error = $response;			return false;		}	}	public function getError()	{		return $this->error;	}	private function hex_to_base64($str)	{		$result = '';		for ($i = 0; $i < strlen($str); $i += 2) {			$result .= chr(hexdec(substr($str, $i, 2)));		}		return base64_encode($result);	}}