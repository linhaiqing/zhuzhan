<?phpnamespace ext\pay;use Move\db;abstract class movepay{	public abstract function submit();	public abstract function notify_url();	public abstract function return_url();	public static $handel = "";	protected $write_log_first = 1;	protected $pay_data;	public function __construct($pay_data)	{		$this->pay_data = $pay_data;	}	public function check_tradeno()	{		$tradeno = $this->pay_data['orderno'];		$res = db::table("finan_pay")->where(["tradeno" => $tradeno])->find();		if (!$res) {			return -1;		} else {			return $res['status'];		}	}	public function success()	{		$this->write_log(@$_SERVER);		$this->write_log(@$_GET);		$this->write_log(@$_POST);		$tradeno = $this->pay_data['orderno'];		$num = $this->pay_data['amount'];		$movepay = md5("movesay");		$res = $this->movepay($tradeno, $num, $movepay);		if ($res == 1) {			return true;		} else {			switch ($res) {				case "-1":					show_msg("movesay md5 error");					break;				case "-2":					show_msg("tradeno md5 error");					break;				case "-3":					show_msg("num md5 error");					break;				case "-4":					show_msg("tradeno not found");					break;				case "-5":					$js_code = '<script>window.setTimeout("window.location=\'/finan/pay.html\'",1000);</script>';					show_msg('订单已成功处理' . $js_code);					break;				case "-6":					show_msg("num err");					break;				case "-7":					show_msg("user not found");					break;				case "-8":					show_msg("user_coin not found");					break;				case "-9":					show_msg("commit fail");					break;			}		}	}	public function write_log($data)	{		return;		if (empty($data)) {			return;		}		if (!is_array($data)) {			$data = [$data];		}		$logPayDir = config("MS_CACHE") . "/log/pay/";		if (!file_exists($logPayDir)) {			mkdir($logPayDir, 0777);		}		$file = $logPayDir . date('Ymd') . '.log';		$time = date('Y-m-d H:i:s');		$ip = $this->get_ip();		$data = empty($data) ? "" : var_export($data, true) . PHP_EOL;		if ($this->write_log_first) {			$logFormat = "IP:$ip Date:$time" . PHP_EOL . $data;			$this->write_log_first = 0;		} else {			$logFormat = PHP_EOL . $data;		}		file_put_contents($file, PHP_EOL . $logFormat . PHP_EOL, FILE_APPEND);	}	public function get_ip()	{		$ip = false;		if (!empty($_SERVER["HTTP_CLIENT_IP"])) {			$ip = $_SERVER["HTTP_CLIENT_IP"];		}		if (!empty($_SERVER['HTTP_X_FORWARDED_FOR'])) {			$ips = explode(", ", $_SERVER['HTTP_X_FORWARDED_FOR']);			if ($ip) {				array_unshift($ips, $ip);				$ip = FALSE;			}			for ($i = 0; $i < count($ips); $i++) {				if (!preg_match("^(10|172\.16|192\.168)\.", $ips[$i])) {					$ip = $ips[$i];					break;				}			}		}		return ($ip ? $ip : $_SERVER['REMOTE_ADDR']);	}	protected function movepay($tradeno = null, $num = null, $movepay = null)	{		if (!$tradeno) {			return -2;		} else {			$tradeno = strtoupper($tradeno);		}		if (!$num) {			return -3;		}		$config = md('sys_config')->lists();		$rs = [];		$send = [];		db::exec("set autocommit=0");		db::exec("lock tables #pre#finan_pay write ,#pre#user write ,#pre#user_coin write,#pre#user_invit write");		$finan_pay = db::table("finan_pay")->where(["tradeno" => $tradeno])->find();		if (!$finan_pay) {			db::exec("unlock tables");			return -4;		}		if ($finan_pay["status"] != 0 && $finan_pay["status"] != 3) {			db::exec("unlock tables");			return -5;		}		if ($finan_pay["num"] != $num) {			db::exec("unlock tables");			return -6;		}		$user = db::table("user")->where(["id" => $finan_pay["userid"]])->find();		if (!$user) {			db::exec("unlock tables");			return -7;		}		$user_coin = db::table("user_coin")->where(["userid" => $finan_pay["userid"]])->find();		if (!$user_coin) {			db::exec("unlock tables");			return -8;		}		$invit_fee = 0;		$invit_1 = 0;		$invit_2 = 0;		$invit_3 = 0;		if (isset($config["pay_invit"]) && $config["pay_invit"] && isset($config["pay_coin"]) && $config["pay_coin"]) {			if ($config["pay_invit_1"] > 0) {				$invit_1 = num((floor($finan_pay["num"]) / 100 * $config["pay_invit_1"]), 2);			}			if ($config["pay_invit_2"] > 0) {				$invit_2 = num((floor($finan_pay["num"]) / 100 * $config["pay_invit_2"]), 2);			}			if ($config["pay_invit_3"] > 0) {				$invit_3 = num((floor($finan_pay["num"]) / 100 * $config["pay_invit_3"]), 2);			}			if ($config["pay_invit_fee"] > 0) {				$invit_fee = num((floor($finan_pay["num"]) / 100 * $config["pay_invit_fee"]), 2);			}		}		$rs[] = db::table("user_coin")->where(["userid" => $finan_pay["userid"]])->setInc("cny", $finan_pay["num"]);		$rs[] = db::table("finan_pay")->where(["id" => $finan_pay["id"]])->save(["status" => 1, "mum" => $finan_pay["num"], "endtime" => time()]);		if (isset($config["pay_coin"]) && $invit_fee > 0 && $config["pay_coin"]) {			$send[] = db::table("user_coin")->where(["userid" => $finan_pay["userid"]])->setInc($config["pay_coin"], $invit_fee);			$send[] = db::table("user_invit")->add(["userid" => $finan_pay["userid"], "invit" => 0, "name" => "充值赠送", "type" => "充值赠送", "num" => $finan_pay["num"], "fee" => $invit_fee, "feecoin" => $config["pay_coin"], "addtime" => time(), "status" => 1]);		}		if (isset($config["pay_coin"]) && $invit_1 > 0 && $user["invit_1"] && $config["pay_coin"]) {			$send[] = db::table("user_coin")->where(["userid" => $user["invit_1"]])->setInc($config["pay_coin"], $invit_1);			$send[] = db::table("user_invit")->add(["userid" => $user["invit_1"], "invit" => $user["id"], "name" => "一代充值赠送", "type" => "充值赠送", "num" => $finan_pay["num"], "fee" => $invit_1, "feecoin" => $config["pay_coin"], "addtime" => time(), "status" => 1]);		}		if (isset($config["pay_coin"]) && $invit_2 > 0 && $user["invit_2"] && $config["pay_coin"]) {			$send[] = db::table("user_coin")->where(["userid" => $user["invit_2"]])->setInc($config["pay_coin"], $invit_2);			$send[] = db::table("user_invit")->add(["userid" => $user["invit_2"], "invit" => $user["id"], "name" => "二代充值赠送", "type" => "充值赠送", "num" => $finan_pay["num"], "fee" => $invit_2, "feecoin" => $config["pay_coin"], "addtime" => time(), "status" => 1]);		}		if (isset($config["pay_coin"]) && $invit_3 > 0 && $user["invit_3"] && $config["pay_coin"]) {			$send[] = db::table("user_coin")->where(["userid" => $user["invit_3"]])->setInc($config["pay_coin"], $invit_3);			$send[] = db::table("user_invit")->add(["userid" => $user["invit_3"], "invit" => $user["id"], "name" => "三代充值赠送", "type" => "充值赠送", "num" => $finan_pay["num"], "fee" => $invit_3, "feecoin" => $config["pay_coin"], "addtime" => time(), "status" => 1]);		}		if (check_arr($rs)) {			db::exec("commit");			db::exec("unlock tables");			return 1;		} else {			db::exec("rollback");			db::exec("unlock tables");			return -9;		}	}}