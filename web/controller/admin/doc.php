<?phpnamespace admin;use Move\db;class doc extends admin{	public function __construct()	{		parent::__construct();		if (!$this->is_game('doc')) {			ajax('这个应用你没有购买');		}	}	public function index()	{		$builder = new builder("doc");		$builder->title('文档管理', '这里是文档管理', '文档列表', '/doc/index')->button('add', '添加', '/doc/edit')->button('no', '禁用', '/doc/status/type/0')->button('off', '启用', '/doc/status/type/1')->button('del', '删除', '/doc/status/type/-1')->search('addtime_str', '开始时间', 'time')->search('addtime_end', '结束时间', 'time')->search('order', ['id_desc' => 'ID降序', 'id_asc' => 'ID升序', 'sort_desc' => '索引降序', 'sort_asc' => '索引升序', 'addtime_desc' => '时间降序', 'addtime_asc' => '时间升序',], 'select')->search('status', ['0' => '全部状态', '1' => '禁用', '2' => '启用'], 'select')->search('field', ['title' => '标题',], 'select')->search('name', '请输入查询内容', 'text')->key('id', 'ID', 'text')->key('username', '发布人', 'text')->key('type_id', '类型', 'link', [['type' => 'button', 'url' => '/doc/type/field/id/name/###', 'title' => ['from_id' => 'type_id', 'table' => 'doc_type', 'to_id' => 'id', 'title' => 'title'], 'field' => 'username', 'color' => '',]])->key('lang', '语言', 'link', [['type' => 'button', 'url' => '/doc/lang_type/field/name/name/###', 'title' => ['from_id' => 'lang', 'table' => 'sys_lang_type', 'to_id' => 'name', 'title' => 'title'], 'field' => 'lang', 'color' => '',]])->key('title', '标题', 'text')->key('sort', '排序', 'text')->key('addtime', '添加时间', 'time')->key('endtime', '更新时间', 'time')->key('status', '状态', 'select', [0 => '<span style="color:#DA9151;">禁用</span>', 1 => '<span style="color:#3498db;">启用</span>'])->key("ext", '操作', 'link', [['type' => 'button3', 'url' => '/doc/edit/id/###', 'title' => '编辑', 'field' => 'id', 'color' => '',],])->lists();	}	public function edit()	{		if (empty($_POST)) {			$id = input('get.id');			$builder = new builder("doc", ["id" => $id], "edit");			$builder->title(($id ? '编辑文档' : '添加文档'), ($id ? '这里是编辑文档' : '这里是添加文档'), '文档管理', '/doc/index');			if ($id) {				$builder->key('id', '编号', 'readonly', '', '数据编号');				$builder->key('id', '编号', 'hidden', '', '数据编号');			}			$builder->key('username', '发布人', 'select', 'admin_c_username_c_username', '名称');			$builder->key('title', '标题', 'text', '', '标题 (全部)');			$builder->key('type_id', '类型', 'select', 'doc_type_c_id_c_title', '类型');			$builder->key('lang', '语言', 'select', 'sys_lang_type_c_name_c_title', '语言');			$builder->key('sort', '排序', 'text', '', '排序 (只能数字)');			$builder->key('value', '内容', 'thinker', '', '内容 (全部)');			$builder->key('addtime', '添加时间', 'time', '', '添加时间 (只能时间)  不填会增自动生成');			$builder->key('status', '状态', 'select', [0 => '禁用', 1 => '启用'], '状态')->edit();		} else {			if (APP_DEMO) {				ajax('测试站暂时不能修改');			}			$data['title'] = iv('post.title', '', '标题格式错误', 1);			$data['type_id'] = iv('post.type_id', 'd', '类型格式错误', 1);			$data['lang'] = iv('post.lang', 'a', '语言格式错误', 1);			$data['sort'] = iv('post.sort', 'd', '排序格式错误 只能是数字', 1);			$data['value'] = iv('post.value');			$data['addtime'] = iv('post.addtime', 'time', '添加时间格式错误', 1);			$data['status'] = iv('post.status', 'd', '状态格式错误', 1);			$id = iv('post.id', 'd', '参数错误', 1);			$data['username'] = iv('post.username', 'a', '发布人格式错误');			if (!$data['addtime']) {				$data['addtime'] = time();			}			if ($id) {				$res = db::table('doc')->where(['id' => $id])->save($data);			} else {				$res = db::table('doc')->add($data);			}			if ($res) {				ajax('操作成功', 1);			} else {				ajax('操作失败');			}		}	}	public function status()	{		if (APP_DEMO) {			ajax('测试站暂时不能修改');		}		$id = input('post.id');		$type = input('get.type');		$builder = new builder();		$res = $builder->set_status($id, $type, 'doc');		if (isset($res[1])) {			ajax('操作成功', 1);		} else {			ajax('操作失败');		}	}	public function type()	{		$builder = new builder("doc_type");		$builder->title('文档类型', '这里是文档类型', '类型列表', '/doc/type')->button('add', '添加', '/doc/type_edit')->button('no', '禁用', '/doc/type_status/type/0')->button('off', '启用', '/doc/type_status/type/1')->button('del', '删除', '/doc/type_status/type/-1')->search('addtime_str', '开始时间', 'time')->search('addtime_end', '结束时间', 'time')->search('order', ['id_desc' => 'ID降序', 'id_asc' => 'ID升序', 'sort_desc' => '索引降序', 'sort_asc' => '索引升序', 'addtime_desc' => '时间降序', 'addtime_asc' => '时间升序',], 'select')->search('status', ['0' => '全部状态', '1' => '禁用', '2' => '启用'], 'select')->search('field', ['name' => '名称', 'title' => '标题',], 'select')->search('name', '请输入查询内容', 'text')->key('id', 'ID', 'text')->key('title', '标题', 'text')->key('type', '类型', 'select', [1 => '普通文档', 2 => '底部文档', 3 => '帮助文档'])->key('sort', '排序', 'text')->key('addtime', '添加时间', 'time')->key('endtime', '更新时间', 'time')->key('status', '状态', 'select', [0 => '<span style="color:#DA9151;">禁用</span>', 1 => '<span style="color:#3498db;">启用</span>'])->key("ext", '操作', 'link', [['type' => 'button3', 'url' => '/doc/type_edit/id/###', 'title' => '编辑', 'field' => 'id', 'color' => '',],])->lists();	}	public function type_edit()	{		if (empty($_POST)) {			$id = input('get.id');			$builder = new builder("doc_type", ["id" => $id], "edit");			$builder->title(($id ? '编辑文档类型' : '添加文档类型'), ($id ? '这里是编辑文档类型' : '这里是添加文档类型'), '文档类型管理', '/doc/type')->key('id', '编号', 'readonly', '', '数据编号')->key('id', '编号', 'hidden', '', '数据编号')->key('name', '名称', 'text', '', '名称 (只能字母)')->key('type', '类型', 'select', [1 => '普通文档', 2 => '底部文档', 3 => '帮助文档'], '类型')->key('sy', '首页显示', 'select', [1 => '显示', 0 => '不显示'], '首页显示')->key('title', '标题', 'text', '', '标题 (全部)')->key('sort', '排序', 'text', '', '排序 (只能数字)')->key('addtime', '添加时间', 'time', '', '添加时间 (只能时间)')->key('endtime', '更新时间', 'time', '', '更新时间 (只能时间)')->key('status', '状态', 'select', [0 => '禁用', 1 => '启用'], '状态')->edit();		} else {			if (APP_DEMO) {				ajax('测试站暂时不能修改');			}			$data['name'] = iv('post.name', 'w', '名称格式错误', 1);			$data['title'] = iv('post.title', 'a', '标题格式错误', 1);			$data['type'] = iv('post.type', 'd', '类型 格式错误', 1);			$data['sy'] = iv('post.sy', 'd', '首页显示 格式错误', 1);			$data['sort'] = iv('post.sort', 'a', '排序格式错误', 1);			$data['addtime'] = iv('post.addtime', 'time', '添加时间格式错误', 1);			$data['endtime'] = iv('post.endtime', 'time', '更新时间格式错误', 1);			$data['status'] = iv('post.status', 'd', '状态格式错误', 1);			$id = iv('post.id');			if (!$data['addtime']) {				$data['addtime'] = time();			}			if (!$data['endtime']) {				$data['endtime'] = time();			}			if ($id) {				$res = db::table('doc_type')->where(['id' => $id])->save($data);			} else {				$res = db::table('doc_type')->add($data);			}			if ($res) {				ajax('操作成功', 1);			} else {				ajax('操作失败');			}		}	}	public function type_status()	{		if (APP_DEMO) {			ajax('测试站暂时不能修改');		}		$id = input('post.id');		$type = input('get.type');		$builder = new builder();		$res = $builder->set_status($id, $type, 'doc_type');		if (isset($res[1])) {			ajax('操作成功', 1);		} else {			ajax('操作失败');		}	}}