<?phpnamespace admin;use Move\db;use Move\mvc\controller;class login extends controller{	public function __construct()	{		parent::__construct();	}	public function code()	{		verify();	}	public function index()	{		$conf = include(APP_PATH . "/conf/base.php");		if (isset($conf['admin_ip']) && $conf['admin_ip']) {			$ip = get_ip();			if (!in_array($ip, $conf['admin_ip'])) {				$path = APP_PATH . "/runtime/debug/admin_ip.txt";				@file_put_contents($path, $ip);				redirect('/index/index');			}		}		defined('ADMIN_KEY') or define('ADMIN_KEY', '');		if (ADMIN_KEY) {			$move_key = iv('get.movesay');			if ($move_key != ADMIN_KEY) {				redirect('/index/index');			}		}		session("admin_auth", 1);		if (session("admin_id")) {			redirect('/admin/index/index');		}		$this->assign('token', token('admin_login'));		$this->display();	}	public function up()	{		if (!session('admin_login')) {			ajax('非法访问');		}		$token = iv("post.token", 'dw', '令牌错误');		if (!$token || $token != session('admin_login')) {			ajax('恶意访问');		}		if (!session("admin_auth")) {			ajax('非法访问');		}		$verify = input("post.verify");		if (!verify($verify, "1")) {			ajax('验证码输入错误');		}		$username = iv("post.username", "username", "用户名格式错误");		$password = iv("post.password", "password", "密码格式错误");		if (check($username, "username")) {			$remark = "通过用户名登录";			$user = db::table("admin")->where(["username" => $username])->find();		}		if (!$user && check($username, "moble")) {			$remark = "通过手机号登录";			$user = db::table("admin")->where(["moble" => $username])->find();		}		if (!$user && check($username, "email")) {			$remark = "通过邮箱登录";			$user = db::table("admin")->where(["email" => $username])->find();		}		if (empty($user) || !is_array($user)) {			ajax('用户不存在');		}		if (!$user["status"]) {			ajax('用户已禁用');		}		if ($user["password"] != hashs($password)) {			ajax("登录账户或密码错误");		}		$ip = get_ip();		if (isset($user["admin_ip"]) && $user["admin_ip"]) {			if (!in_array($ip, explode("|", $user["admin_ip"]))) {				ajax("您的IP禁止登录");			}		}		if (isset($user["admin_yidi"]) && $user["admin_yidi"]) {			$zui_hou = db::table("admin_log")->where(['userid' => $user['id']])->order("id desc")->find();			if ($zui_hou) {				if (isset($zui_hou['addip']) && $zui_hou['addip'] && $zui_hou['addip'] != $ip) {					session("admin_id_yidi", 1);				}			}		}		$res = db::table("admin_log")->add(["userid" => $user['id'], "type" => "登录", "remark" => $remark, "addip" => $ip, "addr" => get_city($ip), "sort" => 0, "addtime" => time(), "endtime" => time(), "status" => 1]);		if ($res) {			session('admin_login', null);			session("admin_id", $user["id"]);			session("admin_username", $user["username"]);			session("admin_id_xss" . session("admin_id"), md5(session("admin_id") . get_ip()));			ajax('登录成功', 1);		} else {			ajax('登录失败');		}	}	public function loginout()	{		if (!session("admin_auth")) {			redirect('/index/index');		}		session("admin_id", null);		session('lock_screen', null);		session('lock_screen_time', null);		redirect('/admin/login/index');	}	public function lock_screen()	{		if (!session("admin_auth")) {			ajax('非法请求');		}		if (empty($_POST)) {			$this->display();		} else {			$pass = trim(iv('post.pass'));			if ($pass) {				session('lock_screen', $pass);				session('lock_screen_time', 3);				ajax('锁屏成功,正在跳转中...', 1);			} else {				ajax('请输入一个锁屏密码');			}		}	}	public function unlock()	{		if (!session("admin_auth")) {			ajax('非法请求');		}		if (!session('admin_id')) {			session("admin_id", null);			ajax('登录已经失效,请重新登录...');		}		if (session('lock_screen_time') < 0) {			session("admin_id", null);			ajax('密码错误过多,请重新登录...');		}		$pass = trim(iv('post.pass'));		if ($pass == session('lock_screen')) {			session('lock_screen', null);			ajax('解锁成功', 1);		}		$admin = db::table('admin')->where(['id' => session('admin_id')])->find();		if ($admin['password'] == hashs($pass)) {			session('lock_screen', null);			ajax('解锁成功', 1);		}		session('Lock_screen_time', session('Lock_screen_time') - 1);		ajax('用户名或密码错误');	}	public function yidi()	{		if (!session("admin_id_yidi")) {			redirect('/admin/index/index');		}		$this->assign('token', token('admin_yidi'));		$this->display();	}	public function yidi_up()	{		if (!session("admin_yidi")) {			ajax('非法请求');		}		$token = iv("post.token", 'dw', '令牌错误');		$code = iv("post.code", 'd', '短信格式错误');		if (!$token || $token != session('admin_yidi')) {			ajax('恶意访问');		}		if (!$code || $code != session('admin_yidi_sms_code')) {			ajax('短信错误');		}		session("admin_id_yidi", null);		session('admin_yidi_sms_code', null);		session('admin_yidi', null);		ajax('验证成功', 1);	}	public function yidi_sms()	{		if (!session("admin_yidi")) {			ajax('非法请求');		}		$token = iv("post.token", 'dw', '令牌错误');		if (!$token || $token != session('admin_yidi')) {			ajax('恶意访问');		}		$moble = md('sys_config')->get('qt_moble');		if (!$moble) {			ajax('系统没有配置安全手机');		}		$code = rand(111111, 999999);		$sms = new \ext\sms();		if ($sms->send("+86|" . $moble, $code, "sms", 'jiankong')) {			session('admin_yidi_sms_code', $code);			ajax("短信发送成功", 1);		} else {			ajax('短信发送失败');		}	}} 