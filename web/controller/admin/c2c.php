<?phpnamespace admin;use Move\db;class c2c extends admin{	public function __construct()	{		parent::__construct();	}	public function index()	{		$builder = new builder("c2c_pro");		$builder->title('挂单管理', '挂单管理列表', '/c2c_pro/index')->button('no', '撤销', '/c2c/trade_cancel/type/1')->button('off', '启用', '/c2c/status/type/1')->button('del', '删除', '/c2c//status/type/-1')->search('addtime_str', '开始时间', 'time')->search('addtime_end', '结束时间', 'time')->search('order', ['id_desc' => 'ID降序', 'id_asc' => 'ID升序', 'sort_desc' => '索引降序', 'sort_asc' => '索引升序', 'addtime_desc' => '时间降序', 'addtime_asc' => '时间升序',], 'select')->search('status', ['0' => '待审核', '1' => '启用', '2' => '达成意向'], 'select')->search('field', ['coin_c_coin_c_name_c_title' => '币种类型',], 'select')->search('name', '请输入查询内容', 'text')->key('id', 'ID', 'text')->key('coin', '币种', 'text')->key('userid', '用户名', 'link', [['type' => 'button', 'url' => '/user/edit/id/###', 'title' => ['from_id' => 'userid', 'table' => 'user', 'to_id' => 'id', 'title' => 'username'], 'field' => 'userid', 'color' => '',]])->key('type', '交易类型', 'select', [1 => '卖出', 2 => '买入'])->key('quid', '交易区', 'link', [['type' => 'button', 'url' => '/c2c/qu_edit/id/###', 'title' => ['from_id' => 'quid', 'table' => 'c2c_qu', 'to_id' => 'id', 'title' => 'coin'], 'field' => 'quid', 'color' => '#DE211D',]])->key('paytype', '付款方式', 'text')->key('price', '价格', 'text')->key('num', '数量', 'text')->key('mum', '总价', 'text')->key('addtime', '添加时间', 'time')->key('endtime', '更新时间', 'time')->key('status', '状态', 'select', [0 => '<span style="color:red;">需要审核</span>', 1 => '<span style="color:#3498db;">挂单中</span>', 2 => '<span style="color:chartreuse;">交易中</span>', 3 => '<span style="color:deepskyblue;">已汇款</span>', 4 => '<span style="color:limegreen;">交易完成</span>', 5 => '<span style="color:darkred;">交易撤销</span>'])->key("ext", '操作', 'link', [['type' => 'button3', 'url' => '/c2c/edit/id/###', 'title' => '审核', 'field' => 'id', 'color' => '',],])->lists();	}	public function edit()	{		if (empty($_POST)) {			$id = input('get.id');			$builder = new builder("c2c_pro", ["id" => $id], "edit");			$builder->title(($id ? '编辑挂单' : '编辑挂单'), '挂单管理', '这里是挂单管理', '/c2c/index');			if ($id) {				$builder->key('id', '编号', 'readonly', '', '数据编号');				$builder->key('id', '编号', 'hidden', '', '数据编号');			}			$builder->key('coin', '币种', 'readonly', 'coin_c_name_c_title', '');			$builder->key('payinfo', '付款信息', 'text', '', '付款信息的Json串(不需要修改请勿动)');			$builder->key('tel', '联系方式', 'text', '', '');			$builder->key('sort', '排序', 'text', '', '');			$builder->key('endtime', '修改时间', 'time', '', '修改时间 (只能时间)  不填会增自动生成');			$builder->key('status', '状态', 'select', [0 => '不通过', 1 => '通过审核'], '状态')->edit();		} else {			if (APP_DEMO) {				ajax('测试站暂时不能修改');			}			$data['payinfo'] = iv('post.payinfo');			$data['tel'] = iv('post.tel', 'd', '电话格式错误 只能是数字', 1);			$data['sort'] = iv('post.sort', 'd', '排序格式错误 只能是数字', 1);			$data['endtime'] = iv('post.endtime', 'time', '添加时间格式错误', 1);			$data['status'] = iv('post.status', 'd', '状态格式错误', 1);			$id = iv('post.id', 'd', '参数错误', 1);			$pro = db::table('c2c_pro')->where(['id' => $id])->find();			if ($pro['status'] != 0) {				ajax('状态值异常');			}			$res = db::table('c2c_pro')->where(['id' => $id])->save($data);			if ($res) {				ajax('操作成功', 1);			} else {				ajax('操作失败');			}		}	}	public function status()	{		if (APP_DEMO) {			ajax('测试站暂时不能修改');		}		$id = input('post.id');		$type = input('get.type');		$builder = new builder();		$res = $builder->set_status($id, $type, 'c2c_pro');		if (isset($res[1])) {			ajax('操作成功', 1);		} else {			ajax('操作失败');		}	}	public function qu_status()	{		if (APP_DEMO) {			ajax('测试站暂时不能修改');		}		$id = input('post.id');		$type = input('get.type');		$builder = new builder();		$res = $builder->set_status($id, $type, 'c2c_qu');		if (isset($res[1])) {			ajax('操作成功', 1);		} else {			ajax('操作失败');		}	}	public function qu()	{		$builder = new builder("c2c_qu");		$builder->title('市场分区', '市场分区列表', "市场分区", '/c2c/qu')->button('add', '添加', '/c2c/qu_edit')->button('no', '禁用', '/c2c/qu_status/type/0')->button('off', '启用', '/c2c/qu_status/type/1')->button('del', '删除', '/c2c/qu_status/type/-1')->search('addtime_str', '开始时间', 'time')->search('addtime_end', '结束时间', 'time')->search('order', ['id_desc' => 'ID降序', 'id_asc' => 'ID升序', 'sort_desc' => '索引降序', 'sort_asc' => '索引升序', 'addtime_desc' => '时间降序', 'addtime_asc' => '时间升序',], 'select')->search('status', ['0' => '全部状态', '1' => '禁用', '2' => '启用'], 'select')->search('field', ['coin' => '币种类型', 'userid_c_user_c_id_c_username' => '用户名',], 'select')->search('name', '请输入查询内容', 'text')->key('id', 'ID', 'text')->key('coin', '币种', 'text')->key('coin_fee_kai', '手续费状态', 'select', [1 => '<span style="color:#DA9151;">启用</span>', 0 => '<span style="color:#3498db;">禁用</span>'])->key('coin_fee', '手续费%', 'text')->key('check_kai', '审核开关', 'select', [1 => '<span style="color:#DA9151;">启用</span>', 0 => '<span style="color:#3498db;">禁用</span>'])->key('addtime', '添加时间', 'time')->key('status', '状态', 'select', [1 => '<span style="color:#DA9151;">启用</span>', 0 => '<span style="color:#3498db;">禁用</span>'])->key("ext", '操作', 'link', [['type' => 'button3', 'url' => '/c2c/qu_edit/id/###', 'title' => '编辑', 'field' => 'id', 'color' => 'green',],])->lists();	}	public function qu_edit()	{		if (empty($_POST)) {			$id = input('get.id');			$builder = new builder("c2c_qu", ["id" => $id], "edit");			$builder->title(($id ? '编辑交易区' : '编辑交易区'), '交易区管理', '这里是交易区管理', '/c2c/qu_edit');			if ($id) {				$builder->key('id', '编号', 'readonly', '', '数据编号');				$builder->key('id', '编号', 'hidden', '', '数据编号');			}			$builder->key('coin', '币种', 'select', 'coin_c_name_c_title', '');			$builder->key('coin_fee_kai', '手续费开关', 'select', [1 => '开启', 0 => '关闭'], '');			$builder->key('coin_fee', '该币种的手续费', 'text', '', '%');			$builder->key('check_kai', '审核开关', 'select', [1 => '开启', 0 => '关闭'], '');			$builder->key('content', '交易规则说明', 'editor', '', '');			$builder->key('sort', '排序', 'text', '', '');			$builder->key('addtime', '修改时间', 'time', '', '修改时间 (只能时间)  不填会增自动生成');			$builder->key('status', '状态', 'select', [1 => '启用', 0 => '禁用'], '状态')->edit();		} else {			if (APP_DEMO) {				ajax('测试站暂时不能修改');			}			$data['coin'] = iv('post.coin', 'w', '币种格式错误 只能是数字', 1);			$data['coin_fee_kai'] = iv('post.coin_fee_kai', 'd', '开关格式错误 只能是数字', 1);			$data['coin_fee'] = iv('post.coin_fee', 'xnb', '手续费格式错误', 1);			$data['check_kai'] = iv('post.coin_fee_kai', 'd', '开关格式错误 只能是数字', 1);			$data['content'] = iv('post.content');			$data['sort'] = iv('post.sort', 'd', '币种格式错误 只能是数字', 1);			$data['addtime'] = iv('post.addtime', 'time', '添加时间格式错误', 1);			$data['status'] = iv('post.status', 'd', '状态格式错误', 1);			$id = iv('post.id', 'd', '参数错误', 1);			if ($data['coin_fee_kai'] == 1 && $data['coin_fee'] <= 0) {				ajax('手续费未配置');			}			if (!$data['addtime']) {				$data['addtime'] = time();			}			if ($id) {				$res = db::table('c2c_qu')->where(['id' => $id])->save($data);			} else {				$res = db::table('c2c_qu')->add($data);			}			if ($res) {				ajax('操作成功', 1);			} else {				ajax('操作失败');			}		}	}	public function log()	{		$builder = new builder("c2c_log");		$builder->title('市场成交记录', '市场成交记录列表', '/c2c/log')->button('no', '强制确认', '/c2c/sure/type/0')->button('off', '强制撤销', '/c2c/cancel/type/1')->search('addtime_str', '开始时间', 'time')->search('addtime_end', '结束时间', 'time')->search('order', ['id_desc' => 'ID降序', 'id_asc' => 'ID升序', 'sort_desc' => '索引降序', 'sort_asc' => '索引升序', 'addtime_desc' => '时间降序', 'addtime_asc' => '时间升序',], 'select')->search('status', ['0' => '全部状态', '1' => '禁用', '2' => '启用'], 'select')->search('field', ['coin' => '币种类型', 'userid_c_user_c_id_c_username' => '用户名',], 'select')->search('name', '请输入查询内容', 'text')->key('id', 'ID', 'text')->key('coin', '成交币种', 'text')->key('userid', '挂单用户', 'link', [['type' => 'button', 'url' => '/user/edit/id/###', 'title' => ['from_id' => 'userid', 'table' => 'user', 'to_id' => 'id', 'title' => 'username'], 'field' => 'userid', 'color' => '',]])->key('peerid', '买单用户', 'link', [['type' => 'button', 'url' => '/user/edit/id/###', 'title' => ['from_id' => 'peerid', 'table' => 'user', 'to_id' => 'id', 'title' => 'username'], 'field' => 'peerid', 'color' => '',]])->key('mum', '发布数量', 'text')->key('price', '价格', 'text')->key('num', '购买数量', 'text')->key('addtime', '最后操作时间', 'time')->key('type', '买卖类型', 'select', [1 => '<span style="color:#DA9151;">卖出</span>', 2 => '<span style="color:#3498db;">买入</span>'])->key('status', '状态', 'select', [2 => '<span style="color:#DA9151;">等待转账</span>', 3 => '<span style="color:#3498db;">等待确认</span>', 4 => '<span style="color:#3498db;">交易完成</span>', 5 => '<span style="color:darkred;">交易撤销</span>'])->lists();	}	public function sure()	{		if (APP_DEMO) {			ajax('测试站暂时不能修改');		}		$id = $_POST['id'][0];		$log = db::table('c2c_log')->where(['id' => $id])->find();		$qu = db::table('c2c_qu')->where(['coin' => $log['coin']])->find();		if ($log['status'] != 3) {			ajax('状态异常,当前状态为' . $log['status']);		}		if (isset($qu['coin_fee_kai']) && isset($qu['coin_fee']) && $qu['coin_fee_kai'] == 1 && $qu['coin_fee'] > 0) {			$coinFee = $log['num'] * ($qu['coin_fee'] / 100);			$fee = $log['num'] - $coinFee;		} else {			$fee = $log['num'];		}		$rs = [];		$re = 0;		if ($log['type'] == 1) {			$re = db::table('user_coin')->where(['userid' => $log['peerid']])->set([$log['coin'] . '#+' => $fee]);		} elseif ($log['type'] == 2) {			$re = db::table('user_coin')->where(['userid' => $log['userid']])->set([$log['coin'] . '#+' => $fee]);		}		if ($re) {			$rs[] = db::table('c2c_log')->where(['id' => $id])->save(['status' => 4]);			$rs[] = db::table('c2c_pro')->where(['id' => $log['proid']])->save(['status' => 4, 'endtime' => time()]);			if (check_arr($rs)) {				ajax('操作成功', 1);			} else {				ajax('操作失败');			}		} else {			ajax('钱包操作异常');		}	}	public function cancel()	{		$id = $_POST['id'][0];		$log = db::table('c2c_log')->where(['id' => $id])->find();		$pro = db::table('c2c_pro')->where(['id' => $log['proid']])->find();		if ($log['status'] == 4 || $log['status'] == 5) {			ajax('该订单已无法撤销');		}		$rs = [];		$re = 0;		if ($log['type'] == 2) {			$re = db::table('user_coin')->where(['userid' => $log['peerid']])->set([$log['coin'] . '#+' => $log['fee']]);		} elseif ($log['type'] == 1) {			$re = db::table('user_coin')->where(['userid' => $log['userid']])->set([$log['coin'] . '#+' => $pro['fee']]);		}		if ($re) {			$rs[] = db::table('c2c_log')->where(['id' => $id])->save(['status' => 5]);			$rs[] = db::table('c2c_pro')->where(['id' => $log['proid']])->save(['status' => 5, 'endtime' => time()]);			if (check_arr($rs)) {				ajax('操作成功', 1);			} else {				ajax('操作失败');			}		} else {			ajax('钱包操作异常');		}	}	public function trade_cancel()	{		$id = $_POST['id'];		$pro = db::table('c2c_pro')->where(['id#in' => $id])->select();		$rs = [];		foreach ($pro as $k => $v) {			if ($v['status'] != 1) {				ajax('该订单已无法撤销');			}			$re = 0;			if ($v['type'] == 1) {				$fee = $v['fee'];				$re = db::table('user_coin')->where(['userid' => $v['userid']])->set([$v['coin'] . '#+' => $fee]);			} else {				$re = 1;			}			if ($re) {				$rs[] = db::table('c2c_pro')->where(['id' => $v['id']])->save(['status' => 5, 'endtime' => time()]);			}		}		if (check_arr($rs)) {			ajax('操作成功', 1);		} else {			ajax('操作失败');		}	}}