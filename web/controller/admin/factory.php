<?phpnamespace admin;use Move\db;class factory extends admin{	public function __construct()	{		parent::__construct();		if (!$this->is_game('factory')) {			ajax('这个应用你没有购买');		}	}	public function index()	{		$builder = new builder("factory_proterty", ["type" => 1]);		$builder->title('养殖工厂', '这里是养殖工厂', '养殖列表', '/factory/index')->button('no', '禁用', '/factory/status/type/0')->button('off', '启用', '/factory/status/type/2')->button('del', '删除', '/factory/status/type/-1')->search('field', ['userid' => '用户ID',], 'select')->search('userid', '请输入查询内容', 'text')->key('id', '编号', 'text')->key('protertyName', '生产工具', 'text')->key('userid', '用户名', 'link', [['type' => 'button', 'url' => '/user/index/field/id/name/###', 'title' => ['from_id' => 'userid', 'table' => 'user', 'to_id' => 'id', 'title' => 'username'], 'field' => 'userid', 'color' => '',]])->key('life', '剩余寿命', 'text')->key('status', '状态', 'select', [0 => "禁用", 1 => "工作中", 2 => "空闲"])->lists();	}	public function goodsManage()	{		$builder = new builder("factory_goods");		$builder->title('养殖工厂', '这里是市场商品管理', '养殖列表', '/factory/goodsManage')->button('add', '添加', '/factory/goodsManage_add')->button('no', '禁用', '/factory/goodsStatus/type/0')->button('off', '启用', '/factory/goodsStatus/type/1')->button('del', '删除', '/factory/goodsStatus/type/-1')->key('id', '编号', 'text')->key('goodsName', '商品名称', 'text')->key('leftNum', '库存', 'text')->key('type', '类别', 'text')->key('price', '售价', 'text')->key('coin', '币种', 'text')->key('lifeLength', '总寿命', 'text')->key('food', '食物名', 'text')->key('feedCycle', '喂食(收获)周期', 'text')->key('feedNum', '喂食数量', 'text')->key('productName', '产品名', 'text')->key('productNum', '产量', 'text')->key('productPrice', '产量售价', 'text')->key('productPrice', '产品售价币种', 'text')->key('status', '状态', 'select', [-1 => "已删除", 1 => "销售中", 0 => "已禁用"])->key("ext", '操作', 'link', [['type' => 'button3', 'url' => '/factory/goodsManage_edit/id/###', 'title' => '编辑', 'field' => 'id', 'color' => '',]])->lists();	}	public function foodManage()	{		$builder = new builder("factory_proterty", ["type" => 2]);		$builder->title('养殖工厂', '这里是养殖工厂', '养殖饲料列表', '/factory/index')->button('no', '禁用', '/factory/status/type/0')->button('off', '启用', '/factory/status/type/1')->button('del', '删除', '/factory/status/type/-1')->search('field', ['userid' => '用户ID',], 'select')->search('userid', '请输入查询内容', 'text')->key('id', '编号', 'text')->key('protertyName', '饲料名', 'text')->key('num', '剩余数量', 'text')->key('userid', '用户名', 'link', [['type' => 'button', 'url' => '/user/index/field/id/name/###', 'title' => ['from_id' => 'userid', 'table' => 'user', 'to_id' => 'id', 'title' => 'username'], 'field' => 'userid', 'color' => '',]])->key('status', '状态', 'select', [0 => "禁用", 1 => "有效"])->key("ext", '操作', 'link', [['type' => 'button3', 'url' => '/factory/food_edit/id/###', 'title' => '编辑', 'field' => 'id', 'color' => '',]])->lists();	}	public function status()	{		if (APP_DEMO) {			ajax('测试站暂时不能修改');		}		$id = input('post.id');		$type = input('get.type');		$builder = new builder();		show($builder->set_status($id, $type, 'factory_proterty'));	}	public function edit()	{		if (empty($_POST)) {			$id = input('get.id');			$builder = new builder("factory_proterty", ["id" => $id], "edit");			$builder->title(($id ? '编辑养殖工具' : '添加养殖工具'), ($id ? '这里是编辑养殖工具' : '这里是添加养殖工具'), '用户养殖工具', '/factory/index')->key('id', '编号', 'readonly', '', '数据编号')->key('id', '编号', 'hidden', '', '数据编号')->key('protertyName', '生产工具名', 'readonly', '', '生产工具的名字')->key('userid', '所属用户', 'text', '', '此生产工具的拥有者的id')->key('life', '剩余寿命', 'text', '', '生产工具剩余寿命')->key('status', '状态', 'select', [0 => "禁用", 1 => "工作中", 2 => "空闲中"], '')->edit();		} else {			if (APP_DEMO) {				ajax('测试站暂时不能修改');			}			$data['title'] = iv('post.title', 'a', '矿机名 格式错误', 1);			$data['life'] = iv('post.life', 'd', '寿命 格式错误', 1);			$data['limit1'] = iv('post.limit1', 'd', '开始挖矿时间 格式错误', 1);			$data['limit2'] = iv('post.limit2', 'd', '结束挖矿时间 格式错误', 1);			$data['qita'] = iv('post.qita', 'double', '%其他时间收益减少比例 格式错误', 1);			$data['guoqi'] = iv('post.guoqi', 'double', '%过期收益减少比例 格式错误', 1);			$data['minguoqi'] = iv('post.minguoqi', 'double', '%最小收益比例 格式错误', 1);			$data['lastlife'] = iv('post.lastlife', 'd', '剩余寿命 格式错误', 1);			$data['status'] = iv('post.status', 'd', '状态 格式错误', 1);			$data['pd'] = iv('post.pd', 'double', '产能 格式错误', 1);			$data['pd_type'] = iv('post.pd_type', 'w', '生产币种 格式错误', 1);			$id = iv('post.id');			if ($id) {				$res = db::table("pool")->where(["id" => $id])->save($data);			} else {				$res = db::table("pool")->add($data);			}			if ($res) {				ajax('操作成功', 1, "/admin/pool/index");			} else {				ajax('操作失败');			}		}	}	public function goodsManage_add()	{		if (empty($_POST)) {			$id = input('get.id');			$builder = new builder("factory_goods", ["id" => $id], "edit");			$builder->title('添加生产工具', '这里是养殖工厂配置页', '养殖工厂', '/factory/goodsManage')->key('id', '编号', 'hidden', '', '数据编号')->key('goodsName', '生产工具名', 'text', '', '客户用虚拟币购买的生产工具')->key('leftNum', '库存', 'text', '', '库存')->key('price', '工具价格', 'text', '', '生产工具售价')->key('coin', '工具币种', 'select', 'coin_c_name_c_title', '售价币种')->key('lifeLength', '寿命', 'text', '', '生产工具寿命')->key('food', '食物名', 'text', '', '生产工具需要的食物或养料')->key('foodLeft', '食物库存', 'text', '', '食物的库存')->key('foodPrice', '食物售价', 'text', '', '食物售价')->key('foodCoin', '食物售价币种', 'select', 'coin_c_name_c_title', '食物售价币种')->key('feedCycle', '喂食(收获)周期', 'text', '', '生产工具需要的多久喂食(收获)一次')->key('feedNum', '喂食量', 'text', '', '生产工具一次需要消耗多少食物')->key('productName', '产物名', 'text', '', '生产的产品')->key('productNum', '单位周期产量', 'text', '', '每个喂食周期产出产品的数量')->key('productPrice', '产品单价', 'text', '', '每个产品的价格')->key('status', '状态', 'hidden', '', '')->edit();		} else {			if (APP_DEMO) {				ajax('测试站暂时不能修改');			}			$data['goodsName'] = iv('post.goodsName', 'a', '生产工具名 错误', 1);			$data['leftNum'] = iv('post.leftNum', 'd', '库存 格式错误', 1);			$data["price"] = iv('post.price', 'double', '生产工具售价 格式错误', 1);			$data['coin'] = iv('post.coin', 'w', '售价币种 错误');			$data['lifeLength'] = iv('post.lifeLength', 'double', '生产工具寿命 格式错误', 1);			$data['food'] = iv('post.food', 'a', '食物名 格式错误', 1);			$data['feedCycle'] = iv('post.feedCycle', 'd', '喂食(收获)周期 格式错误', 1);			$data['feedNum'] = iv('post.feedNum', 'd', '喂食量 格式错误', 1);			$data['productName'] = iv('post.productName', "a", '产物名 格式错误', 1);			$data['productNum'] = iv('post.productNum', "d", '单位周期产量 格式错误', 1);			$data['productPrice'] = iv('post.productPrice', 'double', '产品单价 格式错误', 1);			$data['addtime'] = time();			$data['addUserid'] = session('userid');			$data['status'] = 1;			$data['type'] = 1;			$dataFood['goodsName'] = iv('post.food', 'a', '食物名 错误', 1);			$dataFood['leftNum'] = iv('post.foodLeft', 'd', '食物库存 格式错误', 1);			$dataFood["price"] = iv('post.foodPrice', 'double', '食物售价 格式错误', 1);			$dataFood['coin'] = iv('post.foodCoin', 'w', '食物售价币种 错误');			$dataFood['addtime'] = time();			$dataFood['addUserid'] = session('userid');			$dataFood['status'] = 1;			$dataFood['type'] = 2;			$res = db::table("factory_goods")->add($data);			$goods = db::table("factory_goods")->where(["goodsName" => $dataFood["goodsName"]])->find();			if (!$goods) {				db::table("factory_goods")->add($dataFood);			}			if ($res) {				ajax('操作成功', 1, "/admin/factory/goodsManage");			} else {				ajax('操作失败');			}		}	}	public function goodsManage_edit()	{		if (empty($_POST)) {			$id = input('get.id');			$builder = new builder("factory_goods", ["id" => $id], "edit");			$goods = db::table('factory_goods')->where(["id" => $id])->find();			if ($goods["type"] == 1) {				$builder->title('添加生产工具', '这里是养殖工厂配置页', '养殖工厂', '/factory/goodsManage')->key('id', '编号', 'hidden', '', '数据编号')->key('goodsName', '生产工具名', 'text', '', '客户用虚拟币购买的生产工具')->key('leftNum', '库存', 'text', '', '库存')->key('price', '工具价格', 'text', '', '生产工具售价')->key('coin', '工具币种', 'select', 'coin_c_name_c_title', '售价币种')->key('lifeLength', '寿命', 'text', '', '生产工具寿命')->key('food', '食物名', 'text', '', '生产工具需要的食物或养料')->key('feedCycle', '喂食(收获)周期', 'text', '', '生产工具需要的多久喂食(收获)一次')->key('feedNum', '喂食量', 'text', '', '生产工具一次需要消耗多少食物')->key('productName', '产物名', 'text', '', '生产的产品')->key('productNum', '单位周期产量', 'text', '', '每个喂食周期产出产品的数量')->key('productPrice', '产品单价', 'text', '', '每个产品的价格')->key('status', '状态', 'hidden', '', '')->edit();			} else {				$builder->title('添加生产工具', '这里是养殖工厂配置页', '养殖工厂', '/factory/goodsManage')->key('id', '编号', 'hidden', '', '数据编号')->key('goodsName', '食物名', 'text', '', '食物,饲料')->key('leftNum', '库存', 'text', '', '库存')->key('price', '工具价格', 'text', '', '食物售价')->key('coin', '工具币种', 'select', 'coin_c_name_c_title', '售价币种')->key('status', '状态', 'hidden', '', '')->edit();			}		} else {			if (APP_DEMO) {				ajax('测试站暂时不能修改');			}			$res = null;			$id = input('get.id');			$goods = db::table('factory_goods')->where(["id" => $id])->find();			if ($goods["type"] == 1) {				$data['goodsName'] = iv('post.goodsName', 'a', '生产工具名 错误', 1);				$data['leftNum'] = iv('post.leftNum', 'd', '库存 格式错误', 1);				$data["price"] = iv('post.price', 'double', '生产工具售价 格式错误', 1);				$data['coin'] = iv('post.coin', 'w', '售价币种 错误');				$data['lifeLength'] = iv('post.lifeLength', 'double', '生产工具寿命 格式错误', 1);				$data['food'] = iv('post.food', 'a', '食物名 格式错误', 1);				$data['feedCycle'] = iv('post.feedCycle', 'd', '喂食(收获)周期 格式错误', 1);				$data['feedNum'] = iv('post.feedNum', 'd', '喂食量 格式错误', 1);				$data['productName'] = iv('post.productName', "a", '产物名 格式错误', 1);				$data['productNum'] = iv('post.productNum', "d", '单位周期产量 格式错误', 1);				$data['productPrice'] = iv('post.productPrice', 'double', '产品单价 格式错误', 1);				$data['modifyTime'] = time();				$data['modifyUserid'] = session('userid');				$data['status'] = 1;				$res = db::table("factory_goods")->where(["id" => $id])->save($data);			} else {				$dataFood['goodsName'] = iv('post.goodsName', 'a', '食物名 错误', 1);				$dataFood['leftNum'] = iv('post.leftNum', 'd', '食物库存 格式错误', 1);				$dataFood["price"] = iv('post.price', 'double', '食物售价 格式错误', 1);				$dataFood['coin'] = iv('post.coin', 'w', '食物售价币种 错误');				$dataFood['modifyTime'] = time();				$dataFood['modifyUserid'] = session('userid');				$dataFood['status'] = 1;				$res = db::table("factory_goods")->where(["id" => $id])->save($dataFood);			}			if ($res) {				ajax('操作成功', 1, "/admin/factory/goodsManage");			} else {				ajax('操作失败');			}		}	}	public function goodsStatus()	{		if (APP_DEMO) {			ajax('测试站暂时不能修改');		}		$id = input('post.id');		$type = input('get.type');		$builder = new builder();		show($builder->set_status($id, $type, 'factory_goods'));	}	public function food_edit()	{		if (empty($_POST)) {			$id = input('get.id');			$builder = new builder("factory_proterty", ["id" => $id], "edit");			$builder->title('编辑用户饲料', '这里是用户饲料数量的编辑页面', '养殖工厂', '/factory/foodManage')->key('protertyName', '食物名', 'readonly', '', '食物饲料名')->key('num', '剩余数量', 'text', '', '饲料剩余数量')->edit();		} else {			if (APP_DEMO) {				ajax('测试站暂时不能修改');			}			$id = input('get.id');			$data["num"] = iv('post.num', 'double', '食物售价 格式错误', 1);			$res = db::table("factory_proterty")->where(["id" => $id])->save($data);			if ($res) {				ajax('操作成功', 1, "/admin/factory/foodManage");			} else {				ajax('操作失败');			}		}	}	public function factoryConfig()	{		$builder = new builder("factory_goods", ["status" => 1]);		$builder->title('养殖工厂', '这里是市场商品管理', '养殖列表', '/factory/index')->lists();	}}