<?phpnamespace admin;use Move\db;class daili extends admin{	public function __construct()	{		parent::__construct();		// if (!$this->is_game('daili')) {		// 	ajax('这个应用你没有购买');		// }	}	public function index()	{		$this->tongbu();		$builder = new builder("daili");		$builder->title('代理管理', '这里是代理管理', '代理列表', '/daili/index');		$builder->button('add', '添加', '/daili/edit');		$builder->button('no', '禁用', '/daili/status/type/0');		$builder->button('off', '启用', '/daili/status/type/1');		$builder->button('del', '删除', '/daili/status/type/-1');		$builder->search('addtime_str', '开始时间', 'time');		$builder->search('addtime_end', '结束时间', 'time');		$builder->search('order', ['id_desc' => 'ID降序', 'id_asc' => 'ID升序', 'sort_desc' => '索引降序', 'sort_asc' => '索引升序', 'addtime_desc' => '时间降序', 'addtime_asc' => '时间升序',], 'select');		$builder->search('status', ['0' => '全部状态', '1' => '禁用', '2' => '启用'], 'select');		$builder->search('field', ['title' => '标题',], 'select');		$builder->search('name', '请输入查询内容', 'text');		$builder->key('id', 'ID', 'text');		$builder->key('userid', '代理用户', 'link', [['type' => 'button', 'url' => '/user/index/field/id/name/###', 'title' => ['from_id' => 'userid', 'table' => 'user', 'to_id' => 'id', 'title' => 'username'], 'field' => 'userid', 'color' => '',]]);		$mymc_coin = new \mymc\coin();		$coin_list = $mymc_coin->select();		foreach ($coin_list as $k => $v) {			$builder->key($v['name'], $v['title'], 'text', '', '代理对应币种可用额度');		}		$builder->key('sort', '排序', 'text');		$builder->key('addtime', '添加时间', 'time');		$builder->key('endtime', '更新时间', 'time');		$builder->key('status', '状态', 'select', [0 => '<span style="color:#DA9151;">禁用</span>', 1 => '<span style="color:#3498db;">启用</span>']);		$builder->key("ext", '操作', 'link', [['type' => 'button3', 'url' => '/daili/edit/id/###', 'title' => '编辑', 'field' => 'id', 'color' => '',],]);		$builder->lists();	}	private function tongbu()	{		$mymc_coin = new \mymc\coin();		$coin_list = $mymc_coin->select();		$db_config = config("DB_CONF");		$daili = db::query("select COLUMN_NAME from information_schema.COLUMNS where TABLE_SCHEMA = '" . $db_config['db_name'] . "' and TABLE_NAME = 'move_daili';");		$daili_list = [];		if ($coin_list && $daili) {			foreach ($daili as $k => $v) {				$daili_list[$v['COLUMN_NAME']] = 1;			}			foreach ($coin_list as $k => $v) {				if ($daili_list[$v['name']]) {				} else {					db::query("ALTER TABLE  `move_daili` ADD  `" . $v['name'] . "` DECIMAL(20,8) UNSIGNED NOT NULL");				}			}		}	}	public function edit()	{		if (empty($_POST)) {			$id = input('get.id');			$builder = new builder("daili", ["id" => $id], "edit");			$builder->title(($id ? '编辑代理' : '添加代理'), ($id ? '这里是编辑代理' : '这里是添加代理'), '代理管理', '/daili/index');			if ($id) {				$builder->key('id', '编号', 'readonly', '', '数据编号');				$builder->key('id', '编号', 'hidden', '', '数据编号');			}			$builder->key('userid', '用户id', 'text', '', '请填写用户id');			$mymc_coin = new \mymc\coin();			$coin_list = $mymc_coin->select();			foreach ($coin_list as $k => $v) {				$coin[$v['name']] = $v['title'];				$builder->key($v['name'], '可用' . $v['title'], 'text', '', '代理对应币种可用额度');			}			$builder->key('invit_daili_kai', '开启代理赠送', 'select', [0 => '禁用', 1 => '启用'], '是否开启');			$builder->key('invit_daili', '代理赠送比例', 'text', '', '%');			$builder->key('invit_self_kai', '开启自己赠送', 'select', [0 => '禁用', 1 => '启用'], '是否开启');			$builder->key('invit_self', '赠送自己的比例', 'text', '', '%');			$builder->key('invit_kai', '开启三级赠送', 'select', [0 => '禁用', 1 => '启用'], '是否开启');			$builder->key('invit_coin', '赠送币种', 'select', $coin, '选择一种币种进行赠送');			$builder->key('invit_1', '一代赠送比例', 'text', '', '%');			$builder->key('invit_2', '二代赠送比例', 'text', '', '%');			$builder->key('invit_3', '三代赠送比例', 'text', '', '%');			$builder->key('sort', '排序', 'text', '', '排序');			$builder->key('addtime', '添加时间', 'time', '', '添加时间 (只能时间)  不填会增自动生成');			$builder->key('endtime', '编辑时间', 'time', '', '编辑时间 (只能时间)  不填会增自动生成');			$builder->key('status', '状态', 'select', [0 => '禁用', 1 => '启用'], '状态')->edit();		} else {			if (APP_DEMO) {				ajax('测试站暂时不能修改');			}			$data = $_POST;			$data['userid'] = iv('post.userid', '', '用户id 格式错误', 1);			$data['invit_daili_kai'] = iv('post.invit_daili_kai', '', '参数错误');			$data['invit_daili'] = iv('post.invit_daili', '', '参数错误');			$data['invit_self_kai'] = iv('post.invit_self_kai', '', '参数错误');			$data['invit_self'] = iv('post.invit_self', '', '参数错误');			$data['invit_kai'] = iv('post.invit_kai', '', '参数错误');			$data['invit_coin'] = iv('post.invit_coin', '', '参数错误');			$data['invit_1'] = iv('post.invit_1', '', '赠送参数错误');			$data['invit_2'] = iv('post.invit_2', '', '赠送参数错误');			$data['invit_3'] = iv('post.invit_3', '', '赠送参数错误');			$data['sort'] = iv('post.sort', 'd', '排序格式错误 只能是数字', 1);			$data['addtime'] = iv('post.addtime', 'time', '添加时间格式错误', 1);			$data['endtime'] = iv('post.endtime', 'time', '编辑时间格式错误', 1);			$data['status'] = iv('post.status', 'd', '状态格式错误', 1);			$id = iv('post.id', 'd', '参数错误', 1);			if (!$data['addtime']) {				$data['addtime'] = time();			}			if (!$data['endtime']) {				$data['endtime'] = time();			}			if ($id) {				$res = db::table('daili')->where(['id' => $id])->save($data);			} else {				if (db::table('daili')->where(['userid' => $data['userid']])->find()) {					ajax('已经存在');				}				$res = db::table('daili')->add($data);			}			if ($res) {				ajax('操作成功', 1);			} else {				ajax('操作失败');			}		}	}	public function status()	{		if (APP_DEMO) {			ajax('测试站暂时不能修改');		}		$id = input('post.id');		$type = input('get.type');		$builder = new builder();		$res = $builder->set_status($id, $type, 'daili');		if (isset($res[1])) {			ajax('操作成功', 1);		} else {			ajax('操作失败');		}	}	public function log()	{		$builder = new builder("daili_log");		$builder->title('记录管理', '这里是记录管理', '记录列表', '/daili/log')->search('addtime_str', '开始时间', 'time')->search('addtime_end', '结束时间', 'time')->search('order', ['id_desc' => 'ID降序', 'id_asc' => 'ID升序', 'sort_desc' => '索引降序', 'sort_asc' => '索引升序', 'addtime_desc' => '时间降序', 'addtime_asc' => '时间升序',], 'select')->search('status', ['0' => '全部状态', '1' => '禁用', '2' => '启用'], 'select')->search('field', ['title' => '标题',], 'select')->search('name', '请输入查询内容', 'text')->key('id', 'ID', 'text')->key('userid', '充值用户', 'link', [['type' => 'button', 'url' => '/user/index/field/id/name/###', 'title' => ['from_id' => 'userid', 'table' => 'user', 'to_id' => 'id', 'title' => 'username'], 'field' => 'userid', 'color' => '',]])->key('dailiid', '代理用户', 'link', [['type' => 'button', 'url' => '/user/index/field/id/name/###', 'title' => ['from_id' => 'dailiid', 'table' => 'user', 'to_id' => 'id', 'title' => 'username'], 'field' => 'dailiid', 'color' => '',]])->key('coinname', '充值币种', 'link', [['type' => 'button', 'url' => '/coin/index/field/name/name/###', 'title' => ['from_id' => 'coinname', 'table' => 'coin', 'to_id' => 'name', 'title' => 'title'], 'field' => 'coinname', 'color' => '',]])->key('num', '充值数量', 'text')->key('sort', '排序', 'text')->key('addtime', '添加时间', 'time')->key('endtime', '更新时间', 'time')->key('status', '状态', 'select', [0 => '<span style="color:#DA9151;">禁用</span>', 1 => '<span style="color:#3498db;">启用</span>'])->key("ext", '操作', 'link', [['type' => 'button3', 'url' => '/daili/log_edit/id/###', 'title' => '编辑', 'field' => 'id', 'color' => '',],])->lists();	}	public function invit()	{		$builder = new builder("daili_invit");		$builder->title('代理赠送', '这里是代理赠送', '认购赠送', '/daili/invit')->search('addtime_str', '开始时间', 'time')->search('addtime_end', '结束时间', 'time')->search('order', ['id_desc' => 'ID降序', 'id_asc' => 'ID升序', 'sort_desc' => '索引降序', 'sort_asc' => '索引升序', 'addtime_desc' => '时间降序', 'addtime_asc' => '时间升序',], 'select')->search('status', ['0' => '全部状态', '1' => '已申请', '2' => '提现成功', '3' => '已撤销', '4' => '正在处理'], 'select')->search('field', ['userid_c_user_c_id_c_username' => '用户名',], 'select')->search('name', '请输入查询内容', 'text')->key('id', 'ID', 'text')->key('userid', '用户名', 'link', [['type' => 'button', 'url' => '/user/index/field/id/name/###', 'title' => ['from_id' => 'userid', 'table' => 'user', 'to_id' => 'id', 'title' => 'username'], 'field' => 'userid', 'color' => '',]])->key('invit', '推荐人', 'link', [['type' => 'button', 'url' => '/user/index/field/id/name/###', 'title' => ['from_id' => 'invit', 'table' => 'user', 'to_id' => 'id', 'title' => 'username'], 'field' => 'userid', 'color' => '',]])->key('type', '奖励类型', 'text')->key('name', '奖励说明', 'text')->key('num', '操作数量', 'text')->key('fee', '到账数量', 'text')->key('feecoin', '到账币种', 'link', [['type' => 'button', 'url' => '/coin/index/field/name/name/###', 'title' => ['from_id' => 'feecoin', 'table' => 'coin', 'to_id' => 'name', 'title' => 'title'], 'field' => 'feecoin', 'color' => '',]])->key('addtime', '操作时间', 'time')->lists();	}}