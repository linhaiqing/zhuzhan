<?phpnamespace admin;use Move\db;class auth extends admin{	public function __construct()	{		parent::__construct();	}	public function index()	{		$builder = new builder('auth_group');		$builder->title('权限管理', '<a href="http://www.movesay.com/article/detail/id/19.html" target="_blank"> 功能说明 http://www.movesay.com/article/detail/id/19.html</a>', '权限列表', '/auth/index')->button('add', '添加', '/auth/edit')->button('no', '禁用', '/auth/status/type/0')->button('off', '启用', '/auth/status/type/1')->button('del', '删除', '/auth/status/type/-1')->search('addtime_str', '开始时间', 'time')->search('addtime_end', '结束时间', 'time')->search('order', ['id_desc' => 'ID降序', 'id_asc' => 'ID升序', 'sort_desc' => '索引降序', 'sort_asc' => '索引升序', 'addtime_desc' => '时间降序', 'addtime_asc' => '时间升序',], 'select')->search('status', ['0' => '全部状态', '1' => '禁用', '2' => '启用'], 'select')->search('field', ['title' => '用户组', 'description' => '描叙',], 'select')->search('name', '请输入查询内容', 'text')->key('id', 'ID', 'text')->key('title', '用户组', 'text')->key('description', '描叙', 'text')->key('addtime', '添加时间', 'time')->key('endtime', '更新时间', 'time')->key('status', '状态', 'select', [0 => '<span style="color:#DA9151;">禁用</span>', 1 => '<span style="color:#3498db;">启用</span>'])->key("ext", '操作', 'link', [['type' => 'button3', 'url' => '/auth/edit/id/###', 'title' => '编辑', 'field' => 'id', 'color' => '',], ['type' => 'button3', 'url' => '/auth/auth_rule_select/id/###', 'title' => '访问授权', 'field' => 'id', 'color' => '',], ['type' => 'button3', 'url' => '/auth/user/group_id/###', 'title' => '成员授权', 'field' => 'id', 'color' => '',],])->lists();	}	public function user()	{		$group_id = iv('get.group_id', 'd', '参数错误');		$builder = new builder("auth_user", ["group_id" => $group_id]);		$builder->title('用户权限管理', '', '权限列表', '/auth/index')->button('add', '添加', '/auth/user_edit')->button('no', '禁用', '/auth/user_status/type/0')->button('off', '启用', '/auth/user_status/type/1')->button('del', '删除', '/auth/user_status/type/-1')->key('id', 'ID', 'text')->key('uid', '用户名', 'link', [['type' => 'button', 'url' => '/user/admin/field/id/name/###', 'title' => ['from_id' => 'uid', 'table' => 'admin', 'to_id' => 'id', 'title' => 'username'], 'field' => 'uid', 'color' => '',]])->key('addtime', '添加时间', 'time')->key('endtime', '更新时间', 'time')->key('status', '状态', 'select', [0 => '<span style="color:#DA9151;">禁用</span>', 1 => '<span style="color:#3498db;">启用</span>'])->set_display("user")->lists();	}	public function user_add()	{		if (APP_DEMO) {			ajax('测试站暂时不能修改');		}		$uid = input('post.uid');		$group_id = input('post.group_id');		$user = db::table("auth_user")->where(["uid" => $uid])->find();		if ($user) {			if ($user['group_id'] == $group_id) {				ajax('该用户已添加');			} else {				$group = db::table("auth_group")->where(["id" => $user['group_id']])->find();				ajax('该用户已存在于[' . $group['title'] . ']组');			}		}		if (db::table('auth_user')->add(["uid" => $uid, "group_id" => $group_id, "status" => 1, "addtime" => time(), "endtime" => time()])) {			ajax('添加成功', 1);		} else {			ajax('添加失败');		}	}	public function user_status()	{		if (APP_DEMO) {			ajax('测试站暂时不能修改');		}		$id = input('post.id');		$type = input('get.type');		$builder = new builder();		$res = $builder->set_status($id, $type, 'auth_user');		if (isset($res[1])) {			ajax('操作成功', 1);		} else {			ajax('操作失败');		}	}	public function edit()	{		if (empty($_POST)) {			$id = input('get.id');			$builder = new builder('auth_group', ["id" => $id], "edit");			$builder->title(($id ? '编辑用户组' : '新增用户组'), '<a href="http://www.movesay.com/article/detail/id/19.html" target="_blank"> 功能说明 http://www.movesay.com/article/detail/id/19.html</a>', '用户组列表', '/auth/index')->key('id', '编号', 'hidden', '', '数据编号')->key('title', '用户组', 'text', '', '用户组名称')->key('description', '用户组描述', 'textarea', '', '用户组描述')->key('sort', '排序', 'text', '', '排序 (只能数字)')->key('addtime', '添加时间', 'time', '', '添加时间 (只能时间)')->key('endtime', '更新时间', 'time', '', '更新时间 (只能时间)')->key('status', '状态', 'select', [0 => '禁用', 1 => '启用'], '状态')->edit();		} else {			if (APP_DEMO) {				ajax('测试站暂时不能修改');			}			$data['title'] = iv('post.title', 'a', '用户组名称格式错误');			$data['description'] = iv('post.description');			$data['sort'] = iv('post.sort', 'a', '排序格式错误', 1);			$data['addtime'] = iv('post.addtime', 'time', '添加时间格式错误');			$data['endtime'] = iv('post.endtime', 'time', '更新时间格式错误');			$data['status'] = iv('post.status', 'd', '状态格式错误');			$id = iv('post.id');			if ($id) {				$res = db::table('auth_group')->where(['id' => $id])->save($data);			} else {				$res = db::table("auth_group")->add($data);			}			if ($res) {				ajax('操作成功', 1);			} else {				ajax('操作失败');			}		}	}	public function status()	{		if (APP_DEMO) {			ajax('测试站暂时不能修改');		}		$id = input('post.id');		$type = input('get.type');		$builder = new builder();		$builder->set_status($id, $type, 'auth_group');	}	public function auth_rule_select()	{		if (empty($_POST)) {			$id = iv('get.id', 'd', '参数错误');			$auth_group = db::table("auth_group")->where(["id" => $id])->find();			if (!$auth_group) {				ajax('组id不存在');			}			$this->auth_group = $auth_group;			$rule_map = json_decode($auth_group["rules"]);			if (!$rule_map) {				$rule_map = [];			}			$list = db::table("sys_menu")->order("sort asc,id asc")->select();			$sys_conf = ['index', 'config', 'article', 'user', 'auth', 'finan', 'tools', 'cloud'];			$mm = mm();			$game = explode("|", $mm["game"]);			$my_menu = array_merge($game, $sys_conf);			foreach ($list as $k => $v) {				$con = strstr($v['url'], '/', TRUE);				if (in_array($con, $my_menu)) {				} else {					unset($list[$k]);				}			}			$this->selet_map = db::table("auth_group")->where(['status#!=' => 0])->select();			$nodes = [];			if (!empty($list)) {				$refer = [];				foreach ($list as $key => $data) {					$refer[$data['id']] =& $list[$key];				}				foreach ($list as $key => $data) {					$parentId = $data["pid"];					if (!$parentId) {						$list[$key]["checked"] = in_array($list[$key]["id"], $rule_map) ? 1 : 0;						$nodes[] = &$list[$key];					} else {						if (isset($refer[$parentId])) {							$parent =& $refer[$parentId];							$list[$key]["checked"] = in_array($list[$key]["id"], $rule_map) ? 1 : 0;							$parent["operator"][] =& $list[$key];						}					}				}			}			foreach ($nodes as $key => $value) {				if (!empty($value['operator'])) {					$nodes[$key]['child'] = $value['operator'];					unset($nodes[$key]['operator']);				}			}			$this->menu_list = $nodes;			$this->display();		} else {			if (APP_DEMO) {				ajax('测试站暂时不能修改');			}			$id = input('post.id');			$rules = input('post.rules');			$res = db::table('auth_group')->where(['id' => $id])->save(["rules" => json_encode($rules)]);			if ($res) {				ajax('操作成功', 1);			} else {				ajax('操作失败');			}		}	}	public function chose_html()	{		$admin_user = db::table("admin")->field("id,username,moble,email")->where(["status" => 1])->select();		ajax($admin_user, 1);	}} 