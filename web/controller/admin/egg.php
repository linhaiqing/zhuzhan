<?phpnamespace admin;use Move\db;class egg extends admin{	public function __construct()	{		parent::__construct();		if (!$this->is_game('egg')) {			ajax('这个应用你没有购买');		}	}	public function index()	{		$builder = new builder("egg");		$builder->title('我的鸡场', '这里是我的鸡场', '鸡场列表', '/egg/index')->button('add', '添加', '/egg/edit')->button('no', '禁用', '/egg/status/type/0')->button('off', '启用', '/egg/status/type/1')->button('del', '删除', '/egg/status/type/-1')->search('field', ['userid' => '用户ID',], 'select')->search('name', '请输入查询内容', 'text')->key('id', '编号', 'text')->key('userid', '用户名', 'link', [['type' => 'button', 'url' => '/user/index/field/id/name/###', 'title' => ['from_id' => 'userid', 'table' => 'user', 'to_id' => 'id', 'title' => 'username'], 'field' => 'userid', 'color' => '',]])->key('name', '名称', 'text')->key('content', '内容', 'text')->key('buytime', '购买时间', 'text')->key('strtime', '开始时间', 'text')->key('gettime', '结束时间', 'text')->key('status', '状态', 'select', [0 => "禁用", 1 => "开始孵化", 2 => "获取收成", 3 => "开始下蛋", 4 => "结束下蛋"])->key("ext", '操作', 'link', [['type' => 'button3', 'url' => '/egg/edit/id/###', 'title' => '编辑', 'field' => 'id', 'color' => '',]])->lists();	}	public function edit()	{		if (empty($_POST)) {			$id = input('get.id');			$builder = new builder("egg", ["id" => $id], "edit");			$builder->title(($id ? '编辑矿场用户' : '添加矿场用户'), ($id ? '这里是编辑矿场用户' : '这里是添加矿场用户'), '矿场用户管理', '/pool/index')->key('id', '编号', 'readonly', '', '数据编号')->key('id', '编号', 'hidden', '', '数据编号')->key('name', '名称', 'text', '', '')->key('content', '内容', 'text', '', '补充说明')->key('buytime', '购买时间', 'time', '', '购买时间')->key('strtime', '开始时间', 'time', '', '开始时间')->key('period', '周期', 'text', '', '小时')->key('sort', '分类', 'text', '', '展示图片类别')->key('day', '下蛋天数', 'text', '', '下蛋天数')->key('status', '状态', 'select', [0 => "禁用", 1 => "开始孵化", 2 => "获得收成", 3 => "开始下蛋", 4 => "结束下蛋"], '状态')->edit();		} else {			if (APP_DEMO) {				ajax('测试站暂时不能修改');			}			$data['name'] = iv('post.name', 'a', '名称格式错误', 1);			$data['period'] = iv('post.period', 'd', '周期 格式错误', 1);			$data['sort'] = iv('post.sort', 'd', '分类 格式错误', 1);			$data['day'] = iv('post.day', 'd', '下蛋天数 格式错误', 1);			$data['content'] = iv('post.content', 'a', '内容 格式错误', 1);			$data['buytime'] = iv('post.buytime', 'time', '购买时间 格式错误', 1);			$data['strtime'] = iv('post.strtime', 'time', '开始时间 格式错误', 1);			$data['status'] = iv('post.status', 'd', '状态 格式错误', 1);			$id = iv('post.id');			if ($id) {				$res = db::table("egg")->where(["id" => $id])->save($data);			} else {				$res = db::table("egg")->add($data);			}			if ($res) {				ajax('操作成功', 1, "/admin/egg/index");			} else {				ajax('操作失败');			}		}	}	public function status()	{		if (APP_DEMO) {			ajax('测试站暂时不能修改');		}		$id = input('post.id');		$type = input('get.type');		$builder = new builder();		show($builder->set_status($id, $type, 'egg'));	}	public function market()	{		$builder = new builder("egg_market");		$builder->title('鸡蛋市场', '这里是鸡蛋市场', '鸡蛋列表', '/egg/market')->button('add', '添加', '/egg/market_edit')->button('no', '禁用', '/egg/market_status/type/0')->button('off', '启用', '/egg/market_status/type/1')->button('del', '删除', '/egg/market_status/type/-1')->search('field', ['id' => '鸡蛋ID',], 'select')->search('name', '请输入查询内容', 'text')->key('id', '编号', 'text')->key('type', '类型', 'text')->key('name', '名称', 'text')->key('buy_price', '购买价格', 'text')->key('buy_pricetype', '购买 币种', 'text')->key('sell_price', '卖出价格', 'text')->key('sell_pricetype', '卖出币种', 'text')->key('period', '周期/小时', 'text')->key('content', '内容', 'a')->key('status', '状态', 'select', [0 => "禁用", 1 => "热卖中"])->key("ext", '操作', 'link', [['type' => 'button3', 'url' => '/egg/market_edit/id/###', 'title' => '编辑', 'field' => 'id', 'color' => '',]])->lists();	}	public function market_edit()	{		if (empty($_POST)) {			$id = input('get.id');			$builder = new builder("egg_market", ["id" => $id], "edit");			$builder->title(($id ? '编辑鸡蛋市场' : '添加鸡蛋'), ($id ? '这里是编辑鸡蛋市场' : '这里是添加鸡蛋市场'), '鸡蛋市场管理', '/egg/market')->key('id', '编号', 'hidden', '', '数据编号')->key('id', '编号', 'readonly', '', '数据编号')->key('type', '类型', 'text', '', '')->key('name', '名称', 'text', '', '市场商品名称')->key('buy_price', '购买价格', 'text', '', '价格 正常购买价格')->key('buy_pricetype', '购买价格币种', 'text', '', '字母 ')->key('sell_price', '售出价格', 'text', '', '价格 正常出售价格')->key('sell_pricetype', '出售价格币种', 'text', '', '字母')->key('limit', '购买上限', 'text', '', ' ')->key('period', '周期', 'text', '', '小时 孵化/下蛋周期')->key('content', '内容', 'editor', '', '商品说明')->key('status', '状态', 'select', [0 => "禁用", 1 => "热卖中"], '鸡蛋状态')->edit();		} else {			if (APP_DEMO) {				ajax('测试站暂时不能修改');			}			$data['type'] = iv('post.type', 'd', '商品类别 格式错误', 1);			$data['name'] = iv('post.name', 'a', '商品名称 格式错误', 1);			$data['buy_price'] = iv('post.buy_price', 'd', '购买价格 格式错误', 1);			$data['buy_pricetype'] = iv('post.buy_pricetype', 'w', '购买价格币种 格式错误', 1);			$data['sell_price'] = iv('post.sell_price', 'd', '出售价格 格式错误', 1);			$data['sell_pricetype'] = iv('post.sell_pricetype', 'w', '出售价格币种 格式错误', 1);			$data['limit'] = iv('post.limit', 'd', '购买上限 格式错误', 1);			$data['period'] = iv('post.period', 'a', '周期 格式错误', 1);			$data['content'] = iv('post.content');			$data['status'] = iv('post.status', 'd', '状态 格式错误', 1);			$id = iv('post.id');			if ($id) {				$res = db::table("egg_market")->where(["id" => $id])->save($data);			} else {				$res = db::table("egg_market")->add($data);			}			if ($res) {				ajax('操作成功', 1, "/admin/egg/market");			} else {				ajax('操作失败');			}		}	}	public function market_status()	{		if (APP_DEMO) {			ajax('测试站暂时不能修改');		}		$id = input('post.id');		$type = input('get.type');		$builder = new builder();		show($builder->set_status($id, $type, 'egg_market'));	}	public function log()	{		$builder = new builder("egg_log");		$builder->title('交易记录', '这里是交易记录', '交易记录', '/egg/log')->search('field', ['userid' => '用户名',], 'select')->search('name', '请输入查询内容', 'text')->key('id', '编号', 'text')->key('userid', '用户名', 'link', [['type' => 'button', 'url' => '/user/index/field/id/name/###', 'title' => ['from_id' => 'userid', 'table' => 'user', 'to_id' => 'id', 'title' => 'username'], 'field' => 'userid', 'color' => '',]])->key('type', '类别', 'text')->key('price', '交易价格', 'text')->key('price_type', '价格币种', 'text')->key('num', '交易数量', 'text')->key('mum', '交易总价', 'text')->key('addtime', '交易时间', 'time')->key('status', '状态', 'select', [0 => "禁用", 1 => "交易成功"])->key("remark", '备注', 'select', [1 => "买入", 2 => "卖出"])->lists();	}	public function farm()	{		$builder = new builder("egg_farm");		$builder->title('交易记录', '这里是交易记录', '交易记录', '/egg/farm')->search('field', ['userid' => '用户名',], 'select')->search('name', '请输入查询内容', 'text')->key('id', '编号', 'text')->key('userid', '用户名', 'link', [['type' => 'button', 'url' => '/user/index/field/id/name/###', 'title' => ['from_id' => 'userid', 'table' => 'user', 'to_id' => 'id', 'title' => 'username'], 'field' => 'userid', 'color' => '',]])->key('farm_id', '编号', 'text')->key('sort', '类别', 'select', [2 => "孵化中", 4 => "下蛋中"])->key('addtime', '交易时间', 'time')->key("remark", '备注', 'text')->lists();	}}