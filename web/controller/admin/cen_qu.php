<?phpnamespace admin;use Move\db;use Move\config;use Move\cache;use move\ext\page;use Move\ext\client;class cen_qu extends admin{	public function __construct()	{		parent::__construct();	}	public function index()	{		$builder = new builder("cen_qu");		$builder->title('导航管理', '这里是导航管理', '导航列表', '/cen_qu/index')->button('add', '添加', '/cen_qu/cen_qu_edit')->button('no', '禁用', '/cen_qu/status/type/0')->button('off', '启用', '/cen_qu/status/type/1')->button('del', '删除', '/cen_qu/status/type/-1')->search('addtime_str', '开始时间', 'time')->search('addtime_end', '结束时间', 'time')->search('order', ['id_asc' => 'ID升序', 'id_desc' => 'ID降序', 'sort_asc' => '索引升序', 'sort_desc' => '索引降序', 'addtime_asc' => '时间降序', 'addtime_desc' => '时间升序',], 'select')->search('status', ['0' => '全部状态', '1' => '禁用', '2' => '启用'], 'select')->search('field', ['title' => '标题',], 'select')->search('name', '请输入查询内容', 'text')->key('id', 'ID', 'text')->key('title', '标题', 'text')->key('url', '地址', 'text')->key('type_id', '类型', 'link', [['type' => 'button', 'url' => '/cen_qu/type/field/id/name/###', 'title' => ['from_id' => 'type_id', 'table' => 'cen_qu_type', 'to_id' => 'id', 'title' => 'title'], 'field' => 'title', 'color' => '',]])->key('hot', '是否上首页', 'select', [0 => '<span style="color:#DA9151;">禁用</span>', 1 => '<span style="color:#3498db;">启用</span>'])->key('sort', '排序', 'text')->key('addtime', '添加时间', 'time')->key('endtime', '更新时间', 'time')->key('status', '状态', 'select', [0 => '<span style="color:#DA9151;">禁用</span>', 1 => '<span style="color:#3498db;">启用</span>'])->key("ext", '操作', 'link', [['type' => 'button3', 'url' => '/cen_qu/cen_qu_edit/id/###', 'title' => '编辑', 'field' => 'id', 'color' => '',],])->lists();	}	public function cen_qu_edit()	{		if (empty($_POST)) {			$cen_qu_type = db::table('cen_qu_type')->where(['pid#!=' => 0])->select();			$type_list = [];			foreach ($cen_qu_type as $k => $v) {				$type_list[$v['id']] = $v['title'];			}			$id = input('get.id');			$builder = new builder("cen_qu", ["id" => $id], "edit");			$builder->title(($id ? '编辑导航' : '添加导航'), ($id ? '这里是编辑导航' : '这里是添加导航'), '导航管理', '/cen_qu/index')->key('id', '编号', 'readonly', '', '数据编号')->key('id', '编号', 'hidden', '', '数据编号')->key('type', '类型', 'select', $type_list, '类型')->key('title', '标题', 'text', '', '标题 (全部)')->key('url', '网址', 'text', '', '链接')->key('img', '网站图标', 'img', '', 'log')->key('sort', '排序', 'text', '', '排序 (只能数字)')->key('addtime', '添加时间', 'time', '', '添加时间 (只能时间)')->key('endtime', '更新时间', 'time', '', '更新时间 (只能时间)')->key('hot', '首页显示', 'select', [1 => '显示', 0 => '不显示'], '首页显示')->key('status', '状态', 'select', [0 => '禁用', 1 => '启用'], '状态')->edit();		} else {			if (APP_DEMO) {				ajax('测试站暂时不能修改');			}			$data['title'] = iv('post.title', 'a', '标题格式错误', 1);			$data['type_id'] = iv('post.type', 'd', '类型 格式错误', 1);			$data['hot'] = iv('post.hot', 'd', '首页显示 格式错误', 1);			$data['url'] = iv('post.url', 'a', '网址 格式错误', 1);			$data['sort'] = iv('post.sort', 'a', '排序格式错误', 1);			$data['addtime'] = iv('post.addtime', 'time', '添加时间格式错误', 1);			$data['endtime'] = iv('post.endtime', 'time', '更新时间格式错误', 1);			$data['status'] = iv('post.status', 'd', '状态格式错误', 1);			$id = iv('post.id');			if (!$data['addtime']) {				$data['addtime'] = time();			}			if ($id) {				$res = db::table('cen_qu')->where(['id' => $id])->save($data);			} else {				$res = db::table('cen_qu')->add($data);			}			if ($res) {				ajax('操作成功', 1);			} else {				ajax('操作失败');			}		}	}	public function status()	{		if (APP_DEMO) {			ajax('测试站暂时不能修改');		}		$id = input('post.id');		$type = input('get.type');		$builder = new builder();		$res = $builder->set_status($id, $type, 'cen_qu');		if (isset($res[1])) {			ajax('操作成功', 1);		} else {			ajax('操作失败');		}	}	public function type()	{		$builder = new builder("cen_qu_type");		$builder->title('导航分类', '这里是导航分类', '导航分类列表', '/cen_qu/type')->button('add', '添加', '/cen_qu/type_edit')->button('no', '禁用', '/cen_qu/type_status/type/0')->button('off', '启用', '/cen_qu/type_status/type/1')->button('del', '删除', '/cen_qu/type_status/type/-1')->search('addtime_str', '开始时间', 'time')->search('addtime_end', '结束时间', 'time')->search('order', ['id_asc' => 'ID升序', 'id_desc' => 'ID降序', 'sort_asc' => '索引升序', 'sort_desc' => '索引降序', 'addtime_asc' => '时间降序', 'addtime_desc' => '时间升序',], 'select')->search('status', ['0' => '全部状态', '1' => '禁用', '2' => '启用'], 'select')->search('field', ['title' => '标题',], 'select')->search('name', '请输入查询内容', 'text')->key('id', 'ID', 'text')->key('title', '类型标题', 'text')->key('pid', '上级类型', 'link', [['type' => 'button', 'url' => '/cen_qu/type/field/id/name/###', 'title' => ['from_id' => 'pid', 'table' => 'cen_qu_type', 'to_id' => 'id', 'title' => 'title'], 'field' => 'title', 'color' => '',]])->key('sort', '排序', 'text')->key('addtime', '添加时间', 'time')->key('endtime', '更新时间', 'time')->key('status', '状态', 'select', [0 => '<span style="color:#DA9151;">禁用</span>', 1 => '<span style="color:#3498db;">启用</span>'])->key("ext", '操作', 'link', [['type' => 'button3', 'url' => '/cen_qu/type_edit/id/###', 'title' => '编辑', 'field' => 'id', 'color' => '',],])->lists();	}	public function type_edit()	{		if (empty($_POST)) {			$id = input('get.id');			$typearr = [];			$typearr["0"] = "--顶级菜单--";			$top_list = db::table("cen_qu_type")->where(["status" => 1, "pid" => 0])->order("sort asc , id desc")->select();			if ($top_list) {				$i = 1;				foreach ($top_list as $k => $v) {					$j = $i++;					$top_list[$k]['pid_list'] = db::table("cen_qu_type")->where(["status" => 1, "pid" => $v['id']])->order("sort asc , id desc")->select();					$typearr[$v["id"]] = $j . "." . $v["title"];					if ($top_list[$k]['pid_list']) {						$m = 1;						foreach ($top_list[$k]['pid_list'] as $kk => $vv) {							$n = $m++;							$top_list[$k]['pid_list'][$kk]['pid_list'] = db::table("cen_qu_type")->where(["status" => 1, "pid" => $vv['id']])->order("sort asc , id desc")->select();							$typearr[$vv["id"]] = "---" . $j . "." . $n . "." . $vv["title"];						}					}				}			}			$builder = new builder("cen_qu_type", ["id" => $id], "edit");			$builder->title(($id ? '编辑类型' : '添加类型'), ($id ? '这里是编辑类型' : '这里是添加类型'), '类型管理', '/article/type');			if ($id) {				$builder->key('id', '编号', 'readonly', '', '数据编号');				$builder->key('id', '编号', 'hidden', '', '数据编号');			}			$builder->key('title', '类型标题', 'text', '', '标题 (全部格式)')->key('pid', '上级标题', 'select', $typearr, '标题 (全部格式)')->key('addtime', '添加时间', 'time', '', '添加时间  (时间格式)')->key('sort', '排序', 'text', '', '排序  (整数格式)')->key('status', '状态', 'select', [0 => '禁用', 1 => '启用'], '状态  (整数格式)')->edit();		} else {			if (APP_DEMO) {				ajax('测试站暂时不能修改');			}			$data['title'] = iv('post.title', 'a', '商品标题 格式错误', 1);			$data['addtime'] = iv('post.addtime', 'time', '添加时间格式错误', 1);			$data['pid'] = iv('post.pid', 'd', '上级标题 格式错误', 1);			$data['sort'] = iv('post.sort', 'd', '排序格式错误', 1);			$data['status'] = iv('post.status', 'd', '状态格式错误', 1);			$id = iv('post.id');			if ($id) {				$res = db::table('cen_qu_type')->where(['id' => $id])->save($data);			} else {				$res = db::table('cen_qu_type')->add($data);			}			if ($res) {				ajax('操作成功', 1);			} else {				ajax('操作失败');			}		}	}	public function type_status()	{		if (APP_DEMO) {			ajax('测试站暂时不能修改');		}		$id = input('post.id');		$type = input('get.type');		$builder = new builder();		$res = $builder->set_status($id, $type, 'cen_qu_type');		if (isset($res[1])) {			ajax('操作成功', 1);		} else {			ajax('操作失败');		}	}}