<?phpnamespace admin;use Move\db;class share extends admin{	public function __construct()	{		parent::__construct();		if (!$this->is_game('luck')) {			ajax('这个应用你没有购买');		}	}	public function index()	{		$builder = new builder("share");		$builder->title('分享送币', '这里是分享送币', '分享送币', '/share/index')->button('add', '添加', '/share/edit')->button('no', '禁用', '/share/status/type/0')->button('off', '启用', '/share/status/type/1')->button('del', '删除', '/share/status/type/-1')->search('addtime_str', '开始时间', 'time')->search('addtime_end', '结束时间', 'time')->search('order', ['id_desc' => 'ID降序', 'id_asc' => 'ID升序', 'sort_desc' => '索引降序', 'sort_asc' => '索引升序', 'addtime_desc' => '时间降序', 'addtime_asc' => '时间升序',], 'select')->search('status', ['0' => '全部状态', '1' => '禁用', '2' => '启用'], 'select')->search('name', '请输入查询内容', 'text')->key('id', 'ID', 'text')->key('title', '活动名称', 'text')->key('mum', '奖励总数', 'text')->key('num', '奖励一所需点击数', 'text')->key('reward', '奖励一数量', 'text')->key('top1', 'top1', 'text')->key('top2', 'top2', 'text')->key('top3', 'top3', 'text')->key('top4', 'top4', 'text')->key('top5', 'top5', 'text')->key('top6', 'top6', 'text')->key('top7', 'top7', 'text')->key('top8', 'top8', 'text')->key('top9', 'top9', 'text')->key('top10', 'top10', 'text')->key('coin', '奖励币种', 'text')->key('endtime', '奖励发放时间', 'time')->key('status', '状态', 'select', [0 => '<span style="color:#DA9151;">禁用</span>', 1 => '<span style="color:#3498db;">启用</span>', 2 => '<span style="color:#3498db;">已完成</span>'])->key("ext", '操作', 'link', [['type' => 'button3', 'url' => '/share/edit/id/###', 'title' => '编辑', 'field' => 'id', 'color' => '',], ['type' => 'button2', 'url' => '/share/reward/id/###', 'title' => '去发奖', 'field' => 'id', 'color' => '', 'ajax' => '', 'exts' => ["status" => [1]]]]);		$builder->lists();	}	public function edit()	{		if (empty($_POST)) {			$id = input('get.id');			$builder = new builder("share", ["id" => $id], "edit");			$builder->title(($id ? '编辑抽奖' : '添加抽奖'), ($id ? '这里是编辑抽奖' : '这里是添加抽奖'), '抽奖管理', '/luck/index')->key('id', '编号', 'readonly', '', '数据编号')->key('id', '编号', 'hidden', '', '数据编号')->key('title', '活动名称', 'text', '', '活动名称')->key('coin', '奖励币种', 'select', 'coin_c_name_c_title', '选择币种')->key('num', '奖励一所需数量', 'text', '', '奖励一所需分享次数')->key('reward', '奖励一奖励数量', 'text', '', '奖励一奖励数量')->key('mum', '奖励总量', 'text', '', '奖励总量（先到先得）')->key('top1', 'to1奖励', 'text', '', '分享次数第一名奖励数量')->key('top2', 'to2奖励', 'text', '', '分享次数第二名奖励数量')->key('top3', 'to3奖励', 'text', '', '分享次数第三名奖励数量')->key('top4', 'to4奖励', 'text', '', '分享次数第四名奖励数量')->key('top5', 'to5奖励', 'text', '', '分享次数第五名奖励数量')->key('top6', 'to6奖励', 'text', '', '分享次数第六名奖励数量')->key('top7', 'to7奖励', 'text', '', '分享次数第七名奖励数量')->key('top8', 'to8奖励', 'text', '', '分享次数第八名奖励数量')->key('top9', 'to9奖励', 'text', '', '分享次数第九名奖励数量')->key('top10', 'to10奖励', 'text', '', '分享次数第十名奖励数量')->key('content', '规则说明', 'editor', '', '规则说明')->key('addtime', '添加时间', 'time', '', '添加时间 (只能时间)')->key('endtime', '结束时间', 'time', '', '添加时间 (只能时间)')->key('sort', '排序', 'text', '', ' 排序(只能整数)')->key('status', '状态', 'select', [0 => '禁用', 1 => '启用'], '')->edit();		} else {			if (APP_DEMO) {				ajax('测试站暂时不能修改');			}			$data['title'] = iv('post.title', 'a', '活动标题格式错误', 1);			$data['coin'] = iv('post.coin', 'w', '币种名称格式错误', 1);			$data['num'] = iv('post.num', 'd', '奖励一所需次数格式错误', 1);			$data['reward'] = iv('post.reward', 'd', '奖励一奖励格式错误', 1);			$data['mum'] = iv('post.mum', 'd', '奖励总量格式错误', 1);			$data['top1'] = iv('post.top1', 'd', 'top1奖励数量格式错误', 1);			$data['top2'] = iv('post.top2', 'd', 'top2奖励数量格式错误', 1);			$data['top3'] = iv('post.top3', 'd', 'top3奖励数量格式错误', 1);			$data['top4'] = iv('post.top4', 'd', 'top4奖励数量格式错误', 1);			$data['top5'] = iv('post.top5', 'd', 'top5奖励数量格式错误', 1);			$data['top6'] = iv('post.top6', 'd', 'top6奖励数量格式错误', 1);			$data['top7'] = iv('post.top7', 'd', 'top7奖励数量格式错误', 1);			$data['top8'] = iv('post.top8', 'd', 'top8奖励数量格式错误', 1);			$data['top9'] = iv('post.top9', 'd', 'top9奖励数量格式错误', 1);			$data['top10'] = iv('post.top10', 'd', 'top10奖励数量格式错误', 1);			$data['addtime'] = iv('post.addtime', 'time', '添加时间格式错误', 1);			$data['endtime'] = iv('post.endtime', 'time', '结束时间格式错误', 1);			$data['status'] = iv('post.status', 'd', '状态格式错误', 1);			$data['sort'] = iv('post.sort', 'd', '状态格式错误', 1);			$id = iv('post.id');			if ($id) {				$res = db::table("share")->where(["id" => $id])->save($data);			} else {				$res = db::table("share")->add($data);			}			if ($res) {				ajax('操作成功', 1);			} else {				ajax('操作失败');			}		}	}	public function status()	{		if (APP_DEMO) {			ajax('测试站暂时不能修改');		}		$id = input('post.id');		$type = input('get.type');		$builder = new builder();		show($builder->set_status($id, $type, 'share'));	}	public function user_addr()	{		$builder = new builder("share_user");		$builder->title('分享地址管理', '这里是分享地址管理', '分享地址管理', '/share/user_addr')->search('addtimer', '开始时间', 'time')->search('endtime', '结束时间', 'time')->search('order', ['id_desc' => 'ID降序', 'id_asc' => 'ID升序', 'sort_desc' => '索引降序', 'sort_asc' => '索引升序', 'addtime_desc' => '时间降序', 'addtime_asc' => '时间升序',], 'select')->search('status', ['0' => '全部状态', '1' => '禁用', '2' => '启用'], 'select')->search('name', '请输入查询内容', 'text')->key('id', 'ID', 'text')->key('userid', '用户名', 'link', [['type' => 'button', 'url' => '/user/edit/id/###', 'title' => ['from_id' => 'userid', 'table' => 'user', 'to_id' => 'id', 'title' => 'username'], 'field' => 'userid', 'color' => '',]])->key('num', '被点击次数', 'text')->key('reward', '获得奖励', 'text')->key('itemid', '项目id', 'text')->key('addtime', '识别码生成时间', 'time')->key('share', '分享人识别码', 'text')->lists();	}	public function log()	{		$builder = new builder("share_log");		$builder->title('分享记录', '这里是分享记录', '分享记录', '/share/log')->search('addtimer', '开始时间', 'time')->search('endtime', '结束时间', 'time')->search('order', ['id_desc' => 'ID降序', 'id_asc' => 'ID升序', 'sort_desc' => '索引降序', 'sort_asc' => '索引升序', 'addtime_desc' => '时间降序', 'addtime_asc' => '时间升序',], 'select')->search('status', ['0' => '全部状态', '1' => '禁用', '2' => '启用'], 'select')->search('name', '请输入查询内容', 'text')->key('id', 'ID', 'text')->key('userid', '分享用户', 'link', [['type' => 'button', 'url' => '/user/edit/id/###', 'title' => ['from_id' => 'userid', 'table' => 'user', 'to_id' => 'id', 'title' => 'username'], 'field' => 'userid', 'color' => '',]])->key('itemid', '项目id', 'text')->key('ip', '浏览人ip地址', 'text')->key('addtime', '添加时间', 'time')->lists();	}	public function reward_log()	{		$builder = new builder("share_reward");		$builder->title('分享记录', '这里是分享记录', '分享记录', '/share/reward_log')->search('addtimer', '开始时间', 'time')->search('endtime', '结束时间', 'time')->search('order', ['id_desc' => 'ID降序', 'id_asc' => 'ID升序', 'sort_desc' => '索引降序', 'sort_asc' => '索引升序', 'addtime_desc' => '时间降序', 'addtime_asc' => '时间升序',], 'select')->search('status', ['0' => '全部状态', '1' => '禁用', '2' => '启用'], 'select')->search('name', '请输入查询内容', 'text')->key('id', 'ID', 'text')->key('userid', '用户名', 'link', [['type' => 'button', 'url' => '/user/edit/id/###', 'title' => ['from_id' => 'userid', 'table' => 'user', 'to_id' => 'id', 'title' => 'username'], 'field' => 'userid', 'color' => '',]])->key('itemid', '项目id', 'text')->key('reward', '奖励数量', 'text')->key('coin', '奖励币种', 'text')->key('top', '名次', 'text')->key('addtime', '添加时间', 'time')->lists();	}	public function reward()	{		$id = iv("get.id", 'd', '参数错误');		$share = db::table('share')->where(['id' => $id])->find();		if (!$share) {			$this->dieBack('项目不存在');		}		$num = 0;		$total = 0;		$share_user = db::table('share_user')->where(['itemid' => $id, "num#>" => 0])->select();		foreach ($share_user as $k => $v) {			if ($share["num"] <= $v["num"]) {				$num = $num + 1;			}		}		$total = $share["reward"] * $num;		$user_num = count($share_user);		if ($user_num != 0) {			if ($user_num <= 10) {				$num = $user_num + $num;				for ($i = 1; $i <= $num; $i++) {					$total = $total + $share["top" . $i];				}			} else {				$num = 10 + $num;				for ($i = 1; $i <= 10; $i++) {					$total = $total + $share["top" . $i];				}			}		}		$Total = [];		$Total["num"] = $num;		$Total["mum"] = $total;		$this->assign('share', $share);		$this->assign('Total', $Total);		$this->display('game:share');	}	public function fenfa()	{		$id = iv('post.id');		$share = db::table("share")->where(["id" => $id])->find();		if (!$share) {			ajax("活动不存在");		}		if ($share["status"] == 2) {			ajax("项目已结束");		}		db::table("share")->where(["id" => $id])->save(["status" => 2]);		$share_user = db::table('share_user')->where(['itemid' => $id, "num#>" => 0])->order("num desc")->select();		if ($share_user) {			foreach ($share_user as $k => $v) {				if ($k < 10) {					$res = md('share')->fenfa($id, $v["userid"], "top" . ($k + 1));				}				if ($v["num"] >= $share["num"]) {					$res = md('share')->fenfa($id, $v["userid"]);				}			}			$msg = [];			if (isset($res[1]) && $res[1]) {				$info = db::table("share_reward")->where(["itemid" => $id])->select();				foreach ($info as $k => $v) {					if ($v["top"] != "--") {						$msg[] = "用户id" . $v["userid"] . "获得" . $v["top"] . "奖励" . $v["reward"] . $v["coin"];					} else {						$msg[] = "用户id" . $v["userid"] . "获得活动基本奖励" . $v["reward"] . $v["coin"];					}				}				ajax($msg, 1);			} else {				ajax($res[0]);			}		}	}}