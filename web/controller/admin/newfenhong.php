<?phpnamespace admin;use Move\db;use Move\ext\speal;class newfenhong extends admin{	public function __construct()	{		parent::__construct();	}	public function index()	{		$builder = new builder("newfenhong");		$builder->title('新分红管理', '这里是新分红管理', '分红列表', '/newfenhong/index')->button('add', '添加', '/newfenhong/edit')->button('no', '禁用', '/newfenhong/status/type/0')->button('del', '删除', '/newfenhong/status/type/-1')->search('addtime_str', '开始时间', 'time')->search('addtime_end', '结束时间', 'time')->search('order', ['id_desc' => 'ID降序', 'id_asc' => 'ID升序', 'sort_desc' => '索引降序', 'sort_asc' => '索引升序', 'addtime_desc' => '时间降序', 'addtime_asc' => '时间升序',], 'select')->search('status', ['0' => '全部状态', '1' => '未开始', '2' => '已完成'], 'select')->search('field', ['title' => '分红名称', 'ckcoin' => '参考币种', 'fhcoin' => '分红币种',], 'select')->search('name', '请输入查询内容', 'text')->key('id', 'ID', 'text')->key('title', '分红名称', 'text')->key('ckcoin', '参考币种', 'text')->key('fhcoin', '分红币种', 'text')->key('mum', '分红总量', 'text')->key('week', '分红时间', 'text')->key('addtime', '添加时间', 'time')->key('endtime', '编辑时间', 'time')->key('status', '状态', 'select', [0 => '<span style="color:#DA9151;">禁用</span>', 1 => '<span style="color:#3498db;">已完成</span>', 2 => '<span style="color:#3498db;">进行中</span>'])->key("exts", '分红比例管理', 'link', [['type' => 'button3', 'url' => '/newfenhong/bili/field/id/name/###', 'title' => '管理比例', 'field' => 'id', 'color' => '',],])->key("ext", '操作', 'link', [['type' => 'button3', 'url' => '/newfenhong/edit/id/###', 'title' => '编辑', 'field' => 'id', 'color' => '',],])->lists();	}	public function edit()	{		$week[1] = ['title' => '星期一', 'status' => '0', 'id' => 1];		$week[2] = ['title' => '星期二', 'status' => '0', 'id' => 2];		$week[3] = ['title' => '星期三', 'status' => '0', 'id' => 3];		$week[4] = ['title' => '星期四', 'status' => '0', 'id' => 4];		$week[5] = ['title' => '星期五', 'status' => '0', 'id' => 5];		$week[6] = ['title' => '星期六', 'status' => '0', 'id' => 6];		$week[7] = ['title' => '星期天', 'status' => '0', 'id' => 7];		if (empty($_POST)) {			$id = input('get.id');			if ($id) {				$newarr = db::table('newfenhong')->where(['id' => $id])->find('week');				$str = rtrim($newarr, ',');				$arr = explode(',', $str);				foreach ($week as $k => $v) {					foreach ($arr as $kk => $vv) {						if ($v['id'] == $vv) {							$week[$k]['status'] = 1;						}					}				}			}			$builder = new builder("newfenhong", ["id" => $id], "edit");			$builder->title(($id ? '编辑分红' : '添加分红'), ($id ? '这里是编辑分红' : '这里是添加分红'), '分红管理', '/newfenhong/index');			if ($id) {				$builder->key('id', '编号', 'readonly', '', '数据编号');				$builder->key('id', '编号', 'hidden', '', '数据编号');			}			$builder->key('title', '分红名称', 'text', '', '名称,比如填写当前是滴几期')->key('ckcoin', '参考币种', 'select', 'coin_c_name_c_title', '分红币种 ,计算的时候根据用户这个币种的持有量计算 ')->key('fhcoin', '分红币种', 'select', 'coin_c_name_c_title', '奖励币种 ,奖励给用户的币种')->key('mum', '分红总量', 'readonly', '', '奖励币种的总数量')->key('week', '分红时间', 'checkbox', $week, '星期')->key('ci', '分红周期', 'text', '', '分几次发放分红')->key('content', '分红介绍', 'editor', '', '内容 (全部)')->key('addtime', '添加时间', 'time', '', '添加时间 (只能时间)')->key('endtime', '更新时间', 'time', '', '更新时间 (只能时间)')->key('sort', '排序', 'text', '', '')->key('status', '状态', 'select', [0 => '禁用', 2 => '开始'], '')->edit();		} else {			if (APP_DEMO) {				ajax('测试站暂时不能修改');			}			$data['title'] = iv('post.title', 'a', '分红名称 格式错误', 1);			$data['ckcoin'] = iv('post.ckcoin', 'w', '参考币种 格式错误', 1);			$data['fhcoin'] = iv('post.fhcoin', 'w', '分红币种 格式错误');			$data['week'] = iv('post.week');			$data['ci'] = iv('post.ci', 'd', '分红周期 格式错误', 1);			$data['content'] = iv('post.content');			$data['addtime'] = iv('post.addtime', 'time', '添加时间 格式错误', 1);			$data['endtime'] = iv('post.endtime', 'time', '更新时间 格式错误', 1);			$data['status'] = iv('post.status', 'd', '状态 格式错误', 1);			$id = iv('post.id');			foreach ($week as $k => $v) {				if (isset($_POST['week_' . $v['id']])) {					$data['week'] .= $v['id'] . ',';				}			}			if (!$data['week']) {				ajax('请选择分红时间');			}			if ($id) {				$res = db::table('newfenhong')->where(['id' => $id])->save($data);			} else {				$res = db::table('newfenhong')->add($data);			}			if ($res) {				ajax('操作成功', 1);			} else {				ajax('操作失败');			}		}	}	public function bili()	{		$fenhongid = iv('get.name', 'd', '分红id 格式错误', 1);		if (!$fenhongid) {			$fenhongid = '';		}		$builder = new builder("newfenhong_bili");		$builder->title('分红比例管理', '这里是分红比例管理', '分红比例列表', '/newfenhong/bili')->button('add', '添加', "/newfenhong/bili_edit/pid/" . $fenhongid)->button('no', '禁用', '/newfenhong/bili_status/type/0')->button('off', '开始', '/newfenhong/bili_status/type/1')->button('del', '删除', '/newfenhong/bili_status/type/-1')->search('addtime_str', '开始时间', 'time')->search('addtime_end', '结束时间', 'time')->search('order', ['id_desc' => 'ID降序', 'id_asc' => 'ID升序', 'sort_desc' => '索引降序', 'sort_asc' => '索引升序', 'addtime_desc' => '时间降序', 'addtime_asc' => '时间升序',], 'select')->search('status', ['0' => '全部状态', '1' => '未开始', '2' => '已完成'], 'select')->search('field', ['title' => '分红名称', 'ckcoin' => '参考币种', 'fhcoin' => '分红币种',], 'select')->search('name', '请输入查询内容', 'text')->key('id', 'ID', 'text')->key('pid', '分红项目标题', 'link', [['type' => 'button', 'url' => '/newfenhong/index/field/id/name/###', 'title' => ['from_id' => 'pid', 'table' => 'newfenhong', 'to_id' => 'id', 'title' => 'title'], 'field' => 'pid', 'color' => '',]])->key('min', '持有数量下限', 'text')->key('max', '持有数量上限', 'text')->key('bili', '分红比例', 'text')->key('addtime', '添加时间', 'time')->key('status', '状态', 'select', [0 => '<span style="color:#DA9151;">禁用</span>', 1 => '<span style="color:#3498db;">启用</span>'])->key("ext", '操作', 'link', [['type' => 'button3', 'url' => "/newfenhong/bili_edit/id/###/pid/", 'title' => '编辑', 'field' => 'id', 'color' => '',],])->lists();	}	public function bili_edit()	{		if (empty($_POST)) {			$id = input('get.id');			$builder = new builder("newfenhong_bili", ["id" => $id], "edit");			if (!$id) {				$pid = iv('get.pid', 'd', '分红id 格式错误', 1);				if ($pid) {					$data['list']['pid'] = $pid;				} else {					$data['list']['pid'] = '';				}				$builder->data($data);			} else {			}			$builder->title(($id ? '编辑分红比例管理' : '分红比例管理'), ($id ? '这里是编辑分红比例管理' : '这里是添加分红比例管理'), '分红比例管理', '/newfenhong/bili/id/' . $pid);			if ($id) {				$builder->key('id', '编号', 'readonly', '', '数据编号');				$builder->key('id', '编号', 'hidden', '', '数据编号');			}			$builder->key('pid', '分红名称', 'readonly', '', "分红编号ID")->key('pid', '分红名称', 'hidden', '', "分红编号ID")->key('mum', '分红总量', 'readonly', '', '奖励币种的总数量')->key('min', '持有数量下限', 'text', '', '达到该比例条件的最小值')->key('max', '持有数量上限', 'text', '', '满足该比例条件的最大值')->key('bili', '比例', 'text', '', '%')->key('addtime', '添加时间', 'time', '', '添加时间 (只能时间)')->key('sort', '排序', 'text', '', '')->key('status', '状态', 'select', [0 => '禁用', 1 => '启用'], '')->edit();		} else {			if (APP_DEMO) {				ajax('测试站暂时不能修改');			}			$data['pid'] = iv('post.pid', 'd', '分红ID 格式错误');;			$data['min'] = iv('post.min', 'xnb', '持有数量下限 格式错误', 1);			$data['max'] = iv('post.max', 'xnb', '持有数量上限 格式错误');			$data['bili'] = iv('post.bili', 'xnb', '比例 格式错误');			$data['addtime'] = iv('post.addtime', 'time', '添加时间 格式错误', 1);			$data['status'] = iv('post.status', 'd', '状态 格式错误', 1);			$id = iv('post.id');			if ($data['max'] <= $data['min']) {				ajax("上限必须大于下限");			}			$bili_a = db::table("newfenhong_bili")->where(["pid" => $data['pid'], "min#<" => $data['min'], "max#>" => $data['min']])->find();			if ($bili_a) {				ajax("与前一区间重合");			}			$bili_b = db::table("newfenhong_bili")->where(["pid" => $data['pid'], "min#<" => $data['max'], "max#>" => $data['max']])->find();			if ($bili_b) {				ajax("与后一区间重合");			}			$bili_c = db::table("newfenhong_bili")->where(["pid" => $data['pid'], "min#>" => $data['min'], "max#>" => $data['max']])->find();			if ($bili_c) {				ajax("包含前面的区间");			}			if ($id) {				$res = db::table('newfenhong_bili')->where(['id' => $id])->save($data);			} else {				$res = db::table('newfenhong_bili')->add($data);			}			if ($res) {				ajax('操作成功', 1);			} else {				ajax('操作失败');			}		}	}	public function status()	{		if (APP_DEMO) {			ajax('测试站暂时不能修改');		}		$id = input('post.id');		$type = input('get.type');		$builder = new builder();		show($builder->set_status($id, $type, 'newfenhong'));	}	public function bili_status()	{		if (APP_DEMO) {			ajax('测试站暂时不能修改');		}		$id = input('post.id');		$type = input('get.type');		$builder = new builder();		show($builder->set_status($id, $type, 'newfenhong_bili'));	}	public function log()	{		$builder = new builder("fenhong_log");		$builder->title('分红记录', '这里是分红记录', '分红记录', '/issue/log')->search('addtime_str', '开始时间', 'time')->search('addtime_end', '结束时间', 'time')->search('order', ['id_desc' => 'ID降序', 'id_asc' => 'ID升序', 'sort_desc' => '索引降序', 'sort_asc' => '索引升序', 'addtime_desc' => '时间降序', 'addtime_asc' => '时间升序',], 'select')->search('status', ['0' => '全部状态', '1' => '分红失败', '2' => '分红成功'], 'select')->search('field', ['title' => '分红名称', 'ckcoin' => '参考币种', 'fhcoin' => '分红币种',], 'select')->search('name', '请输入查询内容', 'text')->key('id', 'ID', 'text')->key('userid', '用户名', 'link', [['type' => 'button', 'url' => '/user/edit/id/###', 'title' => ['from_id' => 'userid', 'table' => 'user', 'to_id' => 'id', 'title' => 'username'], 'field' => 'userid', 'color' => '',]])->key('name', '分红名称', 'text')->key('coinname', '分红币种', 'text')->key('coinjian', '奖励币种', 'text')->key('fenzong', '分红总数', 'text')->key('price', '每个奖励', 'text')->key('num', '持有数量', 'text')->key('mum', '分红数量', 'text')->key('addtime', '分红时间', 'time')->key('status', '状态', 'select', [0 => '<span style="color:#DA9151;">分红失败</span>', 1 => '<span style="color:#3498db;">分红成功</span>'])->lists();	}}