<?phpnamespace admin;use Move\db;use Move\ext\update;use Move\ext\page;class cloud extends admin{	public $new_version = [];	public $kefu = [];	public $theme = [];	public $pages = [];	public $current_version = [];	public function __construct()	{		parent::__construct();	}	public function index()	{		echo $this->display('public:header', 1);		// echo '<iframe id="market" src="http://www.movesay.com" name="main" width="100%" height="100%" frameborder="0" scrolling="yes" style="overflow: visible;bottom: 0;position: absolute;top: 53px;left: 0px;"></iframe>';		echo $this->display('public:footer', 1);		echo "<script>$('.movesay_up').hide();</script>";		die;	}	public function update()	{		$updata = new \ext\update();		$updata->get_fresh_version();		$this->new_version = db::table("version")->order("`name` desc")->find('name');		$this->current_version = file_get_contents(APP_PATH . '/backup/version.ini');		$count = db::table("version")->count();		$PageObj = new page($count, 15);		$show = $PageObj->show();		$list = db::table("version")->order("`name` desc")->limit($PageObj->firstRow, $PageObj->listRows)->select();		$this->pages = ['show' => $show, 'list' => $list];		$this->display();	}	public function version()	{		$id = iv('get.id', 'd', '参数格式错误');		$version = db::table('version')->where(['id' => $id])->find();		exit(json_encode($version['log']));	}	public function shengji()	{		$this->id = iv('get.id', 'd', '参数格式错误');		$this->version = db::table('version')->where(['id' => $this->id])->find();		$this->current_version = file_get_contents(APP_PATH . '/backup/version.ini');		if ($this->version['name'] == $this->current_version) {			redirect('/admin/cloud/version');		}		$this->display();	}	public function shengji_up()	{		$mm = mm();		if ($mm['shouhou'] < time()) {			ajax('您的售后时间已经到期');		}		$name = iv('post.name');		$current_version = file_get_contents(APP_PATH . '/backup/version.ini');		$versions = db::table('version')->order('name asc')->select();		$nextVersion = '';		foreach ($versions as $v) {			if (version_compare($v['name'], $current_version) == 1) {				$nextVersion = $v['name'];				break;			}		}		if ($name != $nextVersion) {			ajax('此版本不允许当前版本升级，请不要跳过中间版本。');		}		set_time_limit(0);		$updata = new \ext\update();		$res = $updata->up_install($name);		if (isset($res[1])) {			ajax($res[0], 1);		} else {			ajax($res[0]);		}	}	public function shengji_copy()	{		$this->id = iv('get.id');		$this->version = db::table('version')->where(['id' => $this->id])->find();		$this->current_version = file_get_contents(APP_PATH . '/backup/version.ini');		if ($this->version['name'] == $this->current_version) {			redirect('/admin/cloud/version');		}		$this->display();	}	public function shengji_copy_up()	{		set_time_limit(0);		$name = iv('post.name');		$updata = new \ext\update();		$res = $updata->up_install_copt($name);		if (isset($res[1])) {			ajax('操作成功', 1);		} else {			ajax('操作失败');		}	}	public function shengji_database()	{		$this->id = iv('get.id');		$this->version = db::table('version')->where(['id' => $this->id])->find();		$this->current_version = file_get_contents(APP_PATH . '/backup/version.ini');		if ($this->version['name'] == $this->current_version) {			redirect('/admin/cloud/version');		}		$this->display();	}	public function shengji_database_up()	{		$name = iv('post.name');		$sql_path = APP_PATH . "/backup/update/" . $name . "/new/update.sql";		if (!file_exists($sql_path)) {			ajax('本次更新不需要升级数据库', 1);			die;		}		$updata = new \ext\update();		$res = $updata->executeSqlFile($sql_path);		if (isset($res[1])) {			file_put_contents(APP_PATH . "/backup/version.ini", $name);			ajax('数据库升级成功', 1);		} else {			ajax('数据库升级失败');		}	}	public function shengji_info()	{		$id = iv('get.id');		db::table('version')->where(['id' => $id])->save(["endtime" => time()]);		$this->version = db::table('version')->where(['id' => $id])->find();		file_put_contents(APP_PATH . "/backup/version.ini", $this->version['name']);		$this->current_version = file_get_contents(APP_PATH . '/backup/version.ini');		$this->display();	}	public function game()	{		$builder = new builder("version_game");		$builder->title('应用管理', '', '', '/cloud/game')->button('no', '禁用', '/cloud/game_status/type/0')->button('off', '启用', '/cloud/game_status/type/1')->button('del', '删除', '/cloud/game_status/type/-1')->button('up', '检查更新', '/cloud/game_gengxin')->search('addtime_str', '开始时间', 'time')->search('addtime_end', '结束时间', 'time')->search('order', ['id_desc' => 'ID降序', 'id_asc' => 'ID升序', 'sort_desc' => '索引降序', 'sort_asc' => '索引升序', 'addtime_desc' => '时间降序', 'addtime_asc' => '时间升序',], 'select')->search('status', ['0' => '全部状态', '1' => '禁用', '2' => '启用'], 'select')->search('field', ['title' => '标题', 'name' => '名称'], 'select')->search('name', '请输入查询内容', 'text')->key('id', 'ID', 'text')->key('name', '应用标识', 'text')->key('title', '应用名称', 'text')->key('img', '应用图标', 'img')->key('price', '价格', 'text')->key('url', '应用链接', 'text')->key('shuoming', '应用说明', 'text')->key('anzhuang', '安装', 'select', [0 => '<span style="color:#DA9151;">未安装</span>', 1 => '<span style="color:#3498db;">已安装</span>'])->key('menu', '前台显示', 'select', [0 => '<span style="color:#DA9151;">不显示</span>', 1 => '<span style="color:#3498db;">显示</span>'])->key('sort', '排序', 'text')->key('addtime', '添加时间', 'time')->key('endtime', '更新时间', 'time')->key('status', '状态', 'select', [0 => '<span style="color:#DA9151;">禁用</span>', 1 => '<span style="color:#3498db;">启用</span>'])->key("ext", '操作', 'link', [['type' => 'button3', 'url' => '/cloud/game_edit/id/###', 'title' => '编辑', 'field' => 'id', 'color' => '',], ['type' => 'button2', 'url' => '/cloud/game_install/id/###', 'title' => '安装', 'field' => 'id', 'color' => '', 'ajax' => 'get', 'exts' => ["anzhuang" => [0]],], ['type' => 'button2', 'url' => '/cloud/game_uninstall/id/###', 'title' => '卸载', 'field' => 'id', 'color' => '#DA9151', 'ajax' => 'get', 'exts' => ["anzhuang" => [1]],],])->lists();	}	public function game_edit()	{		if (empty($_POST)) {			$id = input('get.id');			$builder = new builder("version_game", ["id" => $id], "edit");			$builder->title(($id ? '编辑应用' : '添加应用'), ($id ? '这里是编辑应用' : '这里是添加应用'), '应用管理', '/cloud/game');			if ($id) {				$builder->key('id', '编号', 'readonly', '', '数据编号');				$builder->key('id', '编号', 'hidden', '', '数据编号');			}			$builder->key('name', '应用标识', 'text', '', '请不要修改');			$builder->key('title', '标题', 'text', '', '应用标题');			$builder->key('shuoming', '说明', 'text', '', '应用说明');			$builder->key('img', '图标', 'img', '', '应用标题');			$builder->key('menu', '前台显示', 'select', [0 => '不显示', 1 => '显示'], '前台显示');			$builder->key('url', '链接', 'text', '', '应用链接');			$builder->key('sort', '排序', 'text', '', '排序 (只能数字)');			$builder->key('addtime', '添加时间', 'time', '', '添加时间 (只能时间)  不填会增自动生成');			$builder->key('status', '状态', 'select', [0 => '禁用', 1 => '启用'], '状态')->edit();		} else {			if (APP_DEMO) {				ajax('测试站暂时不能修改');			}			$data['name'] = iv('post.name', '', '应用标识格式错误');			$data['title'] = iv('post.title', '', '标题格式错误', 1);			$data['shuoming'] = iv('post.shuoming', '', '标题格式错误', 1);			$data['menu'] = iv('post.menu', '', '前台显示格式错误', 1);			$data['img'] = iv('post.img', '', '图片格式错误', 1);			$data['url'] = iv('post.url', '', '链接格式错误', 1);			$data['sort'] = iv('post.sort', 'd', '排序格式错误 只能是数字', 1);			$data['addtime'] = iv('post.addtime', 'time', '添加时间格式错误', 1);			$data['status'] = iv('post.status', 'd', '状态格式错误', 1);			$id = iv('post.id', 'd', '参数错误', 1);			if (!$data['addtime']) {				$data['addtime'] = time();			}			$data['endtime'] = time();			if ($id) {				$res = db::table('version_game')->where(['id' => $id])->save($data);			} else {				$res = db::table('version_game')->add($data);			}			if ($res) {				\Move\cache::clear();				cache(null);				ajax('操作成功', 1);			} else {				ajax('操作失败');			}		}	}	public function game_status()	{		if (APP_DEMO) {			ajax('测试站暂时不能修改');		}		$id = input('post.id');		$type = input('get.type');		$builder = new builder();		$res = $builder->set_status($id, $type, 'version_game');		if (isset($res[1])) {			ajax('操作成功', 1);		} else {			ajax('操作失败');		}	}	public function game_install()	{		if (APP_DEMO) {			ajax('测试站暂时不能修改');		}		$id = iv('get.id', 'd', '参数错误');		$game = db::table('version_game')->where(['id' => $id])->find();		if (!$game) {			ajax('应用不存在');		}		if (!$this->is_game($game['name'])) {			// ajax('应用没有购买');		}		$res = db::table('version_game')->where(['id' => $id])->save(['anzhuang' => 1]);		if ($res) {			ajax('操作成功', 1);		} else {			ajax('操作失败');		}	}	public function game_gengxin()	{		$ext = new \ext\game();		$ext->check();		ajax('更新成功', 1);	}	public function game_uninstall()	{		if (APP_DEMO) {			ajax('测试站暂时不能修改');		}		$id = iv('get.id', 'd', '参数错误');		$game = db::table('version_game')->where(['id' => $id])->find();		if (!$game) {			ajax('应用不存在');		}		$res = db::table('version_game')->where(['id' => $id])->save(['anzhuang' => 0]);		if ($res) {			ajax('操作成功', 1);		} else {			ajax('操作失败');		}	}	public function game_menu()	{		$id = iv('get.id');		$menu = iv('get.menu');		$game = db::table('version_game')->where(['id' => $id])->find();		if (!$game) {			ajax('应用不存在');		}		$res = db::table('version_game')->where(['id' => $id])->save(['menu' => $menu]);		if ($res) {			ajax('操作成功', 1);		} else {			ajax('操作失败');		}	}	public function kefu()	{		$dir = APP_PATH . "/template/home/kefu";		$fileArr = [];		$mianfei = '';		if (is_readable($dir)) {			$file = scandir($dir);			if ($file) {				foreach ($file as $k => $v) {					if ($v != '.' && $v != '..') {						if (file_get_contents($dir . '/' . $v . '/index.ini')) {							$mianfei[$v] = file_get_contents($dir . '/' . $v . '/index.ini');							$fileArr[$v] = 1;						} else {							$mianfei[$v] = '';							$fileArr[$v] = 0;						}					}				}			}		}		$this->assign('fileArr', $fileArr);		$this->assign('mianfei', $mianfei);		$this->display();	}	public function kefu_status()	{	}	public function theme()	{		$dir = APP_PATH . "/static";		$fileArr = [];		if (is_readable($dir)) {			$file = scandir($dir);			if ($file) {				$i = 0;				foreach ($file as $k => $v) {					if ($v != '.' && $v != '..') {						$i = $i + 1;						if (file_exists($dir . '/' . $v . '/info/index.png')) {							if (file_get_contents($dir . '/' . $v . '/info/index.png')) {								$mianfei[$v] = file_get_contents($dir . '/' . $v . '/info/index.ini');								$fileArr[$v] = 1;							} else {								$mianfei[$v] = '';								$fileArr[$v] = 0;							}						}					}				}			}		}		$this->assign('fileArr', $fileArr);		$this->theme = @file_get_contents(APP_PATH . '/backup/template.ini');		$this->display();	}	public function theme_status()	{		if (APP_DEMO) {			ajax('测试站暂时不能修改');		}		$theme = iv('get.theme');		$res = @file_put_contents(APP_PATH . '/backup/template.ini', $theme);		if ($res) {			ajax('操作成功', 1);		} else {			ajax('操作失败');		}	}	public function theme_gengxin()	{		if (MS_CODE != "95D3A7E98EE9F913B462B87C73DS") {			$json_data = json_decode(@file_get_contents("http://auth.movesay.com/movesay/get_tmp_list/mscode/" . MS_CODE), true);			if (!$json_data || !$json_data['ext']) {				ajax('远程模板获取失败');			}			$mm = mm();			if (!$mm || !isset($mm['tmp'])) {				ajax('本地缓存获取失败');			}			foreach ($json_data['ext'] as $k => $v) {				if (!in_array($v['name'], explode("|", $mm['tmp']))) {					$this->theme_del(APP_PATH . "/template/" . $v['name']);					$this->theme_del(APP_PATH . "/static/" . $v['name']);				}			}		}		ajax('更新成功', 1);	}	protected function theme_del($path)	{		$op = @dir($path);		if ($op) {			while (false != ($item = $op->read())) {				if ($item == '.' || $item == '..') {					continue;				}				if (is_dir($op->path . '/' . $item)) {					$this->theme_del($op->path . '/' . $item);					@rmdir($op->path . '/' . $item);				} else {					@unlink($op->path . '/' . $item);				}			}			@rmdir($path);		}	}	public function blendent()	{		$dir = APP_PATH . '/static/default/home/css/style.css';		$input = file_get_contents($dir);		$start = '.movesay{color:';		$end = '}';		$substr = substr($input, strlen($start) + strpos($input, $start), (strlen($input) - strpos($input, $end)) * (-1));		if (empty($_POST)) {			$this->assign('picker', $substr);			$this->display();		} else {			if (APP_DEMO) {				ajax('测试站暂时不能修改');			}			$style = iv('post.style');			$dqys = $res = file_put_contents($dir, str_replace($substr, $style, file_get_contents($dir)));			if ($res) {				ajax('操作成功', 1);			} else {				ajax('操作失败');			}		}	}}