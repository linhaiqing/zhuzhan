<?phpnamespace admin;use Move\db;use Move\ext\client;class coin extends admin{	public function __construct()	{		parent::__construct();	}	public function mr()	{		if (empty($_POST)) {			$sys_config = db::table('sys_config')->select();			foreach ($sys_config as $k => $v) {				$data['list'] [$v['name']] = $v['value'];			}			$mymc_coin = new \mymc\coin();			$coin_list = $mymc_coin->all_xnb();			$coin_list_arr = [];			$coin_list_arr[0] = '选择币种';			if ($coin_list) {				foreach ($coin_list as $k => $v) {					if ($v['status'] == 1) {						$coin_list_arr [$v['name']] = $v['title'];					}				}			}			$builder = new builder();			$builder->data($data)->url()->title('默认配置', '')->key('mr_coin', '默认币种', 'select', $coin_list_arr, '默认币种')->edit();		} else {			if (APP_DEMO) {				ajax('测试站暂时不能修改');			}			$data['mr_coin'] = iv('post.mr_coin', 'w', '默认币种', 1);			$res = 0;			foreach ($data as $k => $v) {				if (md('sys_config')->setValueOrName($k, $v)) {					$res = 1;				}			}			if ($res) {				mc("msphp_sys_config", null);				ajax('操作成功', 1);			} else {				ajax('操作失败');			}		}	}	public function index()	{		$builder = new builder('coin');		$builder->title('币种配置', '这里是币种配置', '币种列表', '/coin/index')->button('add', '添加', '/coin/edit')->button('no', '禁用', '/coin/status/type/0')->button('off', '启用', '/coin/status/type/1')->button('del', '删除', '/coin/status/type/-1')->search('addtime_str', '开始时间', 'time')->search('addtime_end', '结束时间', 'time')->search('order', ['id_desc' => 'ID降序', 'id_asc' => 'ID升序', 'sort_desc' => '索引降序', 'sort_asc' => '索引升序', 'addtime_desc' => '时间降序', 'addtime_asc' => '时间升序',], 'select')->search('status', ['0' => '全部状态', '1' => '禁用', '2' => '启用'], 'select')->search('field', ['name' => '名称', 'title' => '标题',], 'select')->search('name', '请输入查询内容', 'text')->key('id', 'ID', 'text')->key('name', '名称', 'text')->key('title', '标题', 'text')->key('img', '图片', 'img')->key('wallet', '类型', 'text')->key('round', '小数位数', 'text')->key('sell_bili', '总卖出比例', 'text')->key('sell_jin', '每日卖出比例', 'text')->key('sort', '排序', 'text')->key('addtime', '添加时间', 'time')->key('endtime', '更新时间', 'time')->key('status', '状态', 'select', [0 => '<span style="color:#DA9151;">禁用</span>', 1 => '<span style="color:#3498db;">启用</span>'])->key("ext", '操作', 'link', [['type' => 'button3', 'url' => '/coin/edit/id/###', 'title' => '编辑', 'field' => 'id', 'color' => '',], ['type' => 'button2', 'url' => '/coin/info/id/###', 'title' => '查看钱包', 'field' => 'id', 'color' => '', 'exts' => ["wallet" => ['qbb', 'eth', 'deth', 'newcoin']],]])->lists();	}	public function info()	{		$id = iv('get.id');		$coin = md('coin')->getById($id);		if (!$coin) {			echo '币种错误';			die;		}		if ($coin['wallet'] == 'gxb') {			$gxb = new \ext\coin\gxb($coin['dj_zj'], $coin['dj_dk'], $coin['dj_yh'], $coin['dj_mm']);			$gxb->unlock();			$gxb_info = $gxb->req(['method' => 'info']);			$info['coin'] = $coin['title'] . '(' . $coin['name'] . ')';			$info['c']['version'] = $gxb_info ? '对接成功（版本号暂无）' : '对接失败';			$info['c']['headers'] = $gxb_info['head_block_num'];			$info['c']['blocks'] = $gxb_info['head_block_num'];			$gxb_balance = $gxb->req(['method' => 'list_account_balances']);			$info['c']['balance'] = $gxb_balance[0]['amount'] / 100000;		} else if ($coin['wallet'] == 'eth' || $coin['wallet'] == 'deth' || $coin['wallet'] == 'newcoin') {			$host = $coin['dj_zj'];			$port = $coin["dj_dk"];			$password = $coin['dj_jm'];			$pararm = 'coin=' . $coin['wallet'] . '&name=' . $coin['name'] . '&action=version';			$qianbao = \ext\coin\mscoin::mycurl($host, $port, $password, $pararm);			$info['coin'] = $coin['title'] . '(' . $coin['name'] . ')';			if (isset($qianbao['status']) && $qianbao['status'] == 1) {				$info['c']['version'] = '对接成功!' . '  版本:' . $qianbao['msg']['version'];				$info['c']['headers'] = $qianbao['msg']['blocks'];				$info['c']['blocks'] = $qianbao['msg']['process'];				$info['c']['balance'] = $qianbao['msg']['total'];				$info['c']['nodes'] = $qianbao['msg']['nodes'];				$info['c']['account_count'] = @$qianbao['msg']['account_count'];			} else {				$info['c']['version'] = '对接失败' . $qianbao['msg'];				$info['c']['headers'] = '';				$info['c']['blocks'] = '';				$info['c']['balance'] = '';				$info['c']['nodes'] = '';				$info['c']['account_count'] = '';			}			$info['num'] = db::table('user_coin')->sum($coin['name']) + db::table('user_coin')->sum($coin['name'] . 'd');		} else {			$info['coin'] = $coin['title'] . '(' . $coin['name'] . ')';			$dj_username = $coin['dj_yh'];			$dj_password = $coin['dj_mm'];			$dj_address = $coin['dj_zj'];			$dj_port = $coin['dj_dk'];			$client = new client($dj_username, $dj_password, $dj_address, $dj_port, 5, [], 1);			if ($client) {				$info['c'] = $client->execute('getinfo');			} else {				$info['c']['version'] = '钱包链接失败';			}			$info['c']['headers'] = $client->execute('getblockcount');			$info['num'] = db::table('user_coin')->sum($coin['name']) + db::table('user_coin')->sum($coin['name'] . 'd');			if ($coin['type'] == 'icochain') {				$info['c']['balance'] = $info['c'][$coin['name'] . 'balance'];			}		}		$this->assign('data', $info);		$this->display();	}	public function edit()	{		if (empty($_POST)) {			$id = input('get.id');			$builder = new builder("coin", ["id" => $id], "edit");			$builder->title(($id ? '编辑币种' : '添加币种'), ($id ? '这里是编辑币种' : '这里是添加币种'), '币种管理', '/coin/index')->key('id', '编号', 'readonly', '', '数据编号');			$builder->key('id', '编号', 'hidden', '', '数据编号');			if (!$id) {				$builder->key('name', '名称', 'text', '', '名称 (只能字母)');			} else {				$builder->key('name', '名称', 'readonly', '', '名称');				$builder->key('name', '名称', 'hidden', '', '名称');			}			$builder->key('title', '标题', 'text', '', '标题 (全部)')->key('img', '图片', 'image', '', '图片')->key('wallet', '类型', 'select', ['rmb' => '国家币', 'rgb' => '认购币', 'qbb' => '钱包币', 'tsb' => '特殊币', 'eth' => '以太坊', 'deth' => '以太坊代币', 'newcoin' => '新币到账', 'wyc' => '网页币', 'asch' => '阿希币代币'], '币种类型  特殊币：表示不能实现对接自动到账类型的')->key('tsb_addr', '特殊币(网页币新币)转入地址', 'text', '', '特殊币(网页币)统一转入这个地址 实现人工到账')->key('round_min', '验证最小', 'text', '', '新币地址转币验证最小值')->key('round_max', '验证最大', 'text', '', '新币地址转币验证最大值')->key('round', '小数位数', 'text', '', '币种的小数位数')->key('jk_dc', '总额比上次多出', 'text', '', '% 检查币种这次统计总额比上次多出多少比例短信通知 (重要防止刷币，修改数据等)')->key('jk_js', '总额比上次减少', 'text', '', '% 检查币种这次统计总额比上次减少多少比例短信通知')->key('jk_jy', '是否关闭交易', 'select', [0 => '不关闭', 1 => '关闭'], '检查出现异常是否关闭交易')->key('jk_gz', '是否关闭转出', 'select', [0 => '不关闭', 1 => '关闭'], '检查出现异常是否关闭转出')->key('jk_wz', '是否关闭网站', 'select', [0 => '不关闭', 1 => '关闭'], '检查出现异常是否关闭网站')->key('jk_zy', '提醒转移', 'text', '', '监控钱包实际金额 达到多少短信提醒转移 钱包币使用')->key('jk_bc', '提醒补充', 'text', '', '监控钱包实际金额 减少多少短信提醒补充 钱包币使用')->key('sell_bili', '挂单比例', 'text', '', '%只能挂单当前账户的多少')->key('sell_jin', '今日最多卖出', 'text', '', '%，今日只能卖出账号余额的百分币')->key('dj_zj', '钱包服务器ip', 'text', '', '对接钱包使用 认购币类型的  不用填写')->key('dj_dk', '钱包服务器端口', 'text', '', '对接钱包使用 认购币类型的  不用填写')->key('dj_yh', '钱包服务器用户名', 'text', '', '对接钱包使用 认购币类型的  不用填写 (网页币填写公钥)')->key('dj_mm', '钱包服务器密码', 'password', '', '对接钱包使用 认购币类型的  不用填写(网页币填写密码)')->key('dj_jm', '钱包加密密码', 'password', '', '对接钱包使用 钱包没有加密的不用填写')->key('js_yw', '英文名称', 'text', '', '英文名称')->key('zr_jz', '转入状态', 'select', ['1' => '正常转入', '0' => '禁止转入'], '转入状态')->key('zr_dz', '确认次数', 'text', '', '转入确认次数必须填写,且大于0')->key('zr_sm', '转入说明', 'textarea', '', '转入说明')->key('zc_fee', '转出手续费', 'text', '', '% (填写1-100 任意数字) 转出手续费比例')->key('zc_fee_limit', '矿工费', 'text', '', '固定矿工费')->key('zc_min', '最小转出数量', 'text', '', '推荐:正数且大于0.01')->key('zc_max', '最大转出数量', 'text', '', '推荐:正数且大于10000')->key('zc_jz', '转出状态', 'select', ['1' => '正常转出', '0' => '禁止转出'], '转出状态')->key('zc_zd', '转出自动', 'text', '', '推荐:正数且大于10 (小于这个数自动转出,大于这个数后台审核 )为了安全不要设置太大')->key('zc_addr', '转出状态', 'select', ['1' => '验证地址', '0' => '不验证'], '是否验证转出地址')->key('js_sm', '详细介绍', 'editor', '', '详细介绍')->key('cs_yf', '研发者', 'text', '', '研发者')->key('cs_sf', '核心算法', 'text', '', '核心算法')->key('cs_fb', '发布日期', 'text', '', '发布日期')->key('cs_zl', '发行总量', 'text', '', '发行总量')->key('cs_cl', '存量', 'text', '', '存量')->key('cs_zm', '证明方式', 'text', '', '证明方式')->key('cs_nd', '难度调整', 'text', '', '难度调整')->key('cs_qk', '区块速度', 'text', '', '区块速度')->key('cs_jl', '区块奖励', 'text', '', '区块奖励')->key('cs_ts', '主要特色', 'text', '', '主要特色')->key('cs_bz', '不足之处', 'text', '', '不足之处')->key('tp_zs', '评价星级', 'text', '', '评价星级')->key('tp_js', '技术评分', 'text', '', '技术评分')->key('tp_yy', '应用评分', 'text', '', '应用评分')->key('tp_qj', '前景评分', 'text', '', '前景评分')->key('sort', '排序', 'text', '', '排序 (只能数字)')->key('addtime', '添加时间', 'time', '', '添加时间 (只能时间)')->key('endtime', '更新时间', 'time', '', '更新时间 (只能时间)')->key('status', '状态', 'select', [0 => '禁用', 1 => '启用'], '状态')->edit();		} else {			if (APP_DEMO) {				ajax('测试站暂时不能修改');			}			$data['type'] = 'xnb';			$data['name'] = strtolower(iv('post.name', 'w', '名称 格式错误'));			$data['title'] = iv('post.title', 'a', '标题 格式错误');			$data['img'] = iv('post.img', 'a', '图片 格式错误');			$data['wallet'] = iv('post.wallet', 'w', '类型 格式错误');			$data['tsb_addr'] = iv('post.tsb_addr');			$data['round_min'] = iv('post.round_min', 'xnb', '地址验证最小值', 1);			$data['round_max'] = iv('post.round_max', 'xnb', '地址验证最大值', 1);			$data['round'] = iv('post.round', 'd', '小数位数 格式错误');			$data['sell_bili'] = iv('post.sell_bili', 'cny', '挂单比例 格式错误', 1);			$data['sell_jin'] = iv('post.sell_jin', 'cny', '今日最多卖出 格式错误', 1);			$data['jk_dc'] = iv('post.jk_dc', 'cny', '总额比上次多出 格式错误', 1);			$data['jk_js'] = iv('post.jk_js', 'cny', '总额比上次减少 格式错误', 1);			$data['jk_jy'] = iv('post.jk_jy', 'd', '是否关闭交易 格式错误', 1);			$data['jk_gz'] = iv('post.jk_gz', 'd', '是否关闭转出 格式错误', 1);			$data['jk_wz'] = iv('post.jk_wz', 'd', '是否关闭网站 格式错误', 1);			$data['jk_zy'] = iv('post.jk_zy', 'cny', '提醒转移 格式错误', 1);			$data['jk_bc'] = iv('post.jk_bc', 'cny', '提醒补充 格式错误', 1);			$data['dj_zj'] = iv('post.dj_zj', 'a', '钱包服务器ip 格式错误', 1);			$data['dj_dk'] = iv('post.dj_dk', 'd', '钱包服务器端口 格式错误', 1);			$data['dj_yh'] = iv('post.dj_yh', 'a', '钱包服务器用户名 格式错误', 1);			$data['dj_mm'] = iv('post.dj_mm', 'a', '钱包服务器密码 格式错误', 1);			$data['dj_jm'] = iv('post.dj_jm', 'a', '钱包加密密码 格式错误', 1);			$data['js_yw'] = iv('post.js_yw', 'a', '英文名称 格式错误', 1);			$data['zr_zs'] = iv('post.zr_zs', 'cny', '转入赠送 格式错误', 1);			$data['zr_jz'] = iv('post.zr_jz', 'd', '转入状态 格式错误', 1);			$data['zr_dz'] = iv('post.zr_dz', 'd', '确认次数 格式错误', 1);			$data['zr_sm'] = iv('post.zr_sm');			$data['zc_fee'] = iv('post.zc_fee', 'cny', '转出手续费 格式错误', 1);			$data['zc_fee_limit'] = iv('post.zc_fee_limit', 'xnb', '矿工费 格式错误', 1);			$data['zc_min'] = iv('post.zc_min', 'xnb', '最小转出数量 格式错误', 1);			$data['zc_max'] = iv('post.zc_max', 'xnb', '最大转出数量 格式错误', 1);			$data['zc_jz'] = iv('post.zc_jz', 'd', '转出状态 格式错误', 1);			$data['zc_zd'] = iv('post.zc_zd', 'xnb', '转出自动 格式错误', 1);			$data['js_sm'] = iv('post.js_sm');			$data['cs_yf'] = iv('post.cs_yf', 'a', '研发者 格式错误', 1);			$data['cs_sf'] = iv('post.cs_sf', 'a', '核心算法 格式错误', 1);			$data['cs_fb'] = iv('post.cs_fb', 'a', '发布日期 格式错误', 1);			$data['cs_zl'] = iv('post.cs_zl', 'a', '发行总量 格式错误', 1);			$data['cs_cl'] = iv('post.cs_cl', 'a', '存量 格式错误', 1);			$data['cs_zm'] = iv('post.cs_zm', 'a', '证明方式 格式错误', 1);			$data['cs_nd'] = iv('post.cs_nd', 'a', '难度调整 格式错误', 1);			$data['cs_qk'] = iv('post.cs_qk', 'a', '区块速度 格式错误', 1);			$data['cs_jl'] = iv('post.cs_jl', 'a', '区块奖励 格式错误', 1);			$data['cs_ts'] = iv('post.cs_ts', 'a', '主要特色 格式错误', 1);			$data['cs_bz'] = iv('post.cs_bz', 'a', '不足之处 格式错误', 1);			$data['tp_zs'] = iv('post.tp_zs', 'd', '评价星级 格式错误', 1);			$data['tp_js'] = iv('post.tp_js', 'd', '技术评分 格式错误', 1);			$data['tp_yy'] = iv('post.tp_yy', 'd', '应用评分 格式错误', 1);			$data['tp_qj'] = iv('post.tp_qj', 'd', '前景评分 格式错误', 1);			$data['sort'] = iv('post.sort', 'a', '排序格式错误', 1);			$data['addtime'] = iv('post.addtime', 'time', '添加时间格式错误', 1);			$data['endtime'] = iv('post.endtime', 'time', '更新时间格式错误', 1);			$data['status'] = iv('post.status', 'd', '状态格式错误', 1);			$id = iv('post.id');			if ($id) {				$res = db::table('coin')->where(['id' => $id])->save($data);			} else {				$res = db::table('coin')->add($data);				$user_coin = db::table("user_coin")->find();				if (!isset($user_coin[$data['name']])) {					db::execute("ALTER TABLE  `move_user_coin` ADD  `" . $data['name'] . "` DECIMAL(20,8) UNSIGNED NOT NULL");				}				if (!isset($user_coin[$data['name'] . 'd'])) {					db::execute("ALTER TABLE  `move_user_coin` ADD  `" . $data['name'] . "d` DECIMAL(20,8) UNSIGNED NOT NULL");				}				$user_wallet = db::table("user_wallet")->find();				if (!isset($user_wallet[$data['name']])) {					db::execute("ALTER TABLE  `move_user_wallet` ADD  `" . $data['name'] . "` VARCHAR(255) NOT NULL");				}				if (($data['name'] == 'cxc') && !isset($user_wallet[$data['name'] . "_account"])) {					db::execute("ALTER TABLE  `move_user_wallet` ADD  `" . $data['name'] . "_account` VARCHAR(255) NOT NULL");				}			}			if ($res) {				mc('mymc_coin', null);				ajax('操作成功', 1);			} else {				ajax('操作失败');			}		}	}	public function status()	{		if (APP_DEMO) {			ajax('测试站暂时不能修改');		}		$id = input('post.id');		$type = input('get.type');		if ($type == -1) {			if (empty($id)) {				ajax('请选择操作项');			}			foreach ($id as $v) {				$coinname = db::table('coin')->where(['id' => $v])->find('name');				if ($coinname) {					$res[] = db::table('coin')->where(['id' => $v])->delete();				}				$coin = db::table('user_coin')->find();				if (isset($coin[$coinname])) {					db::execute("ALTER TABLE  `move_user_coin` drop column " . " $coinname");				}				if (isset($coin[$coinname . "d"])) {					db::execute("ALTER TABLE  `move_user_coin` drop column " . " $coinname" . "d");				}				$wallet = db::table('user_wallet')->find();				if (isset($wallet[$coinname])) {					db::execute("ALTER TABLE  `move_user_wallet` drop column " . " $coinname");				}			}			if (check_arr($res)) {				mc('mymc_coin', null);				ajax('操作成功', 1);			} else {				ajax('操作失败');			}		} else {			mc('mymc_coin', null);			$builder = new builder();			$builder->set_status($id, $type, 'coin');		}	}	public function discu()	{		$builder = new builder("coin_discu");		$builder->title('评价币种', '这里是评价币种')->button('add', '添加', '/coin/discu_edit')->button('no', '禁用', '/coin/discu_status/type/0')->button('off', '启用', '/coin/discu_status/type/1')->button('del', '删除', '/coin/discu_status/type/-1')->search('addtime_str', '开始时间', 'time')->search('addtime_end', '结束时间', 'time')->search('order', ['id_desc' => 'ID降序', 'id_asc' => 'ID升序', 'sort_desc' => '索引降序', 'sort_asc' => '索引升序', 'addtime_desc' => '时间降序', 'addtime_asc' => '时间升序',], 'select')->search('status', ['0' => '全部状态', '1' => '禁止', '2' => '正常'], 'select')->search('field', ['userid_c_user_c_id_c_username' => '用户名',], 'select')->search('name', '请输入查询内容', 'text')->key('id', 'ID', 'text')->key('userid', '用户名', 'link', [['type' => 'button', 'url' => '/user/index/field/id/name/###', 'title' => ['from_id' => 'userid', 'table' => 'user', 'to_id' => 'id', 'title' => 'username'], 'field' => 'userid', 'color' => '',]])->key('coinname', '币种', 'link', [['type' => 'button', 'url' => '/coin/index/field/name/name/###', 'title' => ['from_id' => 'coinname', 'table' => 'coin', 'to_id' => 'name', 'title' => 'title'], 'field' => 'coinname', 'color' => '',]])->key('content', '内容', 'text')->key('cjz', '超级赞', 'text')->key('tzy', '太中庸', 'text')->key('xcd', '瞎扯淡', 'text')->key('addtime', '评论时间', 'time')->key('status', '状态', 'select', [0 => '<span style="color:#DA9151;">禁止</span>', 1 => '<span style="color:#3498db;">正常</span>'])->key("ext", '操作', 'link', [['type' => 'button3', 'url' => '/coin/discu_edit/id/###', 'title' => '编辑', 'field' => 'id', 'color' => '',],])->lists();	}	public function discu_edit()	{		if (empty($_POST)) {			$id = input('get.id');			$data['list'] = db::table('coin_discu')->where(['id' => $id])->find();			$builder = new builder();			$builder->data($data)->url()->title(($id ? '编辑评价' : '添加评价'), ($id ? '这里是编辑评价' : '这里是添加评价'), '评价管理', '/coin/discu')->key('id', '编号', 'readonly', '', '数据编号')->key('id', '编号', 'hidden', '', '数据编号')->key('userid', '用户id', 'text', '', '用户id')->key('coinname', '币种名称', 'text', '', '币种名称')->key('content', '内容', 'text', '', '内容')->key('cjz', '超级赞', 'text', '', '内容')->key('tzy', '太中庸', 'text', '', '内容')->key('xcd', '瞎扯淡', 'text', '', '内容')->key('addtime', '评论时间', 'time', '', '评论时间 (只能时间)')->key('status', '状态', 'select', [0 => '禁用', 1 => '启用'], '状态')->edit();		} else {			if (APP_DEMO) {				ajax('测试站暂时不能修改');			}			$data['userid'] = iv('post.userid', 'd', '用户id 格式错误');			$data['coinname'] = iv('post.coinname', 'w', '币种名称 格式错误');			$data['content'] = iv('post.content', 'a', '内容 格式错误');			$data['cjz'] = iv('post.cjz', 'a', '超级赞 格式错误');			$data['tzy'] = iv('post.tzy', 'a', '太中庸 格式错误');			$data['xcd'] = iv('post.xcd', 'a', '瞎扯淡 格式错误');			$data['addtime'] = iv('post.addtime', 'time', '评论时间 格式错误');			$data['status'] = iv('post.status', 'd', '状态 格式错误');			$id = iv('post.id');			if ($id) {				$res = db::table('coin_discu')->where(['id' => $id])->save($data);			} else {				$res = db::table('coin_discu')->add($data);			}			if ($res) {				ajax('操作成功', 1);			} else {				ajax('操作失败');			}		}	}	public function discu_status()	{		if (APP_DEMO) {			ajax('测试站暂时不能修改');		}		$id = input('post.id');		$type = input('get.type');		$builder = new builder();		$builder->set_status($id, $type, 'coin_discu');	}	public function link()	{		$builder = new builder("coin_link");		$builder->title('币种链接', '这里是币种链接', '链接列表', '/coin/link')->button('add', '添加', '/coin/link_edit')->button('no', '禁用', '/coin/link_status/type/0')->button('off', '启用', '/coin/link_status/type/1')->button('del', '删除', '/coin/link_status/type/-1')->search('addtime_str', '开始时间', 'time')->search('addtime_end', '结束时间', 'time')->search('order', ['id_desc' => 'ID降序', 'id_asc' => 'ID升序', 'sort_desc' => '索引降序', 'sort_asc' => '索引升序', 'addtime_desc' => '时间降序', 'addtime_asc' => '时间升序',], 'select')->search('status', ['0' => '全部状态', '1' => '禁用', '2' => '启用'], 'select')->search('field', ['name' => '名称', 'title' => '标题',], 'select')->search('name', '请输入查询内容', 'text')->key('id', 'ID', 'text')->key('name', '币种', 'link', [['type' => 'button', 'url' => '/coin/index/field/name/name/###', 'title' => ['from_id' => 'name', 'table' => 'coin', 'to_id' => 'name', 'title' => 'title'], 'field' => 'name', 'color' => '',]])->key('title', '标题', 'text')->key('value', '链接', 'text')->key('sort', '排序', 'text')->key('addtime', '添加时间', 'time')->key('endtime', '更新时间', 'time')->key('status', '状态', 'select', [0 => '<span style="color:#DA9151;">禁用</span>', 1 => '<span style="color:#3498db;">启用</span>'])->key("ext", '操作', 'link', [['type' => 'button3', 'url' => '/coin/link_edit/id/###', 'title' => '编辑', 'field' => 'id', 'color' => '',],])->lists();	}	public function link_edit()	{		if (empty($_POST)) {			$id = input('get.id');			$builder = new builder("coin_link", ["id" => $id], "edit");			$builder->title(($id ? '编辑链接' : '添加链接'), ($id ? '这里是编辑链接' : '这里是添加链接'), '链接管理', '/coin/link')->key('id', '编号', 'readonly', '', '数据编号')->key('id', '编号', 'hidden', '', '数据编号')->key('name', '币种', 'select', 'coin_c_name_c_title', '名称')->key('title', '标题', 'text', '', '标题 (全部)')->key('value', '链接', 'text', '', '')->key('sort', '排序', 'text', '', '排序 (只能数字)')->key('addtime', '添加时间', 'time', '', '添加时间 (只能时间)')->key('endtime', '更新时间', 'time', '', '更新时间 (只能时间)')->key('status', '状态', 'select', [0 => '禁用', 1 => '启用'], '状态')->edit();		} else {			if (APP_DEMO) {				ajax('测试站暂时不能修改');			}			$data['name'] = iv('post.name', 'w', '币种 格式错误', 1);			$data['title'] = iv('post.title', '', '标题 格式错误', 1);			$data['sort'] = iv('post.sort', '', '排序 格式错误', 1);			$data['img'] = iv('post.img', '', '图片 格式错误', 1);			$data['value'] = iv('post.value', '', '链接 格式错误', 1);			$data['addtime'] = iv('post.addtime', 'time', '添加时间格式错误', 1);			$data['endtime'] = iv('post.endtime', 'time', '更新时间格式错误', 1);			$data['status'] = iv('post.status', 'd', '状态格式错误', 1);			$id = iv('post.id');			if ($id) {				$res = db::table('coin_link')->where(['id' => $id])->save($data);			} else {				$res = db::table('coin_link')->add($data);			}			if ($res) {				ajax('操作成功', 1);			} else {				ajax('操作失败');			}		}	}	public function link_status()	{		if (APP_DEMO) {			ajax('测试站暂时不能修改');		}		$id = input('post.id');		$type = input('get.type');		$builder = new builder();		$res = $builder->set_status($id, $type, 'coin_link');		if (isset($res[1])) {			ajax('操作成功', 1);		} else {			ajax('操作失败');		}	}	public function stats()	{		$coin_list = db::table('coin')->where(['name#<>' => 'cny'])->select();		$coin = iv('get.coin');		if (!$coin) {			if ($coin_list) {				$coin = $coin_list[0]['name'];			}		}		$this->assign('coin', $coin);		$coin_list_data = [];		if ($coin_list) {			foreach ($coin_list as $k => $v) {				if ($v['name'] != 'cny') {					$coin_list_data[$v['name']] = $v;				}			}		}		$coin_list = $coin_list_data;		$this->assign('coin_list', $coin_list);		$data = [];		$coin_in = db::table("sys_stats")->where(['name' => 'coin_in', 'type' => $coin])->order('id asc')->limit(100)->select();		$coin_out = db::table("sys_stats")->where(['name' => 'coin_out', 'type' => $coin])->order('id asc')->limit(100)->select();		foreach ($coin_in as $k => $v) {			if (isset($coin_out[$k]['data'])) {				$tmp_coin_out = $coin_out[$k]['data'];				$tmp_coin_out_fee = $coin_out[$k]['fee'];			} else {				$tmp_coin_out = 0;				$tmp_coin_out_fee = 0;			}			$data[] = ['date' => addtime($v['addtime']), 'coin_in' => $v['data'], 'coin_in_fee' => $v['fee'], 'coin_out' => $tmp_coin_out, 'coin_out_fee' => $tmp_coin_out_fee];		}		$res = [];		$res['coin_in'] = mrz(db::table('coin_in')->where(['status' => 1, 'coinname' => $coin])->sum('num'), 0);		$res['coin_out'] = mrz(db::table('coin_out')->where(['status' => 1, 'coinname' => $coin])->sum('num'), 0);		$res['coin_in_fee'] = mrz(db::table('coin_in')->where(['status' => 1, 'coinname' => $coin])->sum('fee'), 0);		$res['coin_out_fee'] = mrz(db::table('coin_out')->where(['status' => 1, 'coinname' => $coin])->sum('fee'), 0);		$this->assign('res', $res);		$this->assign('datas', json_encode($data));		$this->display();	}	public function block()	{	}}