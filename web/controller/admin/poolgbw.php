<?phpnamespace admin;use Move\db;class poolgbw extends admin{	public function __construct()	{		parent::__construct();		if (!$this->is_game('poolgbw')) {			ajax('这个应用你没有购买');		}	}	public function index()	{		$builder = new builder("poolgbw");		$builder->title('新矿机工厂', '这里是新矿机工厂', '矿机列表', '/poolgbw/index')->button('add', '添加', '/poolgbw/edit')->button('no', '禁用', '/poolgbw/status/type/0')->button('off', '启用', '/poolgbw/status/type/1')->button('del', '删除', '/poolgbw/status/type/-1')->search('field', ['userid' => '用户ID',], 'select')->search('name', '请输入查询内容', 'text')->key('id', '编号', 'text')->key('title', '矿机名', 'text')->key('userid', '用户名', 'link', [['type' => 'button', 'url' => '/user/index/field/id/name/###', 'title' => ['from_id' => 'userid', 'table' => 'user', 'to_id' => 'id', 'title' => 'username'], 'field' => 'userid', 'color' => '',]])->key('life', '寿命', 'text')->key('lastlife', '剩余寿命', 'text')->key('limit1', '开始收获时间', 'text')->key('limit2', '结束收获时间', 'text')->key('qita', '其它时间收获减少比例%', 'text')->key('guoqi', '过期收获减少比例%', 'text')->key('minguoqi', '最小收获比例%', 'text')->key('pd', '产能', 'text')->key('leftpd', '剩余产能', 'text')->key('minpd', '最低剩余产能', 'text')->key('reducepd', '产能衰减比例', 'text')->key('pd_type', '生产币种', 'text')->key('shoufei', '是否收手续费', 'select', [0 => '不收费', 1 => '收费'])->key('startPrice', '手续费', 'text')->key('startPrice_type', '手续费币种', 'text')->key('shuilv', '收矿税率', 'text')->key('status', '状态', 'select', [0 => "禁用", 1 => "空闲", 2 => "工作中", 3 => "已过期"])->key("ext", '操作', 'link', [['type' => 'button3', 'url' => '/poolgbw/edit/id/###', 'title' => '编辑', 'field' => 'id', 'color' => '',]])->lists();	}	public function edit()	{		if (empty($_POST)) {			$id = input('get.id');			$builder = new builder("poolgbw", ["id" => $id], "edit");			$builder->title(($id ? '编辑矿场用户' : '添加矿场用户'), ($id ? '这里是编辑矿场用户' : '这里是添加矿场用户'), '矿场用户管理', '/poolgbw/index')->key('id', '编号', 'readonly', '', '数据编号')->key('id', '编号', 'hidden', '', '数据编号')->key('title', '矿机名', 'text', '', '矿机名(全部格式)')->key('life', '寿命', 'text', '', '矿机寿命(整数格式)')->key('lastlife', '剩余寿命', 'text', '', '矿机剩余寿命(整数格式)')->key('limit1', '开始收获时间', 'text', '', '开始收获时间(整数格式)')->key('limit2', '结束收获时间', 'text', '', '结束收获时间(整数格式)')->key('qita', '其他时间收获比例%', 'text', '', '% 其他时间收获减少比例(小数格式)')->key('guoqi', '过期收获比例%', 'text', '', '% 过期收获减少比例(小数格式)')->key('minguoqi', '最小收获比例%', 'text', '', '% 最小收获比例(小数格式)')->key('pd', '产能', 'text', '', '矿机产能(小数格式)')->key('leftpd', '剩余产能', 'text', '', '矿机剩余产能')->key('minpd', '最低剩余产能', 'text', '', '矿机剩余产能的最低值')->key('reducepd', '剩余产能衰减比例', 'text', '', '%矿机剩余产能每次使用的衰减比例')->key('pd_type', '生产币种', 'select', 'coin_c_name_c_title', '矿机生产币种')->key('shoufei', '是否收手续费', 'select', [0 => "不收费", 1 => "收费"], '')->key('startPrice', '手续费', 'text', '', '矿机每次启动,收取的手续费的值')->key('startPrice_type', '手续费币种', 'select', 'coin_c_name_c_title', '手续费币种类型')->key('shuilv', '收矿税率', 'text', '', '% 矿机每次收获,抽出的百分比')->key('status', '状态', 'select', [0 => "禁用", 1 => "空闲", 2 => "工作中", 3 => "已过期"], '')->edit();		} else {			if (APP_DEMO) {				ajax('测试站暂时不能修改');			}			$data['title'] = iv('post.title', 'a', '矿机名 格式错误', 1);			$data['life'] = iv('post.life', 'd', '寿命 格式错误', 1);			$data['lastlife'] = iv('post.lastlife', 'd', '剩余寿命 格式错误', 1);			$data['limit1'] = iv('post.limit1', 'd', '开始挖矿时间 格式错误', 1);			$data['limit2'] = iv('post.limit2', 'd', '结束挖矿时间 格式错误', 1);			$data['qita'] = iv('post.qita', 'double', '%其他时间收益减少比例 格式错误', 1);			$data['guoqi'] = iv('post.guoqi', 'double', '%过期收益减少比例 格式错误', 1);			$data['minguoqi'] = iv('post.minguoqi', 'double', '%最小收益比例 格式错误', 1);			$data['pd'] = iv('post.pd', 'double', '产能 格式错误', 1);			$data['leftpd'] = iv('post.leftpd', 'double', '剩余产能 格式错误', 1);			$data['minpd'] = iv('post.minpd', 'double', '最低剩余产能 格式错误', 1);			$data['reducepd'] = iv('post.reducepd', 'double', '剩余产能衰减比例 格式错误,填写0到100之间的数 ', 1);			$data['pd_type'] = iv('post.pd_type', 'w', '生产币种 格式错误', 1);			$data['shoufei'] = iv('post.shoufei', 'd', '是否收手续费 格式错误', 1);			$data['startPrice'] = iv('post.startPrice', 'double', '手续费 格式错误', 1);			$data['startPrice_type'] = iv('post.startPrice_type', 'w', '手续费币种 格式错误', 1);			$data['shuilv'] = iv('post.shuilv', 'double', '收矿税率 格式错误', 1);			$data['status'] = iv('post.status', 'd', '状态 格式错误', 1);			$id = iv('post.id');			if ($id) {				$res = db::table("poolgbw")->where(["id" => $id])->save($data);			} else {				$res = db::table("poolgbw")->add($data);			}			if ($res) {				ajax('操作成功', 1, "/admin/poolgbw/index");			} else {				ajax('操作失败');			}		}	}	public function status()	{		if (APP_DEMO) {			ajax('测试站暂时不能修改');		}		$id = input('post.id');		$type = input('get.type');		$builder = new builder();		show($builder->set_status($id, $type, 'poolgbw'));	}	public function market()	{		$builder = new builder("poolgbw_market");		$builder->title('矿机市场', '这里是矿机市场', '矿机列表', '/poolgbw/market')->button('add', '添加', '/poolgbw/market_edit')->button('no', '禁用', '/poolgbw/market_status/type/0')->button('off', '启用', '/poolgbw/market_status/type/1')->button('del', '删除', '/poolgbw/market_status/type/-1')->search('field', ['id' => '矿机ID',], 'select')->search('name', '请输入查询内容', 'text')->key('id', '编号', 'text')->key('title', '矿机名', 'text')->key('limit', '数量限制', 'text')->key('life', '寿命', 'text')->key('limit1', '收获开始时间', 'text')->key('limit2', '收获结束时间', 'text')->key('qita', '其它时间收获减少比例%', 'text')->key('guoqi', '过期收获减少比例%', 'text')->key('minguoqi', '最小收获比例%', 'text')->key('reducepd', '每次使用产能衰减比例%', 'text')->key('pd', '产能', 'text')->key('minpd', '最低产能', 'text')->key('pd_type', '生产币种', 'text')->key('shuilv', '税率%', 'text')->key('shoufei', '是否收费', 'select', [0 => "不收费", 1 => "收费"])->key('startPrice', '挖矿手续费', 'text')->key('startPrice_type', '挖矿付费币种', 'text')->key('price', '价格', 'text')->key('price_type', '币种', 'text')->key('status', '状态', 'select', [0 => "禁用", 1 => "热卖中"])->key("ext", '操作', 'link', [['type' => 'button3', 'url' => '/poolgbw/market_edit/id/###', 'title' => '编辑', 'field' => 'id', 'color' => '',]])->lists();	}	public function market_edit()	{		if (empty($_POST)) {			$id = input('get.id');			$builder = new builder("poolgbw_market", ["id" => $id], "edit");			$builder->title(($id ? '编辑矿机市场' : '添加矿机'), ($id ? '这里是编辑矿机市场' : '这里是添加矿机市场'), '矿机市场管理', '/poolgbw/market')->key('id', '编号', 'hidden', '', '数据编号')->key('id', '编号', 'readonly', '', '数据编号')->key('title', '矿机名', 'text', '', '矿机名(全部格式)')->key('limit', '限购数量', 'text', '', '购买数限制(整数格式)')->key('life', '寿命:天', 'text', '', '矿机寿命(整数格式)')->key('limit1', '收获开始时间', 'text', '', '小时 正常收获开始时间(整数格式)')->key('limit2', '收获结束时间', 'text', '', '小时 正常收获结束时间(整数格式)')->key('qita', '其他时间收矿', 'text', '', '% 收益减少比例(小数格式)')->key('guoqi', '过期收获比例', 'text', '', '% 每超过一天收益减少比例(小数格式)')->key('minguoqi', '保底收益比例', 'text', '', '% 保底收益比例  长时间没有来收矿使用(小数格式)')->key('pd', '产能', 'text', '', '矿机产能(小数格式)')->key('reducepd', '每次使用产能衰减比例', 'text', '', '每次一次挖矿,产能衰减比例,设置为5%填写5')->key('minpd', '最低产能', 'text', '', '衰减到最低产能,剩余产能将不再衰减')->key('pd_type', '生产币种', 'select', 'coin_c_name_c_title', '矿机生产币种')->key('shuilv', '税率', 'text', '', '在用户最后获取收益的基础上减去的比例,设置为8%填写8')->key('shoufei', '是否收费', 'select', [0 => "不收费", 1 => "收费"], '')->key('startPrice', '挖矿手续费', 'text', '', '开始挖矿付费')->key('startPrice_type', '挖矿付费币种', 'select', 'coin_c_name_c_title', '开始挖矿付费的币种')->key('price', '价格', 'text', '', '矿机售价(小数格式)')->key('price_type', '售价币种', 'select', 'coin_c_name_c_title', '')->key('status', '状态', 'select', [0 => "禁用", 1 => "热卖中"], '')->edit();		} else {			if (APP_DEMO) {				ajax('测试站暂时不能修改');			}			$data['title'] = iv('post.title', 'a', '矿机名 格式错误', 1);			$data['limit'] = iv('post.limit', 'd', '购买数 格式错误', 1);			$data['life'] = iv('post.life', 'd', '寿命 格式错误', 1);			$data['limit1'] = iv('post.limit1', 'd', '正常收获开始时间 格式错误', 1);			$data['limit2'] = iv('post.limit2', 'd', '正常收获结束时间 格式错误', 1);			$data['qita'] = iv('post.qita', 'double', '%其他时间收益比例 格式错误', 1);			$data['guoqi'] = iv('post.guoqi', 'double', '%过期收益比例 格式错误', 1);			$data['minguoqi'] = iv('post.minguoqi', 'double', '%最小收益比例 格式错误', 1);			$data['price'] = iv('post.price', 'double', '售价 格式错误', 1);			$data['price_type'] = iv('post.price_type', 'w', '售价币种 格式错误', 1);			$data['pd'] = iv('post.pd', 'double', '产能 格式错误', 1);			$data['reducepd'] = iv('post.reducepd', 'double', '产能衰减比例 格式错误', 1);			$data['minpd'] = iv('post.minpd', 'double', '最低产能 格式错误', 1);			$data['minpd'] = iv('post.minpd', 'double', '最低产能 格式错误', 1);			$data['shuilv'] = iv('post.shuilv', 'double', '税率 格式错误', 1);			$data['shoufei'] = iv('post.shoufei', 'd', '是否收费 格式错误', 1);			$data['startPrice'] = iv('post.startPrice', 'double', '开始挖矿价格 格式错误', 1);			$data['startPrice_type'] = iv('post.startPrice_type', 'w', '开始挖矿价格币种 格式错误', 1);			$data['pd_type'] = iv('post.pd_type', 'w', '生产币种 格式错误', 1);			$data['status'] = iv('post.status', 'd', '状态 格式错误', 1);			$id = iv('post.id');			if ($id) {				$res = db::table("poolgbw_market")->where(["id" => $id])->save($data);			} else {				$res = db::table("poolgbw_market")->add($data);			}			if ($res) {				ajax('操作成功', 1, "/admin/poolgbw/market");			} else {				ajax('操作失败');			}		}	}	public function market_status()	{		if (APP_DEMO) {			ajax('测试站暂时不能修改');		}		$id = input('post.id');		$type = input('get.type');		$builder = new builder();		show($builder->set_status($id, $type, 'poolgbw_market'));	}	public function log()	{		$builder = new builder("poolgbw_log");		$builder->title('收矿记录', '这里是收矿记录', '收矿记录', '/poolgbw/log')->button('add', '添加', '/poolgbw/log_edit')->button('no', '禁用', '/poolgbw/log_status/type/0')->button('off', '启用', '/poolgbw/log_status/type/1')->button('del', '删除', '/poolgbw/log_status/type/-1')->search('field', ['id' => '矿机ID',], 'select')->search('name', '请输入查询内容', 'text')->key('id', '编号', 'text')->key('userid', '用户名', 'link', [['type' => 'button', 'url' => '/user/index/field/id/name/###', 'title' => ['from_id' => 'userid', 'table' => 'user', 'to_id' => 'id', 'title' => 'username'], 'field' => 'userid', 'color' => '',]])->key('workerid', '矿机ID', 'text')->key('gettime', '收获时间', 'time')->key('pd', '收益', 'text')->key('pd_type', '收益币种', 'text')->key("ext", '操作', 'link', [['type' => 'button3', 'url' => '/poolgbw/log_edit/id/###', 'title' => '编辑', 'field' => 'id', 'color' => '',]])->lists();	}	public function log_edit()	{		if (empty($_POST)) {			$id = input('get.id');			$builder = new builder("poolgbw_log", ["id" => $id], "edit");			$builder->title(($id ? '编辑收矿记录' : '添加收矿记录'), ($id ? '这里是编辑收矿记录' : '这里是添加收矿记录'), '收矿记录管理', '/poolgbw/log')->key('id', '编号', 'readonly', '', '数据编号')->key('id', '编号', 'hidden', '', '数据编号')->key('workerid', '矿机ID', 'text', '', '矿机ID(整数格式)')->key('gettime', '收获时间', 'time', '', '收获时间(时间格式)')->key('pd', '产能', 'text', '', '矿机产能(小数格式)')->key('pd_type', '生产币种', 'select', 'coin_c_name_c_title', '矿机生产币种')->key('status', '状态', 'select', [0 => "禁用", 1 => "启用"], '记录状态')->edit();		} else {			if (APP_DEMO) {				ajax('测试站暂时不能修改');			}			$data['workerid'] = iv('post.workerid', 'd', '矿机ID 格式错误', 1);			$data['gettime'] = iv('post.gettime', 'time', '收获时间 格式错误', 1);			$data['pd'] = iv('post.pd', 'double', '产能 格式错误', 1);			$data['pd_type'] = iv('post.pd_type', 'w', '生产币种 格式错误', 1);			$data['status'] = iv('post.status', 'd', '状态 格式错误', 1);			$id = iv('post.id');			if ($id) {				$res = db::table("poolgbw_log")->where(["id" => $id])->save($data);			} else {				$res = db::table("poolgbw_log")->add($data);			}			if ($res) {				ajax('操作成功', 1, "/admin/poolgbw/log");			} else {				ajax('操作失败');			}		}	}	public function log_status()	{		if (APP_DEMO) {			ajax('测试站暂时不能修改');		}		$id = input('post.id');		$type = input('get.type');		$builder = new builder();		show($builder->set_status($id, $type, 'poolgbw_log'));	}	public function rule()	{		$builder = new builder("poolgbw_shuoming");		$builder->title('收矿记录', '这里是收矿记录', '收矿记录', '/poolgbw/log')->button('add', '添加/修改', '/poolgbw/rule_edit')->button('no', '禁用', '/poolgbw/log_status/type/0')->button('off', '启用', '/poolgbw/log_status/type/1')->button('del', '删除', '/poolgbw/log_status/type/-1')->key('id', '编号', 'text')->key('step', '步骤说明', 'text')->key('rule', '挖矿说明', 'text')->key('example', '举例说明', 'text')->key('alert', '禁用文字说明', 'text')->key('status', '状态', 'select', [0 => "禁用", 1 => "启用"])->key("ext", '操作', 'link', [['type' => 'button3', 'url' => '/poolgbw/rule_edit/id/###', 'title' => '编辑', 'field' => 'id', 'color' => '',]])->lists();	}	public function rule_edit()	{		if (empty($_POST)) {			$id = input('get.id');			$builder = new builder("poolgbw_shuoming", ["id" => $id], "edit");			$builder->title(($id ? '编辑收矿记录' : '添加收矿记录'), ($id ? '这里是编辑收矿记录' : '这里是添加收矿记录'), '收矿记录管理', '/poolgbw/log')->key('id', '编号', 'readonly', '', '数据编号')->key('id', '编号', 'hidden', '', '数据编号,只有一条')->key('step', '步骤说明', 'text', '', '矿机工厂的步骤说明,支持html标签')->key('rule', '挖矿说明', 'text', '', '矿机工厂的挖矿说明,支持html标签')->key('example', '举例说明', 'text', '', '矿机工厂的举例说明,支持html标签')->key('alert', '禁用文字说明', 'text', '', '当禁用规则之后,显示在网页上的说明文字')->key('status', '状态', 'select', [0 => "禁用", 1 => "启用"], '记录状态')->edit();		} else {			if (APP_DEMO) {				ajax('测试站暂时不能修改');			}			$data['step'] = iv('post.step');			$data['rule'] = iv('post.rule');			$data['example'] = iv('post.example');			$data['alert'] = iv('post.alert');			$data['status'] = iv('post.status', 'd', '状态 格式错误', 1);			$id = iv('post.id');			if ($id) {				$res = db::table("poolgbw_shuoming")->where(["id" => $id])->save($data);			}			if ($res) {				ajax('操作成功', 1, "/admin/poolgbw/rule");			} else {				ajax('操作失败');			}		}	}	public function rule_status()	{		if (APP_DEMO) {			ajax('测试站暂时不能修改');		}		$id = input('post.id');		$type = input('get.type');		$builder = new builder();		show($builder->set_status($id, $type, 'poolgbw_shuoming'));	}}