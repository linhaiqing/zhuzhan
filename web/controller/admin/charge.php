<?phpnamespace admin;use Move\db;class charge extends admin{	public function __construct()	{		parent::__construct();		if (!$this->is_game('charge')) {			ajax('这个应用你没有购买');		}	}	public function index()	{		$builder = new builder("charge_log");		$builder->title('卡密充值记录', '这里是卡密充值记录', '卡密充值记录', '/charge/index')->search('addtime_str', '开始时间', 'time')->search('addtime_end', '结束时间', 'time')->search('order', ['id_desc' => 'ID降序', 'id_asc' => 'ID升序', 'sort_desc' => '索引降序', 'sort_asc' => '索引升序', 'addtime_desc' => '时间降序', 'addtime_asc' => '时间升序',], 'select')->search('status', ['0' => '全部状态', '1' => '禁用', '2' => '充值成功', '3' => '未通过', '4' => '待审核'], 'select')->search('field', ['cardnum' => '卡号', 'userid_c_user_c_id_c_username' => '用户名',], 'select')->search('name', '请输入查询内容', 'text')->key('id', 'ID', 'text')->key('userid', '用户名', 'link', [['type' => 'button', 'url' => '/user/index/field/id/name/###', 'title' => ['from_id' => 'userid', 'table' => 'user', 'to_id' => 'id', 'title' => 'username'], 'field' => 'userid', 'color' => '',]])->key('cardnum', '卡号', 'text')->key('price', '卡密金额', 'text')->key('cointype', '充值币种', 'link', [['type' => 'button', 'url' => '/coin/index/field/name/name/###', 'title' => ['from_id' => 'cointype', 'table' => 'coin', 'to_id' => 'name', 'title' => 'title'], 'field' => 'cointype', 'color' => '',]])->key('addtime', '充值时间', 'time')->key('gettime', '到账时间', 'time')->key('status', '状态', 'select', [0 => '<span style="color:#DA9151;">禁用</span>', 1 => '<span style="color:#3498db;">充值成功</span>', 2 => '<span style="color:red;">未通过</span>', 3 => '<span style="color:green;">待审核</span>'])->key("ext", '操作', 'link', [['type' => 'button2', 'url' => '/charge/tongguo/id/###', 'title' => '审核通过', 'field' => 'id', 'ajax' => 'get', 'color' => '', 'exts' => ["status" => [3]],], ['type' => 'button2', 'url' => '/charge/nottongguo/id/###', 'title' => '未通过', 'field' => 'id', 'ajax' => 'get', 'color' => '', 'exts' => ["status" => [3]],],])->lists();	}	public function tongguo()	{		if (APP_DEMO) {			ajax('测试站暂时不能修改');		}		$id = iv('get.id', 'd', '参数格式错误');		$res = md('charge')->tongguo($id);		if (isset($res[1]) && $res[1]) {			ajax($res[0], 1);		} else {			ajax($res[0]);		}	}	public function nottongguo()	{		if (APP_DEMO) {			ajax('测试站暂时不能修改');		}		$id = iv('get.id', 'd', '参数格式错误');		$res = md('charge')->nottongguo($id);		if (isset($res[1]) && $res[1]) {			ajax($res[0], 1);		} else {			ajax($res[0]);		}	}	public function card()	{		$builder = new builder("charge_card");		$builder->title('卡密管理', '这里是卡密管理', '卡密管理', '/charge/card')->button('add', '批量生成', '/charge/cards_edit')->button('no', '禁用', '/charge/card_status/type/0')->button('off', '启用', '/charge/card_status/type/1')->button('del', '删除', '/charge/card_status/type/-1')->button('ext', '导出选中', '/charge/out_excel')->search('status', ['0' => '全部状态', '1' => '禁用', '2' => '启用', '3' => '已使用', '4' => '已失效'], 'select')->search('name', '请输入查询内容', 'text')->key('id', 'ID', 'text')->key('cardnum', '卡号', 'text')->key('password', '密码', 'text')->key('addtime', '开始时间', 'time')->key('endtime', '过期时间', 'time')->key('price', '卡密金额', 'text')->key('cointype', '充值币种', 'link', [['type' => 'button', 'url' => '/coin/index/field/name/name/###', 'title' => ['from_id' => 'cointype', 'table' => 'coin', 'to_id' => 'name', 'title' => 'title'], 'field' => 'cointype', 'color' => '',]])->key('check', '是否审核', 'select', [0 => '<span style="color:#DA9151;">是</span>', 1 => '<span style="color:#3498db;">否</span>'], '审核(整数格式)')->key('status', '状态', 'select', [0 => '<span style="color:#DA9151;">禁用</span>', 1 => '<span style="color:#3498db;">启用</span>', 2 => '<span style="color:red;">已使用</span>', 3 => '<span style="color:slategray;">已失效</span>'])->key("ext", '操作', 'link', [['type' => 'button3', 'url' => '/charge/card_edit/id/###', 'title' => '编辑', 'field' => 'id', 'color' => '',],])->lists();	}	public function card_edit()	{		if (empty($_POST)) {			$id = input('get.id');			$builder = new builder("charge_card", ["id" => $id], "edit");			$builder->title(($id ? '编辑卡密' : '添加卡密'), ($id ? '这里是编辑卡密' : '这里是添加卡密'), '卡密管理', '/charge/card');			if ($id) {				$builder->key('id', '编号', 'readonly', '', '数据编号');				$builder->key('id', '编号', 'hidden', '', '数据编号');			}			$builder->key('addtime', '创建时间', 'time', '', '创建时间(时间格式)')->key('endtime', '过期时间', 'time', '', '过期时间(时间格式)')->key('price', '卡密金额', 'text', '', '卡密金额(小数格式)')->key('cointype', '充值币种', 'select', 'coin_c_name_c_title', '充值币种(英文格式)')->key('dnum', '数字位数', 'text', '', '数字位数(整数格式)')->key('wnum', '字母位数', 'text', '', '字母位数(整数格式)')->key('type', '排版方式', 'select', [0 => "数字在前", 1 => "字母在前"], '排版方式(英文格式)')->key('pnum', '密码位数', 'text', '', '密码位数(整数格式)')->key('check', '是否审核', 'select', [0 => "需要", 1 => "不需要"], '审核(整数格式)')->key('status', '状态', 'select', [0 => '禁用', 1 => '启用'])->edit();		} else {			if (APP_DEMO) {				ajax('测试站暂时不能修改');			}			$id = input('get.id');			$data['addtime'] = iv('post.addtime', 'time', '下单时间格式错误', 1);			$data['endtime'] = iv('post.endtime', 'time', '创建时间格式错误', 1);			$data['price'] = iv('post.price', 'double', '人民币价格 格式错误', 1);			$data['cointype'] = iv('post.cointype', 'w', '充值币种 格式错误', 1);			$data['gettime'] = iv('post.gettime', 'time', '到账时间格式错误', 1);			$data['dnum'] = iv('post.dnum', 'd', '数字位数格式错误', 1);			$data['wnum'] = iv('post.wnum', 'd', '字母位数格式错误', 1);			$data['type'] = iv('post.type', 'd', '排版格式错误', 1);			$data['pnum'] = iv('post.pnum', 'd', '密码格式错误', 1);			$data['check'] = iv('post.check', 'd', '是否审核格式错误', 1);			$data['status'] = iv('post.status', 'd', '状态格式错误', 1);			$cardnum = rand(100000000000, 99999999999999);			$paycardnum = hashs($cardnum);			$d = preg_replace('/[a-zA-Z]/', '', $paycardnum);			$a = preg_replace('/\d+/', '', $paycardnum);			$str = substr($d, 1, $data['dnum']);			$str1 = substr($a, 1, $data['wnum']);			$password = substr($paycardnum, 1, $data['pnum']);			if ($data['type'] == 0) {				$cardnum = $str . $str1;			} else {				if ($data['type'] == 1) {					$cardnum = $str1 . $str;				}			}			if (strlen($str) != $data['dnum']) {				$str = substr($d, 1, $data['dnum']);			} else {				if (strlen($str1) != $data['wnum']) {					$str1 = substr($a, 1, $data['wnum']);				}			}			if ($data['addtime'] > $data['endtime']) {				ajax('时间错误');			}			$rs = db::table('charge_card')->where(["id" => $id])->save(["cardnum" => $cardnum, "password" => $password, "addtime" => $data["addtime"], "endtime" => $data["endtime"], "price" => $data["price"], "status" => $data["status"], 'dnum' => $data["dnum"], 'wnum' => $data["wnum"], 'pnum' => $data["pnum"], "cointype" => $data["cointype"], "check" => $data["check"],]);			if ($rs) {				ajax("单个修改成功", 1);			} else {				ajax("单个修改卡号失败");			}		}	}	public function cards_edit()	{		if (empty($_POST)) {			$id = input('get.id');			$builder = new builder("charge_card", ["id" => $id], "edit");			$builder->title(($id ? '编辑卡密' : '添加卡密'), ($id ? '这里是编卡密' : '这里是添加卡密'), '卡密管理', '/charge/card');			if ($id) {				$builder->key('id', '编号', 'readonly', '', '数据编号');				$builder->key('id', '编号', 'hidden', '', '数据编号');			}			$builder->key('num', '生成数量', 'text', '', '生成数量(整数格式)')->key('addtime', '创建时间', 'time', '', '创建时间(时间格式)')->key('endtime', '过期时间', 'time', '', '过期时间(时间格式)')->key('price', '卡密金额', 'text', '', '卡密金额(小数格式)')->key('cointype', '充值币种', 'select', 'coin_c_name_c_title', '充值币种(英文格式)')->key('dnum', '数字位数', 'text', '', '数字位数(整数格式)')->key('wnum', '字母位数', 'text', '', '字母位数(整数格式)')->key('type', '排版方式', 'select', [0 => "数字在前", 1 => "字母在前"], '排版方式(英文格式)')->key('pnum', '密码位数', 'text', '', '密码位数(整数格式)')->key('check', '是否审核', 'select', [0 => "需要", 1 => "不需要"], '审核(整数格式)')->key('status', '状态', 'select', [0 => '禁用', 1 => '启用'])->edit();		} else {			if (APP_DEMO) {				ajax('测试站暂时不能修改');			}			$data['num'] = iv('post.num', 'd', '生成数量格式错误', 1);			$data['addtime'] = iv('post.addtime', 'time', '下单时间格式错误', 1);			$data['endtime'] = iv('post.endtime', 'time', '创建时间格式错误', 1);			$data['price'] = iv('post.price', 'double', '人民币价格 格式错误', 1);			$data['cointype'] = iv('post.cointype', 'w', '充值币种 格式错误', 1);			$data['gettime'] = iv('post.gettime', 'time', '到账时间格式错误', 1);			$data['dnum'] = iv('post.dnum', 'd', '数字位数格式错误', 1);			$data['wnum'] = iv('post.wnum', 'd', '字母位数格式错误', 1);			$data['type'] = iv('post.type', 'd', '排版格式错误', 1);			$data['pnum'] = iv('post.pnum', 'd', '密码格式错误', 1);			$data['check'] = iv('post.check', 'd', '审核格式错误', 1);			$data['status'] = iv('post.status', 'd', '状态格式错误', 1);			$i = 0;			for ($i = 0; $i < $data["num"]; $i++) {				$cardnum = rand(100000000000, 99999999999999);				$paycardnum = hashs($cardnum);				$d = preg_replace('/[a-zA-Z]/', '', $paycardnum);				$a = preg_replace('/\d+/', '', $paycardnum);				$str = substr($d, 1, $data['dnum']);				$str1 = substr($a, 1, $data['wnum']);				$password = substr($paycardnum, 1, $data['pnum']);				if ($data['type'] == 0) {					$cardnum = $str . $str1;				} else {					if ($data['type'] == 1) {						$cardnum = $str1 . $str;					}				}				if (strlen($str) != $data['dnum']) {					$str = substr($d, 1, $data['dnum']);				} else {					if (strlen($str1) != $data['wnum']) {						$str1 = substr($a, 1, $data['wnum']);					}				}				$arr[$i] = ["cardnum" => $cardnum, "password" => $password, "addtime" => $data["addtime"], "endtime" => $data["endtime"], "price" => $data["price"], "status" => $data["status"], "cointype" => $data["cointype"], "dnum" => $data["dnum"], "wnum" => $data["wnum"], "pnum" => $data["pnum"], "check" => $data["check"]];				if ($arr[$i]["addtime"] > $arr[$i]["endtime"]) {					ajax('时间错误');				}			}			$res = md('charge')->card($arr);			if (isset($res[1]) && $res[1]) {				ajax($res[0], 1);			} else {				ajax($res[0]);			}		}	}	public function card_status()	{		if (APP_DEMO) {			ajax('测试站暂时不能修改');		}		$id = input('post.id');		$type = input('get.type');		$builder = new builder();		show($builder->set_status($id, $type, 'charge_card'));	}	public function out_excel()	{		if ($_POST) {			$id = $_POST['id'];		} else {			$id = $_GET['id'];		}		if (empty($id)) {			ajax('请选择要操作的数据!');		}		$tables = 'move_charge_card';		$xls_name = $tables;		$xls_zd = [];		$db_config = config("DB_CONF");		$zd = db::query("select COLUMN_NAME,COLUMN_COMMENT from information_schema.COLUMNS where TABLE_SCHEMA = '" . $db_config['db_name'] . "' and TABLE_NAME = '" . $tables . "';");		foreach ($zd as $k => $v) {			$xls_zd[$k] = $v['COLUMN_COMMENT'] ? $v['COLUMN_COMMENT'] : $v['COLUMN_NAME'];		}		$xls_rs = db::table('charge_card')->where(['id#in' => $id])->select();		foreach ($xls_rs as $k => $v) {			$xls_rs[$k]['addtime'] = addtime($v['addtime']);			if ($xls_rs[$k]['status'] == 0) {				$xls_rs[$k]['status'] = '禁用';			} elseif ($xls_rs[$k]['status'] == 1) {				$xls_rs[$k]['status'] = '启用';			} elseif ($xls_rs[$k]['status'] == 2) {				$xls_rs[$k]['status'] = '已使用';			} elseif ($xls_rs[$k]['status'] == 3) {				$xls_rs[$k]['status'] = '需审核';			}		}		$excel = new \ext\excel();		$excel->export($xls_name, $xls_zd, $xls_rs);	}} 