<?phpnamespace api;use Move\db;use Move\mvc\controller;class userinfo extends controller{	public function __construct()	{		parent::__construct();		$config = md('sys_config')->lists();		if ($config['web_close'] != 1) {			exit(json_encode(['err' => $config['web_close_cause']]));		}		if (!isset($config['api_close']) || $config['api_close'] != 1) {			exit(json_encode(['err' => 'api接口已经关闭']));		}	}	public function check_user()	{		$key = iv('get.secret_key');		if (!$key) {			exit(json_encode(['err' => '秘钥不能为空']));		}		if ($key != KEY_CODE) {			exit(json_encode(['err' => '秘钥错误']));		}		$mobile = iv('get.mobile');		$password = iv("get.password");		if (!check($mobile, 'd')) {			exit(json_encode(['err' => '手机号码格式错误']));		}		if (!check($password, 'dw')) {			exit(json_encode(['err' => '账户密码格式错误']));		}		$moble = '+86|' . $mobile;		$users = db::table("user")->where(["moble" => $moble])->find();		if (empty($users)) {			exit(json_encode(['err' => '用户不存在']));		}		if ($users['password'] != md5($password . "MOVESAY")) {			exit(json_encode(['err' => '密码错误']));		}		$user_coin = db::table('user_coin')->where(['userid' => $users["id"]])->find();		if (!$user_coin) {			if (!db::table('user_coin')->add(['userid' => $users["id"]])) {				exit(json_encode(['err' => '账户财产出现异常']));			}		}		exit(json_encode(['userid' => $users["id"]]));	}	public function user_coin()	{		$signature = iv('get.signature');		if (!$signature) {			exit(json_encode(['err' => '签名不能为空']));		}		$userid = iv('get.userid');		if (!check($userid, 'd')) {			exit(json_encode(['err' => '用户ID格式错误']));		}		$num = iv('get.num');		if (!check($num, 'double')) {			exit(json_encode(['err' => '转出数量错误']));		}		$coin = iv('get.coin');		if (!check($coin, 'w')) {			exit(json_encode(['err' => '转出币种错误']));		}		$txid = iv('get.txid');		if (!check($txid, 'dw')) {			exit(json_encode(['err' => 'txid格式错误']));		}		if ($signature != md5('userid=' . $userid . '&num=' . $num . '&coin=' . $coin . '&txid=' . $txid . '&secret_key=' . KEY_CODE)) {			exit(json_encode(['err' => '签名不匹配']));		}		$users = db::table("user")->where(['id' => $userid])->find();		if (empty($users)) {			exit(json_encode(['err' => '用户不存在']));		}		$check_in = db::table('coin_in')->where(['txid' => $txid, 'coinname' => $coin])->find();		if ($check_in) {			exit(json_encode(['success' => '操作成功', 'txid' => $txid]));		}		db::exec('set autocommit=0');		db::exec('lock tables  #pre#user_coin write ,#pre#coin_in write');		$rs[] = db::table('coin_in')->add(["userid" => $userid, "coinname" => $coin, "zhuanchu" => "", "txid" => $txid, "queren" => '12', "num" => $num, "mum" => $num, "fee" => 0, "addtime" => time(), "type" => "站外", 'status' => 1]);		$rs[] = db::table('user_coin')->where(['userid' => $userid])->set([$coin . "#+" => $num]);		if (check_arr($rs)) {			db::exec("commit");			db::exec("unlock tables");			exit(json_encode(['success' => '操作成功', 'txid' => $txid]));		} else {			db::exec("rollback");			db::exec("unlock tables");			exit(json_encode(['err' => '操作失败']));		}	}	public function check_order()	{		$key = iv('get.secret_key');		if (!$key) {			exit(json_encode(['err' => '秘钥不能为空']));		}		if ($key != KEY_CODE) {			exit(json_encode(['err' => '秘钥错误']));		}		$txid = iv('get.txid');		if (!check($txid, 'a')) {			exit(json_encode(['err' => 'txid格式错误']));		}		$coin_in = db::table('coin_in')->where(['txid' => $txid])->find();		if (empty($coin_in)) {			exit(json_encode(['msg' => '0']));		}		exit(json_encode(['msg' => '1']));	}}