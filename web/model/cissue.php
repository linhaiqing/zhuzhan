<?phpnamespace model;use Move\db;class cissue extends common{	public function up($userid, $num, $paypassword, $type, $info)	{		if (!$userid || !check($userid, "d")) {			return ['用户id格式错误'];		}		if (!$num || !check($num, "d")) {			return ["充值金额数量格式错误"];		}		if (!$paypassword || !check($paypassword, "password")) {			return ["交易密码格式错误"];		}		if (!$type || !check($type, "w")) {			return ["充值类型格式错误"];		}		if (!$info || !check($info, "a")) {			return ["账户信息格式错误"];		}		$user = db::table("user")->where(["id" => $userid])->find();		if (!$user) {			return ["用户不存在"];		}		if ($user["paypassword"] != hashs($paypassword)) {			return ["交易密码错误"];		}		$issue = db::table("cissue")->find();		if (!$issue) {			return ["认购项目不存在"];		}		if (!isset($issue["strtime"]) || $issue["strtime"] > time()) {			return ["当前充值认购还未开始"];		}		if (!isset($issue["sndtime"]) || $issue["sndtime"] < time()) {			return ["当前充值认购已经结束"];		}		if (!isset($issue["status"]) || $issue["status"] != 1) {			return ["当前充值认购没有开启"];		}		if (isset($issue["min"]) && $issue["min"] > 0 && $num < $issue["min"]) {			return ["充值金额不得少于" . $issue["min"]];		}		if (isset($issue["max"]) && $issue["max"] > 0 && $num > $issue["max"]) {			return ["充值金额不得大于" . $issue["max"]];		}		$mum = $num / $issue['price'];		if (isset($issue["num"]) && isset($issue["deal"]) && $mum > ($issue["num"] - $issue["deal"])) {			return ["认购数量超过当前剩余量"];		}		if (!$issue["buycoin"]) {			return ["付款币种配置错误"];		}		$rs = db::table("cissue_log")->add(["userid" => $userid, 'type' => $type, 'info' => $info, "name" => $issue["name"], "coinname" => $issue["coinname"], "buycoin" => $issue["buycoin"], "price" => $issue["price"], "num" => $mum, "mum" => $num, "ci" => $issue["ci"], "jian" => $issue["jian"], "jiedong" => $issue["jiedong"], "jd" => 0, "addtime" => time(), "status" => 0]);		if ($rs) {			return [$rs, 1];		} else {			return ["fail"];		}	}	public function queue()	{		db::exec("set autocommit=0");		db::exec("lock tables #pre#user write ,#pre#cissue write ,#pre#cissue_log write ,#pre#user_coin write,#pre#cissue_invit write");		$ids = [];		$issue_data = db::table('cissue_log')->where(['status' => 2])->order("addtime")->limit(5)->select();		if (!$issue_data) {			db::exec("rollback");			db::exec("unlock tables");			return ['没有预处理订单'];		}		foreach ($issue_data as $k => $v) {			$user = db::table("user")->where(["id" => $v['userid']])->find();			$issue = db::table('cissue')->find();			$invit_fee = 0;			$invit_1 = 0;			$invit_2 = 0;			$invit_3 = 0;			if (isset($issue["invit_kai"]) && $issue["invit_kai"] && isset($issue["invit_coin"]) && $issue["invit_coin"]) {				if ($issue["invit_fee"] > 0) {					$invit_fee = num((floor($v['num']) / 100 * $issue["invit_fee"]), 8);					if (isset($issue["invit_type"]) && $issue["invit_type"] == 1) {						$invit_fee = num((floor($v['mum']) / 100 * $issue["invit_fee"]), 8);					}				}				if ($issue["invit_1"] > 0) {					$invit_1 = num((floor($v['num']) / 100 * $issue["invit_1"]), 8);					if (isset($issue["invit_type"]) && $issue["invit_type"] == 1) {						$invit_1 = num((floor($v['mum']) / 100 * $issue["invit_1"]), 8);					}				}				if ($issue["invit_2"] > 0) {					$invit_2 = num((floor($v['num']) / 100 * $issue["invit_2"]), 8);					if (isset($issue["invit_type"]) && $issue["invit_type"] == 1) {						$invit_2 = num((floor($v['mum']) / 100 * $issue["invit_2"]), 8);					}				}				if ($issue["invit_3"] > 0) {					$invit_3 = num((floor($v['num']) / 100 * $issue["invit_3"]), 8);					if (isset($issue["invit_type"]) && $issue["invit_type"] == 1) {						$invit_3 = num((floor($v['mum']) / 100 * $issue["invit_3"]), 8);					}				}			}			$rs[] = db::table("cissue")->where(["id" => $issue['id']])->setInc("deal", $v['num']);			if (($issue["deal"] + $v['num']) >= $issue["num"]) {				$rs[] = db::table("cissue")->where(["id" => $issue['id']])->set(["status" => 0]);			}			$rs[] = db::table("cissue_log")->where(['id' => $v['id']])->save(['status' => 3]);			if ($invit_fee && $issue["invit_kai"] && $issue["invit_coin"]) {				$rs[] = db::table("user_coin")->where(["userid" => $v['userid']])->setInc($issue["invit_coin"], $invit_fee);				$rs[] = db::table("cissue_invit")->add(["userid" => $v['userid'], "invit" => $v['userid'], "name" => "赠送自己", "type" => "充值认购赠送", "num" => $v['mum'], "fee" => $invit_fee, "feecoin" => $issue["invit_coin"], "addtime" => time(), "status" => 1]);			}			if ($invit_1 && $issue["invit_kai"] && $issue["invit_coin"] && $user["invit_1"]) {				$rs[] = db::table("user_coin")->where(["userid" => $user["invit_1"]])->setInc($issue["invit_coin"], $invit_1);				$rs[] = db::table("cissue_invit")->add(["userid" => $user["invit_1"], "invit" => $v['userid'], "name" => "一代充值认购赠送", "type" => "充值认购赠送", "num" => $v['mum'], "fee" => $invit_1, "feecoin" => $issue["invit_coin"], "addtime" => time(), "status" => 1]);			}			if ($invit_2 && $issue["invit_kai"] && $issue["invit_coin"] && $user["invit_2"]) {				$rs[] = db::table("user_coin")->where(["userid" => $user["invit_2"]])->setInc($issue["invit_coin"], $invit_2);				$rs[] = db::table("cissue_invit")->add(["userid" => $user["invit_2"], "invit" => $v['userid'], "name" => "二代充值认购赠送", "type" => "充值认购赠送", "num" => $v['mum'], "fee" => $invit_2, "feecoin" => $issue["invit_coin"], "addtime" => time(), "status" => 1]);			}			if ($invit_3 && $issue["invit_kai"] && $issue["invit_coin"] && $user["invit_3"]) {				$rs[] = db::table("user_coin")->where(["userid" => $user["invit_3"]])->setInc($issue["invit_coin"], $invit_3);				$rs[] = db::table("cissue_invit")->add(["userid" => $user["invit_3"], "invit" => $v['userid'], "name" => "三代充值认购赠送", "type" => "充值认购赠送", "num" => $v['mum'], "fee" => $invit_3, "feecoin" => $issue["invit_coin"], "addtime" => time(), "status" => 1]);			}			if (check_arr($rs)) {				$ids[] = db::table('cissue_log')->where(['id' => $v['id']])->save(['status' => 3]);				db::exec("commit");			} else {				db::exec("rollback");			}		}		db::exec("unlock tables");		$ids = json_encode($ids);		return ['处理成功' . $ids];	}	public static function jiedong($userid, $id)	{		if (!$userid || !check($userid, "d")) {			return ["用户id格式错误"];		}		if (!$id || !check($id, "d")) {			return ["解冻id格式错误"];		}		$user = db::table("user")->where(["id" => $userid])->find();		if (!$user) {			return ['用户不存在'];		}		$rs = [];		db::exec("set autocommit=0");		db::exec("lock tables #pre#cissue write , #pre#cissue_log write ,#pre#user_coin write");		$issue_log = db::table("cissue_log")->where(["id" => $id])->find();		if (!$issue_log) {			db::exec("rollback");			db::exec("unlock tables");			return ['认购记录不存在'];		}		if (!isset($issue_log["userid"]) || $issue_log["userid"] != $userid) {			db::exec("rollback");			db::exec("unlock tables");			return ['用户非法'];		}		if (!isset($issue_log["status"]) || $issue_log["status"] != 3) {			db::exec("rollback");			db::exec("unlock tables");			return ['当前状态不可解冻'];		}		if (!isset($issue_log["jd"]) || !isset($issue_log["ci"]) || $issue_log["jd"] >= $issue_log["ci"]) {			db::exec("rollback");			db::exec("unlock tables");			return ['解冻次数已完成'];		}		$jd_num = num(($issue_log["num"] / $issue_log["ci"]), 8);		if ($jd_num <= 0) {			db::exec("rollback");			db::exec("unlock tables");			return ['应该解冻数量错误'];		}		if (isset($issue_log["jiedong"]) && $issue_log["jiedong"] == 1) {			$issue = db::table("cissue")->find();			if ($issue) {				if ($issue["sndtime"] > time()) {					db::exec("rollback");					db::exec("unlock tables");					return ['当前认购项目还没有结束不能解冻'];				}			} else {				db::exec("rollback");				db::exec("unlock tables");				return ['当前认购项目不存在'];			}		}		if (isset($issue_log["jian"]) && $issue_log["jian"] > 0) {			$time = ($issue_log["endtime"] + 60 * 60 * $issue_log["jian"]);			if ($time > time()) {				db::exec("rollback");				db::exec("unlock tables");				return ["解冻时间还没有到,请在<br>【 " . addtime($time) . " 】<br>之后再次进行解冻操作"];			}		}		$rs[] = db::table("user_coin")->where(["userid" => $userid])->setInc($issue_log["coinname"], $jd_num);		$rs[] = db::table("cissue_log")->where(["id" => $id])->set(["endtime" => time(), "jd#+" => 1]);		if (($issue_log["jd"] + 1) >= $issue_log["ci"]) {			$rs[] = db::table("cissue_log")->where(["id" => $id])->save(["status" => 4]);		}		if (check_arr($rs)) {			db::exec("commit");			db::exec("unlock tables");			return ['解冻成功', 1];		} else {			db::exec("rollback");			db::exec("unlock tables");			return ["解冻失败"];		}	}}