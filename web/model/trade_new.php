<?phpnamespace model;use Move\db;class trade_new extends common{	public function invit_queue()	{		$str_time = mktime(0, 0, 0, date('m'), date('d'), date('Y'));		$trade_log_arr = db::table('trade_log')->where(['invit' => 0, 'addtime#>' => $str_time])->limit(100)->select();		if (empty($trade_log_arr)) {			return ['暂无项目'];		}		if ($trade_log_arr) {			foreach ($trade_log_arr as $k => $v) {				$this->invit_jisuan($v['id']);			}		}		return ['计算完成'];	}	public function invit_jisuan($tradeid = null)	{		if (!check($tradeid, 'd')) {			return ['参数个数错误'];		}		$rs = [];		db::exec("set autocommit=0");		db::exec("lock tables #pre#user write ,#pre#trade_market write ,#pre#trade_log write ,#pre#user_coin write,#pre#user_invit write");		$trade_log = db::table('trade_log')->where(['id' => $tradeid])->find();		if (!$trade_log) {			db::exec("rollback");			db::exec("unlock tables");			return ['订单不存在'];		}		if (isset($trade_log['invit']) && $trade_log['invit']) {			db::exec("rollback");			db::exec("unlock tables");			return ['订单已经赠送'];		}		$trade_market = db::table('trade_market')->where(['name' => $trade_log['market']])->find();		if (!$trade_market) {			db::exec("rollback");			db::exec("unlock tables");			return ['市场不存在'];		}		$user_buy = db::table('user')->where(['id' => $trade_log['userid']])->find();		if (!$user_buy) {			db::exec("rollback");			db::exec("unlock tables");			return ['买家错误'];		}		$user_sell = db::table('user')->where(['id' => $trade_log['peerid']])->find();		if (!$user_sell) {			db::exec("rollback");			db::exec("unlock tables");			return ['卖家错误'];		}		$invit_buy_0 = 0;		$invit_buy_1 = 0;		$invit_buy_2 = 0;		$invit_buy_3 = 0;		$invit_sell_0 = 0;		$invit_sell_1 = 0;		$invit_sell_2 = 0;		$invit_sell_3 = 0;		$num_buy = 0;		$num_sell = 0;		if ($trade_market['invit_buy_kai'] && $trade_market['invit_buy_coin']) {			if ($trade_market['invit_buy_coin'] == "cny") {				$num_buy = $trade_log['mum'];			} else {				$num_buy = $trade_log['num'];			}			if ($trade_market['invit_buy_0'] > 0) {				if ($trade_market['invit_buy_coin'] == "cny") {					$invit_buy_0 = num(($trade_log['mum'] / 100 * $trade_market['invit_buy_0']), 8);				} else {					$invit_buy_0 = num(($trade_log['num'] / 100 * $trade_market['invit_buy_0']), 8);				}			}			if ($trade_market['invit_buy_1'] > 0) {				if ($trade_market['invit_buy_coin'] == "cny") {					$invit_buy_1 = num(($trade_log['mum'] / 100 * $trade_market['invit_buy_1']), 8);				} else {					$invit_buy_1 = num(($trade_log['num'] / 100 * $trade_market['invit_buy_1']), 8);				}			}			if ($trade_market['invit_buy_2'] > 0) {				if ($trade_market['invit_buy_coin'] == "cny") {					$invit_buy_2 = num(($trade_log['mum'] / 100 * $trade_market['invit_buy_2']), 8);				} else {					$invit_buy_2 = num(($trade_log['num'] / 100 * $trade_market['invit_buy_2']), 8);				}			}			if ($trade_market['invit_buy_3'] > 0) {				if ($trade_market['invit_buy_coin'] == "cny") {					$invit_buy_3 = num(($trade_log['mum'] / 100 * $trade_market['invit_buy_3']), 8);				} else {					$invit_buy_3 = num(($trade_log['num'] / 100 * $trade_market['invit_buy_3']), 8);				}			}		}		if ($trade_market['invit_sell_kai'] && $trade_market['invit_sell_coin']) {			if ($trade_market['invit_sell_coin'] == "cny") {				$num_sell = $trade_log['mum'];			} else {				$num_sell = $trade_log['num'];			}			if ($trade_market['invit_sell_0'] > 0) {				if ($trade_market['invit_sell_coin'] == "cny") {					$invit_sell_0 = num(($trade_log['mum'] / 100 * $trade_market['invit_sell_0']), 8);				} else {					$invit_sell_0 = num(($trade_log['num'] / 100 * $trade_market['invit_sell_0']), 8);				}			}			if ($trade_market['invit_sell_1'] > 0) {				if ($trade_market['invit_sell_coin'] == "cny") {					$invit_sell_1 = num(($trade_log['mum'] / 100 * $trade_market['invit_sell_1']), 8);				} else {					$invit_sell_1 = num(($trade_log['num'] / 100 * $trade_market['invit_sell_1']), 8);				}			}			if ($trade_market['invit_sell_2'] > 0) {				if ($trade_market['invit_sell_coin'] == "cny") {					$invit_sell_2 = num(($trade_log['mum'] / 100 * $trade_market['invit_sell_2']), 8);				} else {					$invit_sell_2 = num(($trade_log['num'] / 100 * $trade_market['invit_sell_2']), 8);				}			}			if ($trade_market['invit_sell_3'] > 0) {				if ($trade_market['invit_sell_coin'] == "cny") {					$invit_sell_3 = num(($trade_log['mum'] / 100 * $trade_market['invit_sell_3']), 8);				} else {					$invit_sell_3 = num(($trade_log['num'] / 100 * $trade_market['invit_sell_3']), 8);				}			}		}		$rs[] = db::table("trade_log")->where(["id" => $tradeid])->set(["invit" => 1]);		if ($trade_market['invit_buy_kai'] && $trade_market['invit_buy_coin'] && $user_buy['id'] && $invit_buy_0 > 0) {			$rs[] = db::table("user_coin")->where(["userid" => $user_buy['id']])->setInc($trade_market['invit_buy_coin'], $invit_buy_0);			$rs[] = db::table("user_invit")->add(["userid" => $user_buy['id'], "invit" => $user_buy['id'], "gameid" => $trade_log['id'], "name" => $trade_log['market'] . "买入赠送自己", "type" => "交易赠送", "num" => $num_buy, "fee" => $invit_buy_0, "feecoin" => $trade_market['invit_buy_coin'], "addtime" => time(), "status" => 1]);		}		if ($trade_market['invit_buy_kai'] && $trade_market['invit_buy_coin'] && $user_buy['invit_1'] && $invit_buy_1 > 0) {			$rs[] = db::table("user_coin")->where(["userid" => $user_buy['invit_1']])->setInc($trade_market['invit_buy_coin'], $invit_buy_1);			$rs[] = db::table("user_invit")->add(["userid" => $user_buy['invit_1'], "invit" => $user_buy['id'], "gameid" => $trade_log['id'], "name" => $trade_log['market'] . "买入一代赠送", "type" => "交易赠送", "num" => $num_buy, "fee" => $invit_buy_1, "feecoin" => $trade_market['invit_buy_coin'], "addtime" => time(), "status" => 1]);		}		if ($trade_market['invit_buy_kai'] && $trade_market['invit_buy_coin'] && $user_buy['invit_2'] && $invit_buy_2 > 0) {			$rs[] = db::table("user_coin")->where(["userid" => $user_buy['invit_2']])->setInc($trade_market['invit_buy_coin'], $invit_buy_2);			$rs[] = db::table("user_invit")->add(["userid" => $user_buy['invit_2'], "invit" => $user_buy['id'], "gameid" => $trade_log['id'], "name" => $trade_log['market'] . "买入二代赠送", "type" => "交易赠送", "num" => $num_buy, "fee" => $invit_buy_2, "feecoin" => $trade_market['invit_buy_coin'], "addtime" => time(), "status" => 1]);		}		if ($trade_market['invit_buy_kai'] && $trade_market['invit_buy_coin'] && $user_buy['invit_3'] && $invit_buy_3 > 0) {			$rs[] = db::table("user_coin")->where(["userid" => $user_buy['invit_3']])->setInc($trade_market['invit_buy_coin'], $invit_buy_3);			$rs[] = db::table("user_invit")->add(["userid" => $user_buy['invit_3'], "invit" => $user_buy['id'], "gameid" => $trade_log['id'], "name" => $trade_log['market'] . "买入三代赠送", "type" => "交易赠送", "num" => $num_buy, "fee" => $invit_buy_3, "feecoin" => $trade_market['invit_buy_coin'], "addtime" => time(), "status" => 1]);		}		if ($trade_market['invit_sell_kai'] && $trade_market['invit_sell_coin'] && $user_sell['id'] && $invit_sell_0 > 0) {			$rs[] = db::table("user_coin")->where(["userid" => $user_sell['id']])->setInc($trade_market['invit_sell_coin'], $invit_sell_0);			$rs[] = db::table("user_invit")->add(["userid" => $user_sell['id'], "invit" => $user_sell['id'], "gameid" => $trade_log['id'], "name" => $trade_log['market'] . "卖出赠送自己", "type" => "交易赠送", "num" => $num_sell, "fee" => $invit_sell_0, "feecoin" => $trade_market['invit_sell_coin'], "addtime" => time(), "status" => 1]);		}		if ($trade_market['invit_sell_kai'] && $trade_market['invit_sell_coin'] && $user_sell['invit_1'] && $invit_sell_1 > 0) {			$rs[] = db::table("user_coin")->where(["userid" => $user_sell['invit_1']])->setInc($trade_market['invit_sell_coin'], $invit_sell_1);			$rs[] = db::table("user_invit")->add(["userid" => $user_sell['invit_1'], "invit" => $user_sell['id'], "gameid" => $trade_log['id'], "name" => $trade_log['market'] . "卖出一代赠送", "type" => "交易赠送", "num" => $num_sell, "fee" => $invit_sell_1, "feecoin" => $trade_market['invit_sell_coin'], "addtime" => time(), "status" => 1]);		}		if ($trade_market['invit_sell_kai'] && $trade_market['invit_sell_coin'] && $user_sell['invit_2'] && $invit_sell_2 > 0) {			$rs[] = db::table("user_coin")->where(["userid" => $user_sell['invit_2']])->setInc($trade_market['invit_sell_coin'], $invit_sell_2);			$rs[] = db::table("user_invit")->add(["userid" => $user_sell['invit_2'], "invit" => $user_sell['id'], "gameid" => $trade_log['id'], "name" => $trade_log['market'] . "卖出二代赠送", "type" => "交易赠送", "num" => $num_sell, "fee" => $invit_sell_2, "feecoin" => $trade_market['invit_sell_coin'], "addtime" => time(), "status" => 1]);		}		if ($trade_market['invit_sell_kai'] && $trade_market['invit_sell_coin'] && $user_sell['invit_3'] && $invit_sell_3 > 0) {			$rs[] = db::table("user_coin")->where(["userid" => $user_sell['invit_3']])->setInc($trade_market['invit_sell_coin'], $invit_sell_3);			$rs[] = db::table("user_invit")->add(["userid" => $user_sell['invit_3'], "invit" => $user_sell['id'], "gameid" => $trade_log['id'], "name" => $trade_log['market'] . "卖出三代赠送", "type" => "交易赠送", "num" => $num_sell, "fee" => $invit_sell_3, "feecoin" => $trade_market['invit_sell_coin'], "addtime" => time(), "status" => 1]);		}		if (check_arr($rs)) {			db::exec("commit");			db::exec("unlock tables");			return ["计算成功", 1];		} else {			db::exec("rollback");			db::exec("unlock tables");			return ["计算失败" . implode("|", $rs)];		}	}}