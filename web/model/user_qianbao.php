<?phpnamespace model;use Move\db;class user_qianbao extends common{	public function get_info($userid = NULL)	{		if (!$userid) {			return false;		}		$res = db::table("user_qianbao")->where(["userid" => $userid])->find();		if (!empty($res)) {			return $res;		} else {			return false;		}	}	public function add_qianbao($data = [])	{		if (!$data) {			return ["参数错误"];		}		if (!isset($data["userid"]) || !check($data["userid"], "d")) {			return ["用户id格式错误.userid"];		}		if (!isset($data["coinname"]) || !check($data["coinname"], "w") || mb_strlen($data["coinname"]) > 20) {			return ["币种格式错误.coinname"];		}		if (!isset($data["name"]) || !check($data["name"], "a") || mb_strlen($data["name"]) > 10) {			return ["钱包标识格式错误.name"];		}		if (!isset($data["addr"]) || !check($data["addr"], "wd") || mb_strlen($data["addr"]) > 80) {			return ["钱包地址格式错误.addr"];		}		if (!isset($data["paypassword"]) || !check($data["paypassword"], "password") || mb_strlen($data["paypassword"]) > 50) {			return ["交易密码格式错误.paypassword"];		}		$user = db::table("user")->where(["id" => $data["userid"]])->find();		if (!$user) {			return ["用户不存在"];		}		if ($user["paypassword"] != hashs($data["paypassword"])) {			return ["交易密码错误"];		}		db::exec("set autocommit = 0");		db::exec("lock tables #pre#user_qianbao write,#pre#user_log write");		$user_qianbao = db::table("user_qianbao")->where(["userid" => $data["userid"], "coinname" => $data["coinname"]])->select();		if (count($user_qianbao) >= 9) {			db::exec("unlock tables");			return ["每个币种最多只能添加10个地址"];		}		$rs = [];		$rs[] = db::table("user_qianbao")->add(["userid" => $data["userid"], "coinname" => $data["coinname"], "name" => $data["name"], "addr" => $data["addr"], "addtime" => time(), "status" => 1]);		$rs[] = db::table("user_log")->add(["userid" => $data["userid"], "type" => "添加", "remark" => "添加钱包地址，备注名称" . $data["name"], "addip" => get_ip(), "addr" => get_city(), "addtime" => time(), "status" => 1]);		if (check_arr($rs)) {			db::exec("commit");			db::exec("unlock tables");			return ["操作成功", 1];		} else {			db::exec("rollback");			db::exec("unlock tables");			return ["操作失败"];		}	}	public function del_qianbao($userid = null, $id = null, $paypassword = null)	{		if (!$userid || !check($userid, "d")) {			return ["用户id格式错误"];		}		if (!$id || !check($id, "d")) {			return ["地址id格式错误"];		}		if (!$paypassword || !check($paypassword, "password")) {			return ["交易密码格式错误"];		}		$user = db::table("user")->where(["id" => $userid])->find();		if (!$user) {			return ["用户不存在"];		}		if ($user["paypassword"] != hashs($paypassword)) {			return ["交易密码错误"];		}		db::exec("set autocommit = 0");		db::exec("lock tables #pre#user_log write,#pre#user_qianbao write");		$qianbao = db::table("user_qianbao")->where(["id" => $id])->find();		if (!$qianbao) {			db::exec("unlock tables");			return ["地址不存在"];		}		if ($qianbao["userid"] != $userid) {			return ["非法访问"];		}		$rs = [];		$rs[] = db::table("user_qianbao")->where(["id" => $id])->delete();		$rs[] = db::table("user_log")->add(["userid" => $userid, "type" => "删除", "remark" => "删除钱包地址，备注名称" . $qianbao["name"], "addip" => get_ip(), "addr" => get_city(), "addtime" => time(), "status" => 1]);		if (check_arr($rs)) {			db::exec("commit");			db::exec("unlock tables");			return ["操作成功", 1];		} else {			db::exec("rollback");			db::exec("unlock tables");			return ["操作失败"];		}	}	public function info_by_coinid($uid, $coinid)	{		return db::table("user_qianbao")->where(["userid" => $uid, "coinid" => $coinid])->select();	}	public function info_by_id($uid, $id)	{		return db::table("user_qianbao")->where(["userid" => $uid, "id" => $id])->select();	}}